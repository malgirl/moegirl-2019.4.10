{"parse":{"title":"\u6a21\u5757:\u6218\u8230\u5c11\u5973","pageid":168902,"wikitext":{"*":"local data = mw.loadData(\"\u6a21\u5757:\u6218\u8230\u5c11\u5973:\u7279\u6b8a\u6570\u636e\")\nlocal enemies = mw.loadData(\"\u6a21\u5757:\u6218\u8230\u5c11\u5973:\u654c\u8230\u5c5e\u6027\u5217\u8868\")\nlocal alias = mw.loadData(\"\u6a21\u5757:\u6218\u8230\u5c11\u5973:\u522b\u540d\")\nlocal ships = data.ships\nlocal equipts = data.equipts\nlocal skills = data.skills\nlocal tr = data.tr\nlocal equiptDisplay = data.equiptDisplay\nlocal byIndex = data.byIndex\nlocal p = {}\n\n-- Tables --\nlocal shipTypeAbbrName = { CV='\u822a\u6bcd', CVL='\u8f7b\u6bcd', AV='\u88c5\u6bcd', BB='\u6218\u5217', BBV='\u822a\u6218', BC='\u6218\u5de1', CA='\u91cd\u5de1', CL='\u8f7b\u5de1', CLT='\u96f7\u5de1', CAV='\u822a\u5de1', BM='\u91cd\u70ae', DD='\u9a71\u9010', ASDG='\u5bfc\u9a71', SS='\u6f5c\u8247', SC='\u70ae\u6f5c', AP='\u8865\u7ed9' }\n\nlocal shipTypeFullName = {\n    CV='\u822a\u7a7a\u6bcd\u8230', CVL='\u8f7b\u578b\u822a\u7a7a\u6bcd\u8230', BB='\u6218\u5217\u8230', BBV='\u822a\u7a7a\u6218\u5217\u8230', BC='\u6218\u5217\u5de1\u6d0b\u8230',\n    CA='\u91cd\u5de1\u6d0b\u8230', CL='\u8f7b\u5de1\u6d0b\u8230', CLT='\u91cd\u96f7\u88c5\u5de1\u6d0b\u8230', CAV='\u822a\u7a7a\u5de1\u6d0b\u8230', BM='\u6d45\u6c34\u91cd\u70ae\u8230', DD='\u9a71\u9010\u8230', ASDG='\u5bfc\u5f39\u9a71\u9010\u8230', SS='\u6f5c\u6c34\u8247', SC='\u91cd\u70ae\u6f5c\u8247', AP='\u8865\u7ed9\u8230'\n}\n\nlocal color = { 'black', 'green', 'blue', 'purple', 'orange', 'red' }\n\nlocal rangeName = { '\u65e0', '\u77ed', '\u4e2d', '\u957f', '\u8d85\u957f' }\n\n-- 6\u661f\u5b57\u4f53\u989c\u8272\u7684\u8c03\u8272\u677f, \u6bcf\u884c\u4e00\u4e2a\u989c\u8272(\u683c\u5f0f{r,g,b}), \u4ece\u6700\u5de6\u5230\u6700\u53f3\u5747\u5300\u5206\u5e03, \u652f\u6301\u4efb\u610f\u79cd\u989c\u8272\nlocal palette = {\n    { 0xf3, 0xc7, 0x41 },\n    { 0xe2, 0x1d, 0x3a },\n    { 0xbb, 0x44, 0xb8 },\n    { 0x3c, 0x7a, 0xf7 }\n}\n\nlocal function rainbow(str, bold)\n    local n = mw.ustring.len(str)\n    local m = #palette - 1\n\n    local hasDot = false\n    if mw.ustring.sub(str, n - 1, n - 1) == '\u00b7' then\n        hasDot = true\n        str = mw.ustring.gsub(str, '\u00b7\u6539', '\u6539')\n        n = n - 1\n    end\n\n    local ret = ''\n    local dbg = ''\n    for i = 1,n do\n        local p = i - 0.5\n        local r = 1\n        while p * m > n * r do\n            r = r + 1\n        end\n        local l = r - 1\n        local pl = n * l / m\n        local pr = n * r / m\n        local wl = (pr - p) / (pr - pl)\n        local wr = (p - pl) / (pr - pl)\n        local cr = math.floor(palette[l + 1][1] * wl + palette[r + 1][1] * wr + 0.5)\n        local cg = math.floor(palette[l + 1][2] * wl + palette[r + 1][2] * wr + 0.5)\n        local cb = math.floor(palette[l + 1][3] * wl + palette[r + 1][3] * wr + 0.5)\n        local color = string.format('#%02x%02x%02x', cr, cg, cb)\n        \n        local ch = mw.ustring.sub(str, i, i)\n        if hasDot and i == n then ch = \"\u00b7\" .. ch end\n        if bold then ch = \"'''\" .. ch .. \"'''\" end\n        ret = ret .. \"<span style='color:\" .. color .. \";'>\" .. ch .. \"</span>\"\n    end\n    return ret\nend\n\nfunction addColor(str, rarity, bold)\n    if rarity == 6 then\n        return rainbow(str, bold)\n    end\n    if rarity < 1 then rarity = 1 end\n    if bold then str = \"'''\" .. str .. \"'''\" end\n    return '<span style=\"color:' .. color[rarity] .. ';\">' .. str .. '</span>'\nend\n\n-- ## Helper functions ##\n\nlocal function formatFloat(x)\n    if x == 0 then return 0 end\n    x = math.floor(x * 100 + 0.5) / 100\n    return string.format('%.2f', x)\nend\n\nlocal function getImage(aliasName, index, prefix, size)\n    local ret = prefix .. index .. '.png'\n    if aliasName ~= nil and aliasName ~= '' then\n        ret = aliasName .. '.png'\n    end\n    if size ~= nil then\n        ret = ret .. '|' .. size\n    end\n    return '[[File:' .. ret .. ']]'\nend\n\nlocal function notContains(str, ch)\n    if str == nil then return true end\n    return string.find(str, ch) == nil\nend\n\n-- ## Ship functions ##\n\nlocal function getBaseName(name)\n    if alias.shipBaseName[name] ~= nil then\n        return alias.shipBaseName[name]\n    end\n\n    name = string.gsub(name, '\u00b7\u6539', '')\n    name = string.gsub(name, '(\u7279\u6b8a)', '')\n\n    if mw.ustring.sub(name, 1, 2) == '\u822a\u6bcd' then return '\u654c\u822a\u7a7a\u6bcd\u8230' end\n    if mw.ustring.sub(name, 1, 2) == '\u8f7b\u6bcd' then return '\u654c\u8f7b\u578b\u822a\u6bcd' end\n    if mw.ustring.sub(name, 1, 2) == '\u6218\u5217' then return '\u654c\u6218\u5217\u8230' end\n    if mw.ustring.sub(name, 1, 2) == '\u6218\u5de1' then return '\u654c\u6218\u5217\u5de1\u6d0b\u8230' end\n    if mw.ustring.sub(name, 1, 2) == '\u65d7\u8230' then return '\u654c\u822a\u7a7a\u6218\u5217\u8230' end\n    if mw.ustring.sub(name, 1, 2) == '\u91cd\u5de1' then return '\u654c\u91cd\u5de1\u6d0b\u8230' end\n    if mw.ustring.sub(name, 1, 2) == '\u96f7\u5de1' then return '\u654c\u91cd\u96f7\u88c5\u5de1\u6d0b\u8230' end\n    if mw.ustring.sub(name, 1, 2) == '\u8f7b\u5de1' then return '\u654c\u8f7b\u5de1\u6d0b\u8230' end\n    if mw.ustring.sub(name, 1, 2) == '\u9a71\u9010' then return '\u654c\u9a71\u9010\u8230' end\n    if mw.ustring.sub(name, 1, 2) == '\u6f5c\u8247' then return '\u6f5c\u8247' end\n    if mw.ustring.sub(name, 1, 2) == '\u8865\u7ed9' then return '\u654c\u8865\u7ed9\u8230' end\n\n    return name\nend\n\nlocal function formatShipTitle(shipName, removeStyles, frame)\n    local isBold = notContains(removeStyles, 'b')\n    local hasColor = notContains(removeStyles, 'c')\n    local hasLink = notContains(removeStyles, 'l')\n    \n    local ret = shipName\n    local ship = ships[shipName]\n    if ship == nil then ship = enemies[fixEnemyName(shipName)] end  -- backward compatibility\n\n    if hasColor then\n        ret = addColor(ret, ship.rarity, isBold)\n    elseif isBold then\n        ret = \"'''\" .. ret .. \"'''\"\n    end\n    if hasLink then\n        ret = '[[\u6218\u8230\u5c11\u5973:' .. getBaseName(shipName) .. '|' .. ret .. ']]'\n    end\n    return ret\nend\n\n-- Get an attribute of a ship.\n-- Return in 'BASE(MAX)' format if the attribute can grow with level or strengthen.\nlocal function getAttr(shipName, attrName)\n    local ship = ships[shipName]\n\n    local canGrow = false\n    for i,v in pairs({'\u706b\u529b', '\u88c5\u7532', '\u9c7c\u96f7', '\u5bf9\u7a7a', '\u56de\u907f', '\u5bf9\u6f5c', '\u7d22\u654c'}) do\n        if attrName == v then\n            canGrow = true\n            break\n        end\n    end\n    if canGrow then\n        local base = ship[tr['\u57fa\u7840' .. attrName]]\n        local max_ = ship[tr[attrName .. '\u4e0a\u9650']]\n        if base == max_ then\n            return base\n        else\n            return base .. '(' .. max_ .. ')'\n        end\n\n    elseif attrName == '\u642d\u8f7d' then\n        return ship.cap1 + ship.cap2 + ship.cap3 + ship.cap4\n\n    else\n        local ret = ship[tr[attrName]]\n        if ret == nil then ret = '' end  -- some ships lack attributes about modification\n        return ret\n    end\nend\n\n-- Get a list of attributes, splited by '||' (in favor of wiki table).\nlocal function getAttrList(shipName, attrNameList)\n    local ret = ''\n    for i,attrName in pairs(attrNameList) do\n        ret = ret .. getAttr(shipName, attrName) .. '||'\n    end\n    return string.sub(ret, 1, -3)\nend\n\nlocal function getShipNormalImage(shipName, size)\n    return getImage(alias.shipNormalImage[shipName], ships[shipName].index, 'L_NORMAL_', size)\nend\n\nlocal function getShipBrokenImage(shipName, size)\n    return getImage(alias.shipBrokenImage[shipName], ships[shipName].index, 'L_BROKEN_', size)\nend\n\nlocal function getShipDialogue(header, shipName, dialogueType, replace)\n    local ret = '|-\\n|style=\"text-align:center\"|' .. header .. '||'\n    if replace ~= '' and replace ~= nil then\n        return ret .. replace .. '\\n'\n    else\n        if (ships[shipName] == nil) then return '\\n\u8b66\u544a:\u9519\u8bef\u7684\u8239\u540d\"' .. shipName .. '\"\\n\\n' end\n        local d = ships[shipName][dialogueType]\n        if d == nil or d == '' then\n            return ''\n        else\n            return ret .. ships[shipName][dialogueType] .. '\\n'\n        end\n    end\nend\n\n-- ## Equipment functions ##\n\nlocal function formatEquiptListAttr(equiptName, attrName)\n    local equipt = equipts[equiptName]\n    local attr = equipt[tr[attrName]]\n    if attr == nil then attr = 0 end\n    local ret = 'data-sort-value=\"' .. attr .. '\"|'\n    if attrName == '\u5c04\u7a0b' then\n        ret = ret .. rangeName[attr + 1]\n    elseif attrName == '\u8017\u94dd' then\n        ret = attr\n    elseif attr == 0 then\n        ret = ret .. '&zwnj;'\n    elseif attrName == '\u5bf9\u7a7a\u8865\u6b63' then\n        ret = ret .. attr .. '%'\n    elseif attr > 0 then\n        ret = ret .. attrName .. '<wbr>+' .. attr\n    else\n        ret = ret .. attrName .. '<wbr>' .. attr\n    end\n    return ret\nend\n\nlocal function formatEquiptButtonAttr(name, val)\n    if name == '\u5c04\u7a0b' then\n        return name .. ':' .. rangeName[val + 1] .. '<br>'\n    elseif name == '\u5bf9\u7a7a\u8865\u6b63' then\n        return name .. ':' .. val .. '%<br>'\n    elseif name == '\u8017\u94dd' then\n        return ''\n    elseif val > 0 then\n        return name .. '+' .. val .. '<br>'\n    else\n        return name .. val .. '<br>'\n    end\nend\n\n\nlocal function getEquiptIcon(equipt, size)\n    return getImage(alias.equiptIcon[equipt.index], equipt.index, 'Equip_L_', size)\nend\n\nlocal function fixEquiptName(name)\n    name = string.gsub(name, '\u2162', 'III')\n    name = string.gsub(name, '\u2165', 'VI')\n    name = string.gsub(name, '\u65e5\u672c', 'J\u56fd')\n    name = string.gsub(name, '\u5fb7\u56fd', 'G\u56fd')\n    name = string.gsub(name, '\u82f1\u56fd', 'E\u56fd')\n    name = string.gsub(name, '\u7f8e\u56fd', 'U\u56fd')\n    name = string.gsub(name, '\u610f\u5927\u5229', 'I\u56fd')\n    name = string.gsub(name, '\u6cd5\u56fd', 'F\u56fd')\n    name = string.gsub(name, '\u5fb7\u56fd', 'G\u56fd')\n    name = string.gsub(name, '\u82cf\u8054', 'S\u56fd')\n    name = string.gsub(name, '\u4e2d\u56fd', 'C\u56fd')\n    local ret = alias.equiptName[name]\n    if ret == nil then ret = name end\n    return ret\nend\n\nlocal function onShip(equiptName)\n    local ret = ''\n    for i = 1,1300 do\n        local shipName = byIndex[i]\n        if shipName ~= nil then\n            local eq = {ships[shipName].eq1, ships[shipName].eq2, ships[shipName].eq3, ships[shipName].eq4}\n            for k = 1,4 do\n                if eq[k] == equiptName then\n                    if i > 1000 and i < 2000 then\n                        local shipBaseName = byIndex[i - 1000]\n                        ret = ret .. '[[\u6218\u8230\u5c11\u5973:' .. shipBaseName .. '|' .. shipName .. ']]\u3001'\n                    else\n                        ret = ret .. '[[\u6218\u8230\u5c11\u5973:' .. shipName .. '|' .. shipName .. ']]\u3001'\n                    end\n                    break\n                end\n            end\n        end\n    end\n    ret = string.sub(ret, 1, -4)\n    if ret ~= '' and ret ~= nil then\n        ret = ret .. '\u81ea\u5e26'\n    end\n    return ret\nend\n\n-- ## Ship ##\n\np['\u8230\u5a18'] = function(frame)\n    local shipName = frame.args[1]\n    local removeStyles = frame.args[2]\n    return formatShipTitle(shipName, removeStyles, frame)\nend\n\np['\u5c5e\u6027'] = function(frame)\n    local ship = ships[frame.args[1]]\n    if ship == nil then return '' end\n    local attr = frame.args[2]\n    if ship[attr] == nil then return '' end\n    return ship[attr]\nend\n\n-- {{#invoke:\u6218\u8230\u5c11\u5973|\u8230\u5a18\u5c5e\u6027|\u8239\u540d|\u5c5e\u6027\u540d}} -> \u5c5e\u6027\np['\u8230\u5a18\u5c5e\u6027'] = function(frame)\n    local shipName = frame.args[1]\n    local attrName = frame.args[2]\n    return getAttr(shipName, attrName)\nend\n\n-- {{#invoke:\u6218\u8230\u5c11\u5973|\u56fe\u9274\u7f16\u53f7|\u8239\u540d}} -> \u56fe\u9274\u7f16\u53f7\np['\u56fe\u9274\u7f16\u53f7'] = function(frame)\n    return ships[frame.args[1]].index\nend\n\n-- {{#invoke:\u6218\u8230\u5c11\u5973|\u7a00\u6709\u5ea6|\u8239\u540d}} -> \u7a00\u6709\u5ea6\np['\u7a00\u6709\u5ea6'] = function(frame)\n    local shipName = frame.args[1]\n    local colorful = frame.args[2]\n    local r = ships[shipName].rarity\n    if colorful then\n        return \"<span style='color:\" .. color[r] .. \";'>'''\" .. r .. \"'''</span>\"\n    else\n        return r\n    end\nend\n\n-- {{#invoke:\u6218\u8230\u5c11\u5973|\u6539\u9020\u5c5e\u6027|\u8239\u540d|\u5c5e\u6027\u540d}} -> \"\u6539\u524d\u5c5e\u6027 \u2192 \u6539\u540e\u5c5e\u6027\"\np['\u6539\u9020\u5c5e\u6027'] = function(frame)\n    local baseShipName = frame.args[1]\n    local attrName = frame.args[2]\n    local modShipName = byIndex[ships[baseShipName].index + 1000]\n    local baseAttr = getAttr(baseShipName, attrName)\n    local modAttr = getAttr(modShipName, attrName)\n    if baseAttr == modAttr then\n        return baseAttr\n    else\n        return baseAttr .. ' \u2192 ' .. modAttr\n    end\nend\n\n-- {{#invoke:\u6218\u8230\u5c11\u5973|\u8230\u5a18\u5c5e\u6027\u5217\u8868|\u8230\u79cd|\u5c5e\u60271,\u5c5e\u60272,...}}\np['\u8230\u5a18\u5c5e\u6027\u5217\u8868'] = function(frame)\n    local shipType = frame.args[1]\n    local attrNameList = mw.text.split(frame.args[2], ',', true)\n\n    -- table title\n    ret = '|-\\n!colspan=' .. (#attrNameList + 3) .. '|' .. shipTypeAbbrName[shipType] .. '\u5c5e\u6027\u5217\u8868\\n'\n\n    -- table header\n    ret = ret .. '|-\\n!\u56fe\u9274<br>\u7f16\u53f7!!\u5934\u50cf!!\u540d\u79f0'\n    for i,attrName in pairs(attrNameList) do\n        ret = ret .. '!!'\n        if mw.ustring.len(attrName) > 2 then  -- break long headers into two lines\n            ret = ret .. mw.ustring.sub(attrName, 1, 2)\n            local tmp = mw.ustring.sub(attrName, 3, -1)\n            if tmp ~= '\u4e0a\u9650' then\n                ret = ret .. '<br>' .. tmp\n            end\n        else\n            ret = ret .. attrName\n        end\n    end\n    ret = ret .. '\\n'\n\n    -- table content\n    for i = 1,1300 do  -- keys of table will be sorted as string by default (11>2)\n        local shipName = byIndex[i]\n        if shipName ~= nil and ships[shipName].type == shipType then\n            ret = ret .. '|-\\n|' .. i\n            ret = ret .. '||' .. getShipProfile(shipName, '150px')\n            ret = ret .. '||' .. formatShipTitle(shipName)\n            ret = ret .. '||' .. getAttrList(shipName, attrNameList) ..'\\n'\n        end\n    end\n    return ret\nend\n\np['\u8230\u5a18\u7acb\u7ed8'] = function(frame)\n    local shipName = frame.args[1]\n    local size = frame.args[2]\n    return getShipNormalImage(shipName, size)\nend\n\np['\u5927\u7834\u7acb\u7ed8'] = function(frame)\n    local shipName = frame.args[1]\n    local size = frame.args[2]\n    return getShipBrokenImage(shipName, size)\nend\n\nfunction getShipProfile(shipName, size)\n    local ret = alias.profile[shipName]\n    if ret == nil then\n        local tmp = ships[shipName]\n        if tmp == nil then return shipName end\n        ret = ships[shipName].index\n    end\n    ret = '[[File:Warship_Girls_icon_' .. ret .. '.png|link=\u6218\u8230\u5c11\u5973:' .. getBaseName(shipName)\n    if size ~= nil and size ~= '' then ret = ret .. '|' .. size end\n    return ret .. ']]'\nend\n\np['\u5934\u50cf'] = function(frame)\n    return getShipProfile(frame.args[1], frame.args[2])\nend\n\np['\u53f0\u8bcd'] = function(frame)\n    local shipName = frame.args[1]\n    local dialogue = frame.args[2]\n    local force = frame.args[3]\n    if force ~= nil and force ~= '' then return force end\n    if ships[shipName] == nil then return \"none\" \n    else return ships[shipName][dialogue] end\nend\n\nfunction skillDesc(skillName)\n    local desc = skills[skillName]\n    if desc == nil then return '' end\n    desc = desc:gsub('_G%[_', '<span style=\"color:green;\">')\n    desc = desc:gsub('_R%[_', '<span style=\"color:red;\">')\n    desc = desc:gsub('_%]_', '</span>')\n    return desc\nend\n\np['\u6280\u80fd\u63cf\u8ff0'] = function(frame)\n    local shipName = frame.args[1]\n    return skillDesc(ships[shipName].skill)\nend\n\np['\u6280\u80fd\u63cf\u8ff02'] = function(frame)\n    local shipName = frame.args[1]\n    return skillDesc(ships[shipName].skill2)\nend\n\n-- ## Equipment ##\n\np['\u88c5\u5907'] = function(frame)\n    local name = frame.args[1]\n    name = fixEquiptName(name)\n    local equipt = equipts[name]\n    if (equipt == nil) then return \"'''\" .. name .. \"'''\" end\n    local icon = getEquiptIcon(equipt, '25px')\n    local title = addColor(name, equipt.rarity, true)\n    return icon .. '[[\u6218\u8230\u5c11\u5973/\u88c5\u5907#' .. name .. '|' .. title .. ']]'\nend\n\n-- {{#invoke:\u6218\u8230\u5c11\u5973|\u88c5\u5907\u5217\u8868\u884c|\u88c5\u5907\u7c7b\u578b|\u88c5\u5907\u540d|\u5907\u6ce8}}\np['\u88c5\u5907\u5217\u8868\u884c'] = function(frame)\n    local equiptType = frame.args[1]\n    local equiptName = frame.args[2]\n    local remarks = frame.args[3]\n    local onShip = onShip(equiptName)\n    equiptName = fixEquiptName(equiptName)\n\n    local equipt = equipts[equiptName]\n    local ret = 'id=\"' .. equiptName .. '\"|'\n    ret = ret .. equipt['index'] .. '||' .. getEquiptIcon(equipt, '70px')\n    ret = ret .. '||' .. addColor(equiptName, equipt.rarity, true)\n\n    for i, attrName in pairs(equiptDisplay[equiptType]) do\n        ret = ret .. '||' .. formatEquiptListAttr(equiptName, attrName)\n    end\n    \n    ret = ret .. '||'\n    if remarks == '' or remarks == nil then\n        ret = ret .. onShip\n    elseif string.find(remarks, '<\u81ea\u5e26>') ~= nil then\n        local z = string.find(remarks, '<\u81ea\u5e26>')\n        remarks = string.sub(remarks, 1, z-1) .. onShip .. string.sub(remarks, z+8, -1)\n        ret = ret .. remarks\n    else\n        ret = ret .. remarks\n    end\n    return ret\nend\n\nlocal attrOrder = { '\u706b\u529b', '\u9c7c\u96f7', '\u88c5\u7532', '\u5bf9\u7a7a', '\u8f70\u70b8', '\u7d22\u654c', '\u5bf9\u6f5c', '\u547d\u4e2d', '\u56de\u907f', '\u5e78\u8fd0', '\u5c04\u7a0b', '\u5bf9\u7a7a\u8865\u6b63', '\u8017\u94dd' }\n\np['\u88c5\u5907\u6309\u94ae'] = function(frame)\n    local equiptName = frame.args[1]\n    if frame.args[2] ~= nil then\n        equiptName = ships[frame.args[1]]['eq' .. frame.args[2]]\n    end\n\n    local equipt = equipts[equiptName]\n    if equipt == nil then return equiptName end\n\n    btn = getEquiptIcon(equipt, '25px') .. addColor(equiptName, equipt.rarity, true)\n    ctnt = ''\n    for i, attrName in pairs(attrOrder) do\n        local attrVal = equipt[tr[attrName]]\n        if attrVal ~= 0 and attrVal ~= nil then\n            ctnt = ctnt .. formatEquiptButtonAttr(attrName, attrVal)\n        end\n    end\n    if equipt['special'] ~= nil then\n        ctnt = ctnt .. equipt['special']\n    end\n    return frame:expandTemplate{ title = 'Toggle', args = { button=btn, content=ctnt } }\nend\n\n-- ## Enemies ##\n\nfunction fixEnemyName(name)\n    name = name:gsub('IV', '\u2163')\n    name = name:gsub('V', '\u2164')\n    name = name:gsub('III', '\u2162')\n    name = name:gsub('II', '\u2161')\n    name = name:gsub('I', '\u2160')\n    return name\nend\n\np['\u654c\u8230\u5217\u8868'] = function(frame)\n    local colors = { 'black', 'green', 'blue', 'purple', 'orange', 'red' }\n    local ret = ''\n    local rec = 0\n    local aa = 0\n    local speed = { 0, 0, 0 }\n    local n = { 0, 0, 0 }\n    for i = 1,6 do\n        name = frame.args[i]\n        if name == nil then\n            ret = ret .. '||'\n        else\n            name = fixEnemyName(name)\n            ret = ret .. formatShipTitle(name, 'b') .. '||'\n            local ship = enemies[name]\n            rec = rec + ship.rec\n            aa = aa + ship.aa\n            speed[ship.class] = speed[ship.class] + ship.speed\n            n[ship.class] = n[ship.class] + 1\n        end\n    end\n    local s = 0\n    if n[1] == 0 and n[2] == 0 then\n        s = speed[3] / n[3]\n    else\n        s = math.min(speed[1] / n[1], speed[2] / n[2])\n    end\n    return ret .. rec .. '||' .. math.floor(s) .. '||' .. formatFloat(aa)\nend\n\n-- ## Other ##\n\n-- {{#invoke:\u6218\u8230\u5c11\u5973|\u81ea\u5e26|\u88c5\u5907\u540d}}\np['\u81ea\u5e26'] = function(frame)\n    local equiptName = frame.args[1]\n    return onShip(equiptName)\nend\n\np['\u5f69\u8272'] = function(frame)\n    local str = frame.args[1]\n    local noBold = frame.args[2]\n    return rainbow(str, noBold == nil)\nend\n\np['debug'] = function()\n    local frame = { }\n    frame.args = { '\u80e1\u5fb7\u00b7\u6539' }\n    return p['\u6280\u80fd\u63cf\u8ff02'](frame)\nend\n\nreturn p"}}}