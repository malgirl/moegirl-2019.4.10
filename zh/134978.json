{"parse":{"title":"\u6a21\u5757:Lyrics","pageid":142434,"wikitext":{"*":"local p = {}\n\nlocal getArgs = require('Module:Arguments').getArgs\nlocal lang = require('Module:Lang')\n\nfunction p._lyrics(args)\n\tlocal orig = mw.text.split((args.original or ''):match('^(.-)%s*$'), '\\n')\n\tlocal tran = mw.text.split((args.translated or ''):match('^(.-)%s*$'), '\\n')\n\tlocal llang = args.llang or 'ja'\n\tlocal rlang = args.rlang or 'zh'\n\tlocal lstyle = args.lstyle or ''\n\tlocal rstyle = args.rstyle or ''\n\n\tlocal html = mw.html.create('div'):addClass('Lyrics')\n\t\n\t-- \u9002\u7528Template:LyricsKai/colors\n\tif args['colorsMode'] then\n\t\tlocal getArray = require('Module:var-array').get\n\t\torig = getArray('lyricsKai/colors.original')\n\t\tif args['colorsMode'] == '2' then\n\t\t\ttran = getArray('lyricsKai/colors.translated')\n\t\tend\n\tend\n\n\tif (args.original or ''):find('<ruby') or (args['hasRuby'] or ''):find('[^%s]') then\n\t\thtml:addClass('Lyrics-has-ruby')\n\telse\n\t\thtml:addClass('Lyrics-no-ruby')\n\tend\n\n\tlocal len = math.max(#orig, #tran)\n\n\tfor i=1,len do\n\t\thtml\n\t\t\t:tag('div')\n\t\t\t:addClass('Lyrics-line')\n\t\t\t\t:tag('div')\n\t\t\t\t\t:addClass('Lyrics-original')\n\t\t\t\t\t:cssText(lstyle)\n\t\t\t\t\t:node(lang.wrap(orig[i] or '', llang))\n\t\t\t\t\t:done()\n\t\t\t\t:tag('div')\n\t\t\t\t\t:addClass('Lyrics-translated')\n\t\t\t\t\t:cssText(rstyle)\t\n\t\t\t\t\t:node(lang.wrap(tran[i] or '', rlang))\n\t\t\t\t\t:done()\n\tend\n\t\n\t-- Clear the floating\n\thtml:tag('div'):cssText('clear:both')\n\n\tlocal css = mw.getCurrentFrame():extensionTag{ name = 'templatestyles', args = { src = 'Template:LyricsKai/styles.css' } }\n\treturn css .. tostring(html)\nend\n\nfunction p.lyrics(frame)\n\tlocal args = getArgs(frame, {wrappers='Template:LyricsKai'})\n\treturn p._lyrics(args)\nend\n\nreturn p"}}}