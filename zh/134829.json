{"parse":{"title":"Widget:BrokenPageLink","pageid":310388,"wikitext":{"*":"<noinclude>\u4ec5\u4f9b[[:Category:\u542b\u6709\u53d7\u635f\u6587\u4ef6\u94fe\u63a5\u7684\u9875\u9762]]\u4f7f\u7528</noinclude><includeonly><!--{if !isset($wgBrokenPageLink) || !$wgBrokenPageLink}--><!--{assign var=\"wgBrokenPageLink\" value=true scope=\"global\"}--><script>\n\"use strict\";\nwindow.RLQ = window.RLQ || [];\nwindow.RLQ.push(function() {\n    if (window.navigator.userAgent.toLowerCase().indexOf('mobile') !== -1) console.debug('\u79fb\u52a8\u7248\u4e0d\u9002\u7528\u5206\u7c7b\u91cd\u6574');\n    else if (!mw.config.get(\"widgetBrokenPageLink\")) {\n        mw.config.set('widgetBrokenPageLink', 'on');\n        $(function() {\n            var $catctx = $(\".mw-category-generated\"),\n                $catpages = $('#mw-pages'),\n                $imppages = $('<div/>', {\n                    class: 'mw-category-important mw-category-group'\n                }).append('<h3 style=\"font-weight: normal;\">\uff08\u4e3b\uff09\u540d\u5b57\u7a7a\u95f4\u9875\u9762</h3><ul></ul>'),\n                catpageLen = $catpages.find('li').length;\n            if (!catpageLen) return;\n            if ($catpages.find('.mw-category-group')[0]) $catpages.find('.mw-category-group').each(function() {\n                $(this).attr('data-index', $(this).find('h3').text());\n            });\n            else {\n                $('<div/>', { class: 'mw-category' }).append($catpages.find('.mw-content-ltr').children()).appendTo($catpages.find('.mw-content-ltr')).find('h3').each(function() {\n                    var group = $('<div/>', { class: 'mw-category-group' });\n                    $(this).before(group);\n                    group.prepend($(this).next()).prepend($(this)).attr('data-index', $(this).text());\n                });\n                $catpages = $('#mw-subcategories');\n            }\n            var namespaces = mw.config.get(\"wgFormattedNamespaces\");\n            var namespaceIds = mw.config.get(\"wgNamespaceIds\");\n            var namespaceIdsKeys = Object.keys(namespaceIds);\n            $catpages.find('li').each(function() {\n                var pagename = $(this).find('a:first').text();\n                var key = (pagename.match(/^[^:]+:/) || [\"\"])[0].replace(/:$/, '').replace(/ /g, '_').toLowerCase();\n                var hasKey = namespaceIdsKeys.includes(key);\n                var namespace = hasKey ? namespaces[namespaceIds[key]] || \"\uff08\u4e3b\uff09\" : \"\uff08\u4e3b\uff09\";\n                $(this).attr('data-namespace', namespace);\n                $(this).attr('data-title', pagename);\n            });\n            $catpages.find('.mw-category-group').sort(function(a, b) {\n                return a.dataset.index.localeCompare(b.dataset.index);\n            }).appendTo($catpages.find('.mw-category'));\n            $catpages.find('li[data-namespace=\"\uff08\u4e3b\uff09\"]').appendTo($imppages.find('ul'));\n            $catpages.find('.mw-category-group').each(function() {\n                if (!$(this).find('li')[0]) $(this).remove();\n            });\n            if ($imppages.find('li')[0]) $catpages.find('.mw-content-ltr').before($imppages).before('<hr>');\n            $imppages.find('li').sort(function(a, b) {\n                return a.dataset.title.localeCompare(b.dataset.title);\n            }).appendTo($imppages.find('ul'));\n            $catctx.addClass('BrokenPageLink');\n        });\n    }\n});</script><style>\n.BrokenPageLink .mw-category-group > ul {\n    list-style: none none;\n    margin-left: 0.25em;\n}\n.mw-category-group > ul > li > a {\n    margin-left: 18px;\n}\n.mw-category-important ul {\n    -webkit-column-count: 3;\n    -moz-column-count: 3;\n    column-count: 3;\n    -webkit-column-width: 24em;\n    -moz-column-width: 24em;\n    column-width: 24em;\n}\n.mw-category-group {\n    clear: both;\n}\n</style><!--{/if}--></includeonly>"}}}