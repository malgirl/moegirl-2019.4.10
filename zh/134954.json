{"parse":{"title":"\u6a21\u5757:File link","pageid":265310,"wikitext":{"*":"-- This module provides a library for formatting file wikilinks.\n\nlocal yesno = require('Module:Yesno')\nlocal checkType = require('libraryUtil').checkType\n\nlocal p = {}\n\nfunction p._main(args)\n\tcheckType('_main', 1, args, 'table')\n\n\t-- This is basically libraryUtil.checkTypeForNamedArg, but we are rolling our\n\t-- own function to get the right error level.\n\tlocal function checkArg(key, val, level)\n\t\tif type(val) ~= 'string' then\n\t\t\terror(string.format(\n\t\t\t\t\"type error in '%s' parameter of '_main' (expected string, got %s)\",\n\t\t\t\tkey, type(val)\n\t\t\t), level)\n\t\tend\n\tend\n\n\tlocal ret = {}\n\n\t-- Adds a positional parameter to the buffer.\n\tlocal function addPositional(key)\n\t\tlocal val = args[key]\n\t\tif not val then\n\t\t\treturn nil\n\t\tend\n\t\tcheckArg(key, val, 4)\n\t\tret[#ret + 1] = val\n\tend\n\n\t-- Adds a named parameter to the buffer. We assume that the parameter name\n\t-- is the same as the argument key.\n\tlocal function addNamed(key)\n\t\tlocal val = args[key]\n\t\tif not val then\n\t\t\treturn nil\n\t\tend\n\t\tcheckArg(key, val, 4)\n\t\tret[#ret + 1] = key .. '=' .. val\n\tend\n\n\t-- Filename\n\tcheckArg('file', args.file, 3)\n\tret[#ret + 1] = 'File:' .. args.file\n\n\t-- Format\n\tif args.format then\n\t\tcheckArg('format', args.format)\n\t\tif args.formatfile then\n\t\t\tcheckArg('formatfile', args.formatfile)\n\t\t\tret[#ret + 1] = args.format .. '=' .. args.formatfile\n\t\telse\n\t\t\tret[#ret + 1] = args.format\n\t\tend\n\tend\n\n\t-- Border\n\tif yesno(args.border) then\n\t\tret[#ret + 1] = 'border'\n\tend\n\n\taddPositional('location')\n\taddPositional('alignment')\n\taddPositional('size')\n\taddNamed('upright')\n\taddNamed('link')\n\taddNamed('alt')\n\taddNamed('page')\n\taddNamed('class')\n\taddNamed('lang')\n\taddNamed('start')\n\taddNamed('end')\n\taddNamed('thumbtime')\n\taddPositional('caption')\n\n\treturn string.format('[[%s]]', table.concat(ret, '|'))\nend\n\nfunction p.main(frame)\n\tlocal origArgs = require('Module:Arguments').getArgs(frame, {\n\t\twrappers = 'Template:File link'\n\t})\n\tif not origArgs.file then\n\t\terror(\"'file' parameter missing from [[Template:File link]]\", 0)\n\tend\n\n\t-- Copy the arguments that were passed to a new table to avoid looking up\n\t-- every possible parameter in the frame object.\n\tlocal args = {}\n\tfor k, v in pairs(origArgs) do\n\t\t-- Make _BLANK a special argument to add a blank parameter. For use in\n\t\t-- conditional templates etc. it is useful for blank arguments to be\n\t\t-- ignored, but we still need a way to specify them so that we can do\n\t\t-- things like [[File:Example.png|link=]].\n\t\tif v == '_BLANK' then\n\t\t\tv = ''\n\t\tend\n\t\targs[k] = v\n\tend\n\treturn p._main(args)\nend\n\nreturn p"}}}