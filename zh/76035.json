{"parse":{"title":"User:\u7ebf\u6bb5\u6811","pageid":197846,"wikitext":{"*":"{{\u7528\u6237\u4fe1\u606f\n|image=\n|\u8272\u5e26=\n|\u672c\u540d=\n|\u522b\u53f7=\n|\u751f\u65e5=\n|\u5e74\u9f84=\n|\u8840\u578b=\n|\u661f\u5ea7=\n|\u8eab\u9ad8=\n|\u4f53\u91cd=\n|\u77b3\u8272=\n|\u53d1\u8272=\n|\u4e09\u56f4=\n|\u840c\u70b9=\n|\u81ea\u8ff0=\n|\u597d\u53cb=\n|\u654c\u4eba=\n|\u51fa\u8eab\u5730\u533a=\n|\u6d3b\u52a8\u8303\u56f4=\n|\u6240\u5c5e\u56e2\u4f53=\n|\u4e2a\u4eba\u72b6\u6001=\n|\u76f8\u5173\u4eba\u58eb=\n}}\n{{Hide|\u6807\u9898=segmenttree|\u5185\u5bb9=struct segment\n{\n\tint l;int r;\n\tlong long val;\n\tlong long lazy_tag;\n}tree[200000*4];\nlong long a[200001];\nvoid make_plus(int now,long long delta)\n{\n\ttree[now].val+=(tree[now].r-tree[now].l+1)*delta;\n\ttree[now].lazy_tag+=delta;\n}\nvoid push_down(int now)\n{\n\tmake_plus(lson,tree[now].lazy_tag);\n\tmake_plus(rson,tree[now].lazy_tag);\n\ttree[now].lazy_tag=0;\n}\nlong long n,q;\nint type;\ninline long long init()\n{\n\tlong long now=0;char c;bool flag=false;int ju=1;\n\twhile(1)\n\t{\n\t\tc=getchar();\n\t\tif(c=='-')ju=-1;\n\t\telse if(c>='0'&&c<='9')\n\t\t{\n\t\t\tnow=now*10+c-'0';\n\t\t\tflag=true;\n\t\t}\n\t\telse if(flag)return ju*now;\n\t}\n}\nvoid addtag(long long now,long long l,long long r,long long delta,long long x,long long y)\n{\n\tif(l==x&&r==y)\n\t{\n\t\tmake_plus(now,delta);\n\t\treturn;\n\t}\n\telse \n\t{\n\t\tpush_down(now);\n\t\tif(y<=mid)addtag(lson,l,mid,delta,x,y);\n\t\telse if(x>mid)addtag(rson,mid+1,r,delta,x,y);\n\t\telse addtag(lson,l,mid,delta,x,mid),addtag(rson,mid+1,r,delta,mid+1,y);\n\t\ttree[now].val=tree[lson].val+tree[rson].val;\n\t}\n}\nlong long query(long long now,long long x,long long y,long long l,long long r)\n{\n\tif(l==x&&r==y)\n\t{\n\t\treturn tree[now].val;\n\t}\n\telse\n\t{\n\t\tpush_down(now);\n\t\tif(y<=mid)return query(lson,x,y,l,mid);\n\t\telse if(x>mid)return query(rson,x,y,mid+1,r);\n\t\telse return query(lson,x,mid,l,mid)+query(rson,mid+1,y,mid+1,r);\n\t\ttree[now].val=tree[lson].val+tree[rson].val;\n\t}\n}\nvoid modify(int now,long long x,int pos,int l,int r)\n{\n\tif(l==r)\n\t{\n\t\ttree[now].val+=x;//tree[now].val=x;\n\t}\n\telse\n\t{\n\t\tpush_down(now);\n\t\tif(pos<=mid)modify(lson,x,pos,l,mid);\n\t\telse modify(rson,x,pos,mid+1,r);\n\t\ttree[now].val=tree[lson].val+tree[rson].val;\n\t}\n}\nvoid build(int now,int l,int r)\n{\n\ttree[now].l=l;tree[now].r=r;\n\tif(l==r)\n\t{\n\t\ttree[now].val=a[l];\n\t}\n\telse\n\t{\n\t\tbuild(lson,l,mid);\n\t\tbuild(rson,mid+1,r);\n\t\ttree[now].val=tree[lson].val+tree[rson].val;\n\t}\n}\n}}"}}}