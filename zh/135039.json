{"parse":{"title":"\u6a21\u5757:TimeZone","pageid":307636,"wikitext":{"*":"local module = {}\n\nfunction module.getTimeZone(frame)\n    local hour, minute = normalize(frame.args[1])\n    local timezone = timeZoneToString(hour, minute)\n    \n    local output = frame.args[\"output\"]\n    if output == \"number\" then\n        return timezone\n    elseif output == \"utc\" then\n        return \"UTC\"..timezone\n    elseif output == \"text\" then\n        if timezone == \"+00:00\" then\n            return \"\u96f6\u65f6\u533a\"\n        else\n            local left, middle\n            \n            --\u5f53\u65f6\u95f4\u5dee\u8d85\u8fc7\u00b112\u5c0f\u65f6\uff0c\u5728\u8ba1\u7b97\u65f6\u533a\u662f\u5fc5\u987b\u8c03\u6574\u81f3\u00b112\u5c0f\u65f6\u7684\u8303\u56f4\u5185\u3002\n            local hour = math.fmod(hour, 24)\n            local abs_hour = math.abs(hour)\n            local sign = hour / abs_hour\n            if abs_hour > 12 or (abs_hour == 12 and minute > 0) then\n                hour = 24 - abs_hour\n                if minute ~= 0 then\n                    hour = hour - 1\n                    minute = 60 - minute\n                end\n                hour = -sign * hour\n            end\n            \n            if hour < 0 then\n                left = \"\u897f\"\n            else\n                left = \"\u4e1c\"\n            end\n            \n            local texts = {\"\u4e00\",\"\u4e8c\",\"\u4e09\",\"\u56db\",\"\u4e94\",\"\u516d\",\"\u4e03\",\"\u516b\",\"\u4e5d\",\"\u5341\",\"\u5341\u4e00\",\"\u5341\u4e8c\"}\n            middle = texts[math.abs(tonumber(hour))]\n            \n            return left..middle..\"\u533a\"\n        end\n    end\nend\n\nfunction module.convert(frame)\n    local args = frame.args\n    \n    local year = tonumber(args[\"year\"])\n    local month = tonumber(args[\"month\"])\n    local day = tonumber(args[\"day\"])\n    local hour = tonumber(args[\"hour\"]) or 12\n    local minute = tonumber(args[\"minute\"]) or 0\n    local second = tonumber(args[\"second\"]) or 0\n    \n    local o_hour, o_minute = normalize(args[\"o_timezone\"])\n    local c_hour, c_minute = normalize(args[\"c_timezone\"])\n    local o_sign, c_sign\n    if o_hour >= 0 then o_sign = 1 else o_sign = -1 end\n    if c_hour >= 0 then c_sign = 1 else c_sign = -1 end\n    \n    local difftime = (c_hour * 3600 + o_sign * c_minute * 60) -\n                     (o_hour * 3600 + c_sign * o_minute * 60)\n    \n    local o_time = { year = year, month = month, day = day, hour = hour, min = minute, sec = second }\n    local c_time = os.date(\"*t\", os.time(o_time) + difftime)\n    \n    local text = args[1] or \"\"\n    --\u5265\u79bbnowiki\u6807\u7b7e\u3002\n    text = mw.text.unstripNoWiki(text)\n    text = mw.text.decode(text)\n    \n    --\u683c\u5f0f\u5316\u65e5\u671f\n    c_time['timezone'] = {c_hour, c_minute}\n    text = formatDate(text, c_time)\n    \n    --\u751f\u6210\u80fd\u89e3\u6790wiki\u6587\u672c\u7684\u5b57\u7b26\u4e32\u3002\n    text = frame:preprocess(text)\n    \n    return text\nend\n\nfunction module.formatList(frame)\n    local var_array = require(\"Module:Var-array\")\n    local formatList = {}\n    for i, item in ipairs(getFormat()) do\n        table.insert(formatList, { item.format, item.description })\n    end\n    var_array.new(\"timezone.convert.formatlist\", formatList)\nend\n\nfunction getFormat()\n    return {\n        {\n            format = \"%(y)\",\n            description = \"\u4e0d\u5305\u542b\u7eaa\u5143\u7684\u5e74\u4efd\u3002\u5982\u679c\u4e0d\u5305\u542b\u7eaa\u5143\u7684\u5e74\u4efd\u5c0f\u4e8e10\uff0c\u5219\u663e\u793a\u4e0d\u5177\u6709\u524d\u5bfc\u96f6\u7684\u5e74\u4efd\u3002\",\n            callback = function(matched_times, time) return tostring(tonumber(string.sub(tostring(time.year), -2))) end\n        },\n        {\n            format = \"%y\",\n            description = \"\u4e0d\u5305\u542b\u7eaa\u5143\u7684\u5e74\u4efd\u3002\u5982\u679c\u4e0d\u5305\u542b\u7eaa\u5143\u7684\u5e74\u4efd\u5c0f\u4e8e10\uff0c\u5219\u663e\u793a\u4e0d\u5177\u6709\u524d\u5bfc\u96f6\u7684\u5e74\u4efd\u3002<code>%(y)</code>\u7684\u7b80\u7565\u5199\u6cd5\u3002\",\n            callback = function(matched_times, time) return tostring(tonumber(string.sub(tostring(time.year), -2))) end\n        },\n        {\n            format = \"%(yy)\",\n            description = \"\u4e0d\u5305\u542b\u7eaa\u5143\u7684\u5e74\u4efd\u3002\u5982\u679c\u4e0d\u5305\u542b\u7eaa\u5143\u7684\u5e74\u4efd\u5c0f\u4e8e10\uff0c\u5219\u663e\u793a\u5177\u6709\u524d\u5bfc\u96f6\u7684\u5e74\u4efd\u3002\",\n            callback = function(matched_times, time) return string.format(\"%02d\", tonumber(string.sub(tostring(time.year), -2))) end\n        },\n        {\n            format = \"%(yyyy)\",\n            description = \"\u5305\u62ec\u7eaa\u5143\u7684\u56db\u4f4d\u6570\u7684\u5e74\u4efd\u3002\",\n            callback = function(matched_times, time) return tostring(time.year) end\n        },\n        {\n            format = \"%(gg)\",\n            description = \"\u65f6\u671f\u6216\u7eaa\u5143\u3002\u5982\u679c\u8981\u8bbe\u7f6e\u683c\u5f0f\u7684\u65e5\u671f\u4e0d\u5177\u6709\u5173\u8054\u7684\u65f6\u671f\u6216\u7eaa\u5143\u5b57\u7b26\u4e32\uff0c\u5219\u5ffd\u7565\u8be5\u6a21\u5f0f\u3002\",\n            callback = function(matched_times, time) return tostring((tonumber(time.year) - tonumber(string.sub(tostring(time.year), -2))) / 100) end\n        },\n        {\n            format = \"%(M)\",\n            description = \"\u6708\u4efd\u6570\u5b57\u3002\u4e00\u4f4d\u6570\u7684\u6708\u4efd\u6ca1\u6709\u524d\u5bfc\u96f6\u3002\",\n            callback = function(matched_times, time) return tostring(tonumber(time.month)) end\n        },\n        {\n            format = \"%M\",\n            description = \"\u6708\u4efd\u6570\u5b57\u3002\u4e00\u4f4d\u6570\u7684\u6708\u4efd\u6ca1\u6709\u524d\u5bfc\u96f6\u3002<code>%(M)</code>\u7684\u7b80\u7565\u5199\u6cd5\u3002\",\n            callback = function(matched_times, time) return tostring(tonumber(time.month)) end\n        },\n        {\n            format = \"%(MM)\",\n            description = \"\u6708\u4efd\u6570\u5b57\u3002\u4e00\u4f4d\u6570\u7684\u6708\u4efd\u6709\u4e00\u4e2a\u524d\u5bfc\u96f6\u3002\",\n            callback = function(matched_times, time) return string.format(\"%02d\", (tonumber(time.month))) end\n        },\n        {\n            format = \"%(MMM)\",\n            description = \"\u6708\u4efd\u7684\u7f29\u5199\u540d\u79f0\u3002\",\n            callback = function(matched_times, time)\n                local AbbreviatedMonthNames = { \"\u4e00\", \"\u4e8c\", \"\u4e09\", \"\u56db\", \"\u4e94\", \"\u516d\", \"\u4e03\", \"\u516b\", \"\u4e5d\", \"\u5341\", \"\u5341\u4e00\", \"\u5341\u4e8c\" }\n                return AbbreviatedMonthNames[tonumber(time.month)]\n            end\n        },\n        {\n            format = \"%(MMMM)\",\n            description = \"\u6708\u4efd\u7684\u7f29\u5199\u540d\u79f0\u3002\",\n            callback = function(matched_times, time)\n                local AbbreviatedMonthNames = { \"\u4e00\", \"\u4e8c\", \"\u4e09\", \"\u56db\", \"\u4e94\", \"\u516d\", \"\u4e03\", \"\u516b\", \"\u4e5d\", \"\u5341\", \"\u5341\u4e00\", \"\u5341\u4e8c\" }\n                return AbbreviatedMonthNames[tonumber(time.month)]..\"\u6708\"\n            end\n        },\n        {\n            format = \"%(D)\",\n            description = \"\u5e74\u4e2d\u7684\u67d0\u4e00\u5929\u3002\",\n            callback = function(matched_times, time)\n                t1 = { year = time.year, month = time.month, day = time.day, hour = 0, min = 0, sec = 0 }\n                t2 = { year = time.year, month = 1, day = 1, hour = 0, min = 0, sec = 0 }\n                return tostring(math.floor(os.difftime(os.time(t1), os.time(t2)) / 86400))\n            end\n        },\n        {\n            format = \"%D\",\n            description = \"\u5e74\u4e2d\u7684\u67d0\u4e00\u5929\u3002<code>%(D)</code>\u7684\u7b80\u7565\u5199\u6cd5\u3002\",\n            callback = function(matched_times, time)\n                t1 = { year = time.year, month = time.month, day = time.day, hour = 0, min = 0, sec = 0 }\n                t2 = { year = time.year, month = 1, day = 1, hour = 0, min = 0, sec = 0 }\n                return tostring(math.floor(os.difftime(os.time(t1), os.time(t2)) / 86400))\n            end\n        },\n        {\n            format = \"%(DD)\",\n            description = \"\u8fd9\u4e00\u5e74\u5171\u6709\u591a\u5c11\u5929\u3002\",\n            callback = function(matched_times, time)\n                t1 = { year = time.year + 1, month = 1, day = 1, hour = 0, min = 0, sec = 0 }\n                t2 = { year = time.year, month = 1, day = 1, hour = 0, min = 0, sec = 0 }\n                return tostring(math.floor(os.difftime(os.time(t1), os.time(t2)) / 86400))\n            end\n        },\n        {\n            format = \"%(d)\",\n            description = \"\u6708\u4e2d\u7684\u67d0\u4e00\u5929\u3002\u4e00\u4f4d\u6570\u7684\u65e5\u671f\u6ca1\u6709\u524d\u5bfc\u96f6\u3002\",\n            callback = function(matched_times, time) return tostring(tonumber(time.day)) end\n        },\n        {\n            format = \"%d\",\n            description = \"\u6708\u4e2d\u7684\u67d0\u4e00\u5929\u3002\u4e00\u4f4d\u6570\u7684\u65e5\u671f\u6ca1\u6709\u524d\u5bfc\u96f6\u3002<code>%(d)</code>\u7684\u7b80\u7565\u5199\u6cd5\u3002\",\n            callback = function(matched_times, time) return tostring(tonumber(time.day)) end\n        },\n        {\n            format = \"%(dd)\",\n            description = \"\u6708\u4e2d\u7684\u67d0\u4e00\u5929\u3002\u4e00\u4f4d\u6570\u7684\u65e5\u671f\u6709\u4e00\u4e2a\u524d\u5bfc\u96f6\u3002\",\n            callback = function(matched_times, time) return string.format(\"%02d\", tonumber(time.day)) end\n        },\n        {\n            format = \"%(w)\",\n            description = \"\u5468\u4e2d\u7684\u67d0\u4e00\u5929\u3002\",\n            callback = function(matched_times, time) return tostring(tonumber(time.wday)) end\n        },\n        {\n            format = \"%w\",\n            description = \"\u5468\u4e2d\u7684\u67d0\u4e00\u5929\u3002<code>%(w)</code>\u7684\u7b80\u7565\u5199\u6cd5\u3002\",\n            callback = function(matched_times, time) return tostring(tonumber(time.wday)) end\n        },\n        {\n            format = \"%(ww)\",\n            description = \"\u5468\u4e2d\u67d0\u5929\u7684\u7f29\u5199\u540d\u79f0\u3002\",\n            callback = function(matched_times, time)\n                local wday = tonumber(time.wday)\n                return mw.ustring.sub(\"\u65e5\u4e00\u4e8c\u4e09\u56db\u4e94\u516d\", wday, wday)\n            end\n        },\n        {\n            format = \"%(www)\",\n            description = \"\u5468\u4e2d\u67d0\u5929\u7684\u7f29\u5199\u540d\u79f0\u3002\",\n            callback = function(matched_times, time)\n                local wday = tonumber(time.wday)\n                return \"\u661f\u671f\"..mw.ustring.sub(\"\u65e5\u4e00\u4e8c\u4e09\u56db\u4e94\u516d\", wday, wday)\n            end\n        },\n        {\n            format = \"%(h)\",\n            description = \"12 \u5c0f\u65f6\u5236\u7684\u5c0f\u65f6\u3002\u4e00\u4f4d\u6570\u7684\u5c0f\u65f6\u6570\u6ca1\u6709\u524d\u5bfc\u96f6\u3002\",\n            callback = function(matched_times, time) return tostring(math.fmod(tonumber(time.hour), 12)) end\n        },\n        {\n            format = \"%h\",\n            description = \"12 \u5c0f\u65f6\u5236\u7684\u5c0f\u65f6\u3002\u4e00\u4f4d\u6570\u7684\u5c0f\u65f6\u6570\u6ca1\u6709\u524d\u5bfc\u96f6\u3002<code>%(h)</code>\u7684\u7b80\u7565\u5199\u6cd5\u3002\",\n            callback = function(matched_times, time) return tostring(math.fmod(tonumber(time.hour), 12)) end\n        },\n        {\n            format = \"%(hh)\",\n            description = \"12 \u5c0f\u65f6\u5236\u7684\u5c0f\u65f6\u3002\u4e00\u4f4d\u6570\u7684\u5c0f\u65f6\u6570\u6709\u4e00\u4e2a\u524d\u5bfc\u96f6\u3002\",\n            callback = function(matched_times, time) return string.format(\"%02d\", math.fmod(tonumber(time.hour), 12)) end\n        },\n        {\n            format = \"%(H)\",\n            description = \"24 \u5c0f\u65f6\u5236\u7684\u5c0f\u65f6\u3002\u4e00\u4f4d\u6570\u7684\u5c0f\u65f6\u6570\u6ca1\u6709\u524d\u5bfc\u96f6\u3002\",\n            callback = function(matched_times, time) return tostring(tonumber(time.hour)) end\n        },\n        {\n            format = \"%H\",\n            description = \"24 \u5c0f\u65f6\u5236\u7684\u5c0f\u65f6\u3002\u4e00\u4f4d\u6570\u7684\u5c0f\u65f6\u6570\u6ca1\u6709\u524d\u5bfc\u96f6\u3002<code>%(H)</code>\u7684\u7b80\u7565\u5199\u6cd5\u3002\",\n            callback = function(matched_times, time) return tostring(tonumber(time.hour)) end\n        },\n        {\n            format = \"%(HH)\",\n            description = \"24 \u5c0f\u65f6\u5236\u7684\u5c0f\u65f6\u3002\u4e00\u4f4d\u6570\u7684\u5c0f\u65f6\u6570\u6709\u4e00\u4e2a\u524d\u5bfc\u96f6\u3002\",\n            callback = function(matched_times, time) return string.format(\"%02d\", tonumber(time.hour)) end\n        },\n        {\n            format = \"%(m)\",\n            description = \"\u5206\u949f\u3002\u4e00\u4f4d\u6570\u7684\u5206\u949f\u6570\u6ca1\u6709\u524d\u5bfc\u96f6\u3002\",\n            callback = function(matched_times, time) return tostring(tonumber(time.min)) end\n        },\n        {\n            format = \"%m\",\n            description = \"\u5206\u949f\u3002\u4e00\u4f4d\u6570\u7684\u5206\u949f\u6570\u6ca1\u6709\u524d\u5bfc\u96f6\u3002<code>%(m)</code>\u7684\u7b80\u7565\u5199\u6cd5\u3002\",\n            callback = function(matched_times, time) return tostring(tonumber(time.min)) end\n        },\n        {\n            format = \"%(mm)\",\n            description = \"\u5206\u949f\u3002\u4e00\u4f4d\u6570\u7684\u5206\u949f\u6570\u6709\u4e00\u4e2a\u524d\u5bfc\u96f6\u3002\",\n            callback = function(matched_times, time) return string.format(\"%02d\", tonumber(time.min)) end\n        },\n        {\n            format = \"%(s)\",\n            description = \"\u79d2\u3002\u4e00\u4f4d\u6570\u7684\u79d2\u6570\u6ca1\u6709\u524d\u5bfc\u96f6\u3002\",\n            callback = function(matched_times, time) return tostring(tonumber(time.sec)) end\n        },\n        {\n            format = \"%s\",\n            description = \"\u79d2\u3002\u4e00\u4f4d\u6570\u7684\u79d2\u6570\u6ca1\u6709\u524d\u5bfc\u96f6\u3002<code>%(s)</code>\u7684\u7b80\u7565\u5199\u6cd5\u3002\",\n            callback = function(matched_times, time) return tostring(tonumber(time.sec)) end\n        },\n        {\n            format = \"%(ss)\",\n            description = \"\u79d2\u3002\u4e00\u4f4d\u6570\u7684\u79d2\u6570\u6709\u4e00\u4e2a\u524d\u5bfc\u96f6\u3002\",\n            callback = function(matched_times, time) return string.format(\"%02d\", tonumber(time.sec)) end\n        },\n        {\n            format = \"%(sss)\",\n            description = \"Unix\u65f6\u95f4\u6233\uff08Unix timestamp\uff09\u3002\u4ece\u683c\u6797\u5a01\u6cbb\u65f6\u95f41970\u5e7401\u670801\u65e500\u65f600\u520600\u79d2\u8d77\u81f3\u73b0\u5728\u7684\u603b\u79d2\u6570\u3002\",\n            callback = function(matched_times, time) return tostring(os.time(time)) end\n        },\n        {\n            format = \"%(t)\",\n            description = \"\u4e00\u5929\u4e2d\u65f6\u95f4\u6bb5\u7684\u66f4\u52a0\u8be6\u7ec6\u7684\u63d0\u793a\u4fe1\u606f\u3002\",\n            callback = function(matched_times, time)\n                local hour = tonumber(time.hour)\n                if hour < 12 then return \"\u4e0a\u5348\"\n                else return \"\u4e0b\u5348\"\n                end\n            end\n        },\n        {\n            format = \"%t\",\n            description = \"\u4e00\u5929\u4e2d\u65f6\u95f4\u6bb5\u7684\u66f4\u52a0\u8be6\u7ec6\u7684\u63d0\u793a\u4fe1\u606f\u3002<code>%(t)</code>\u7684\u7b80\u7565\u5199\u6cd5\u3002\",\n            callback = function(matched_times, time)\n                local hour = tonumber(time.hour)\n                if hour < 12 then return \"\u4e0a\u5348\"\n                else return \"\u4e0b\u5348\"\n                end\n            end\n        },\n        {\n            format = \"%(tt)\",\n            description = \"\u4e00\u5929\u4e2d\u65f6\u95f4\u6bb5\u7684\u66f4\u52a0\u8be6\u7ec6\u7684\u63d0\u793a\u4fe1\u606f\u3002\",\n            callback = function(matched_times, time)\n                local hour = tonumber(time.hour)\n                if hour < 7 then return \"\u51cc\u6668\"\n                elseif hour < 11 then return \"\u4e0a\u5348\"\n                elseif hour < 13 then return \"\u4e2d\u5348\"\n                elseif hour < 17 then return \"\u4e0b\u5348\"\n                elseif hour < 20  then return \"\u508d\u665a\"\n                elseif hour < 22 then return \"\u665a\u4e0a\"\n                else return \"\u6df1\u591c\"\n                end\n            end\n        },\n        {\n            format = \"%(z)\",\n            description = \"\u65f6\u533a\u504f\u79fb\u91cf\uff08\u201c+\u201d\u6216\u201c-\u201d\u540e\u9762\u4ec5\u8ddf\u5c0f\u65f6\uff09\u3002\u4e00\u4f4d\u6570\u7684\u5c0f\u65f6\u6570\u6ca1\u6709\u524d\u5bfc\u96f6\u3002\u4f8b\u5982\uff0c\u592a\u5e73\u6d0b\u6807\u51c6\u65f6\u95f4\u662f\u201c-8\u201d\u3002\",\n            callback = function(subStr, time)\n                local hour, minute = time.timezone[1], time.timezone[2]\n                if hour >= 0 then return \"+\"..hour\n                else return tostring(hour)\n                end\n            end\n        },\n        {\n            format = \"%z\",\n            description = \"\u65f6\u533a\u504f\u79fb\u91cf\uff08\u201c+\u201d\u6216\u201c-\u201d\u540e\u9762\u4ec5\u8ddf\u5c0f\u65f6\uff09\u3002\u4e00\u4f4d\u6570\u7684\u5c0f\u65f6\u6570\u6ca1\u6709\u524d\u5bfc\u96f6\u3002\u4f8b\u5982\uff0c\u592a\u5e73\u6d0b\u6807\u51c6\u65f6\u95f4\u662f\u201c-8\u201d\u3002<code>%(z)</code>\u7684\u7b80\u7565\u5199\u6cd5\u3002\",\n            callback = function(subStr, time)\n                local hour, minute = time.timezone[1], time.timezone[2]\n                if hour >= 0 then return \"+\"..hour\n                else return tostring(hour)\n                end\n            end\n        },\n        {\n            format = \"%(zz)\",\n            description = \"\u65f6\u533a\u504f\u79fb\u91cf\uff08\u201c+\u201d\u6216\u201c-\u201d\u540e\u9762\u4ec5\u8ddf\u5c0f\u65f6\uff09\u3002\u4e00\u4f4d\u6570\u7684\u5c0f\u65f6\u6570\u6709\u524d\u5bfc\u96f6\u3002\u4f8b\u5982\uff0c\u592a\u5e73\u6d0b\u6807\u51c6\u65f6\u95f4\u662f\u201c-08\u201d\u3002\",\n            callback = function(subStr, time)\n                local hour, minute = time.timezone[1], time.timezone[2]\n                if hour >= 0 then return string.format(\"+%02d\", hour)\n                else return string.format(\"-%02d\", -hour)\n                end\n            end\n        },\n        {\n            format = \"%(zzz)\",\n            description = \"\u5b8c\u6574\u65f6\u533a\u504f\u79fb\u91cf\uff08\u201c+\u201d\u6216\u201c-\u201d\u540e\u9762\u8ddf\u6709\u5c0f\u65f6\u548c\u5206\u949f\uff09\u3002\u4e00\u4f4d\u6570\u7684\u5c0f\u65f6\u6570\u548c\u5206\u949f\u6570\u6709\u524d\u5bfc\u96f6\u3002\u4f8b\u5982\uff0c\u592a\u5e73\u6d0b\u6807\u51c6\u65f6\u95f4\u662f\u201c-08:00\u201d\u3002\",\n            callback = function(subStr, time) \n                mw.log('zzzzz')\n                return timeZoneToString(time.timezone[1], time.timezone[2]) \n            end\n        },\n        {\n            format = \"%(%)\",\n            description = \"\u8868\u793a\u5b57\u7b26\u201c%\u201d\u3002\",\n            callback = function(matched_times, time) return \"%\" end\n        },\n        {\n            format = \"%%\",\n            description = \"\u8868\u793a\u5b57\u7b26\u201c%\u201d\u3002<code>%(%)</code>\u7684\u7b80\u7565\u5199\u6cd5\u3002\",\n            callback = function(matched_times, time) return \"%\" end\n        }\n    }\nend\n\nfunction formatDate(text, timeInfo)\n    local FormatString = require(\"Module:FormatString\")\n    local tree = FormatString.buildTrie(getFormat())\n    text = FormatString.replaceStr(text, tree, timeInfo)\n    return text\nend\n\nfunction normalize(timezone)\n    if timezone == nil or #timezone == 0 then\n        return currentTimeZone() --\u7528\u6237\u5f53\u524d\u65f6\u533a\n    else\n        local hour, minute = mw.ustring.match(mw.text.trim(timezone), \"^([-%+]?%d+):?(%d*)$\")\n        if hour == nil then\n            error(\"\u65f6\u533a\u53c2\u6570\u683c\u5f0f\u4e0d\u6b63\u786e\u3002\")\n        end\n        return tonumber(hour), tonumber(minute) or 0\n    end\nend\n\nfunction currentTimeZone()\n    local a = os.date('!*t',os.time())--\u4e2d\u65f6\u533a\u7684\u65f6\u95f4\n    local b = os.date('*t',os.time())\n    local seconds = os.difftime(os.time(b), os.time(a))\n    \n    local hour = math.floor(math.abs(seconds) / 3600)\n    local minute = math.floor((math.abs(seconds) - hour * 3600) / 60)\n    if seconds < 0 then\n        hour = -hour\n        if minute ~= 0 then\n            minute = 60 - minute\n        end\n    end\n    \n    return hour, minute\nend\n\nfunction timeZoneToString(hour, minute)\n    if minute == nil then minute = 0 end\n    if hour >= 0 then\n        return mw.ustring.format(\"+%02d:%02d\", hour, minute)\n    else\n        return mw.ustring.format(\"-%02d:%02d\", math.abs(hour), minute)\n    end\nend\n\nreturn module"}}}