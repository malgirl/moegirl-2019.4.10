{"parse":{"title":"MediaWiki:Common.js/edit.js","pageid":134289,"wikitext":{"*":"/* Any JavaScript here will be loaded for all users on edit page load. */\n$(function() {\n    // \u6743\u9650\u7533\u8bf7\u6309\u94ae\u6837\u5f0f\u4fee\u6b63\n    mw.loader.addStyleTag(\n        \".headerInputbox form,\" +\n        \".headerInputbox .mw-inputbox-centered {\" +\n        \"    display: inline;\" +\n        \"}\" +\n        \".headerInputbox .mw-inputbox-centered {\" +\n        \"    margin:0 3px 0 0;\" +\n        \"}\"\n    );\n\n    $(\".mw-summary-preset-item a\").closest('.oo-ui-fieldLayout-header').width($('#wpSummary').width());\n    $(\".mw-summary-preset-item a\").on(\"click\", function() {\n        $('[name=\"wpSummary\"]').val($('[name=\"wpSummary\"]').val() + \" \" + $(this).html());\n    });\n\n    // .wikiEditor-ui-controls \u989c\u8272\u4fee\u6b63\n    $('.wikiEditor-ui-controls').css('background-color', $('#content').css('background-color'));\n\n    //\u7f16\u8f91\u63d0\u793a\u68c0\u67e5\n    if ($(\".editOptions > #wpSummary\")[0]) $(\".CheckNewSectionOn\").hide();\n    else $(\".CheckNewSectionOff\").hide();\n\n    // Customized File Insertion dialog\n    // Copyright 2017 The Little Moe New LLC. All rights reserved.\n    mw.loader.using([\"oojs\", \"oojs-ui\"]).then(function() {\n        $(\"#wpTextbox1\").on(\"wikiEditor-toolbar-doneInitialSections\", function() {\n            function FileInsertionDialog(config) {\n                FileInsertionDialog.super.call(this, config);\n            }\n            OO.inheritClass(FileInsertionDialog, OO.ui.ProcessDialog);\n            // Name\n            FileInsertionDialog.static.name = \"fileInsertionDialog\";\n            FileInsertionDialog.static.title = mw.msg(\"wikieditor-toolbar-tool-file-title\");\n            FileInsertionDialog.static.actions = [{\n                flags: \"primary\",\n                label: mw.msg(\"wikieditor-toolbar-tool-file-insert\"),\n                action: \"insert\"\n            }, {\n                flags: \"safe\",\n                label: mw.msg(\"wikieditor-toolbar-tool-file-cancel\")\n            }];\n            // Initialization\n            FileInsertionDialog.prototype.initialize = function() {\n                FileInsertionDialog.super.prototype.initialize.call(this);\n                this.panel = new OO.ui.PanelLayout({\n                    padded: true,\n                    expanded: false\n                });\n                this.fileMetaContent = new OO.ui.FieldsetLayout();\n                this.alignmentContent = new OO.ui.FieldsetLayout();\n                this.formatContent = new OO.ui.FieldsetLayout();\n                this.fileNameInput = new OO.ui.TextInputWidget({\n                    indicator: \"required\"\n                });\n                this.fileNameField = new OO.ui.FieldLayout(this.fileNameInput, {\n                    label: mw.msg(\"wikieditor-toolbar-file-target\"),\n                    align: \"top\"\n                });\n                this.fileTitleInput = new OO.ui.TextInputWidget();\n                this.fileTitleField = new OO.ui.FieldLayout(this.fileTitleInput, {\n                    label: mw.msg(\"wikieditor-toolbar-file-caption\"),\n                    align: \"top\"\n                });\n                this.sizeInput = new OO.ui.TextInputWidget();\n                this.sizeField = new OO.ui.FieldLayout(this.sizeInput, {\n                    label: mw.msg(\"wikieditor-toolbar-file-size\"),\n                    align: \"top\"\n                });\n                this.fileMetaContent.addItems([this.fileNameField, this.fileTitleField, this.sizeField]);\n                var alignOptionDefault = new OO.ui.ButtonOptionWidget({\n                    data: \"default\",\n                    label: mw.msg(\"wikieditor-toolbar-file-default\"),\n                    title: mw.msg(\"wikieditor-toolbar-file-default\")\n                });\n                var alignOptionNone = new OO.ui.ButtonOptionWidget({\n                    data: \"none\",\n                    label: mw.msg(\"wikieditor-toolbar-file-format-none\"),\n                    title: mw.msg(\"wikieditor-toolbar-file-format-none\")\n                });\n                var magicWords = mw.config.get(\"wgWikiEditorMagicWords\");\n                var alignOptionMid = new OO.ui.ButtonOptionWidget({\n                    data: \"center\",\n                    label: magicWords.img_center,\n                    title: magicWords.img_center\n                });\n                var alignOptionLeft = new OO.ui.ButtonOptionWidget({\n                    data: \"left\",\n                    label: magicWords.img_left,\n                    title: magicWords.img_left\n                });\n                var alignOptionRight = new OO.ui.ButtonOptionWidget({\n                    data: \"right\",\n                    label: magicWords.img_right,\n                    title: magicWords.img_right\n                });\n                this.alignmentSelect = new OO.ui.ButtonSelectWidget({\n                    items: [alignOptionNone, alignOptionDefault, alignOptionMid, alignOptionLeft, alignOptionRight]\n                });\n                this.alignmentField = new OO.ui.FieldLayout(this.alignmentSelect, {\n                    label: mw.msg(\"wikieditor-toolbar-file-float\"),\n                    align: \"top\"\n                });\n                this.alignmentContent.addItems([this.alignmentField]);\n                var formatOptionThumbnail = new OO.ui.ButtonOptionWidget({\n                    data: \"thumbnail\",\n                    label: magicWords.img_thumbnail,\n                    title: magicWords.img_thumbnail\n                });\n                var formatOptionFramed = new OO.ui.ButtonOptionWidget({\n                    data: \"framed\",\n                    label: magicWords.img_framed,\n                    title: magicWords.img_framed\n                });\n                var formatOptionFrameless = new OO.ui.ButtonOptionWidget({\n                    data: \"frameless\",\n                    label: magicWords.img_frameless,\n                    title: magicWords.img_frameless\n                });\n                var formatOptionNone = new OO.ui.ButtonOptionWidget({\n                    data: \"default\",\n                    label: magicWords.img_none,\n                    title: magicWords.img_none\n                });\n                this.formatSelect = new OO.ui.ButtonSelectWidget({\n                    items: [formatOptionThumbnail, formatOptionFramed, formatOptionFrameless, formatOptionNone]\n                });\n                this.formatField = new OO.ui.FieldLayout(this.formatSelect, {\n                    label: mw.msg(\"wikieditor-toolbar-file-format\"),\n                    align: \"top\"\n                });\n                this.formatContent.addItems([this.formatField]);\n                this.panel.$element.append(this.fileMetaContent.$element);\n                this.panel.$element.append(this.alignmentContent.$element);\n                this.panel.$element.append(this.formatContent.$element);\n                this.$body.append(this.panel.$element);\n                this.fileNameInput.connect(this, {\n                    change: \"onFileNameChange\"\n                });\n            };\n            // Specify the dialog height (or don\"t to use the automatically generated height).\n            FileInsertionDialog.prototype.getBodyHeight = function() {\n                return this.panel.$element.outerHeight(true);\n            };\n            // Name validation\n            FileInsertionDialog.prototype.onFileNameChange = function(value) {\n                this.actions.setAbilities({\n                    insert: !!value.length\n                });\n            };\n            // Default state initialization\n            FileInsertionDialog.prototype.getSetupProcess = function(data) {\n                data = data || {};\n                return FileInsertionDialog.super.prototype.getSetupProcess.call(this, data).next(function() {\n                    this.actions.setAbilities({\n                        insert: false\n                    });\n                    this.fileNameInput.setValue(\"\");\n                    this.fileTitleInput.setValue(\"\");\n                    this.sizeInput.setValue(\"\");\n                    this.alignmentSelect.selectItemByData(\"default\");\n                    this.formatSelect.selectItemByData(\"thumbnail\");\n                }, this);\n            };\n            // Context setup\n            FileInsertionDialog.prototype.setContext = function(context) {\n                this.editorContext = context;\n            };\n            // Specify processes to handle the actions.\n            FileInsertionDialog.prototype.getActionProcess = function(action) {\n                if (action === \"insert\") {\n                    return new OO.ui.Process(function() {\n                        this.insertImage();\n                    }, this);\n                }\n                // Fallback to parent handler\n                return FileInsertionDialog.super.prototype.getActionProcess.call(this, action);\n            };\n            // Handles image insertion.\n            FileInsertionDialog.prototype.insertImage = function() {\n                if (!this.editorContext) return;\n                var fileName, caption, fileFloat, fileFormat, fileSize, fileTitle, options, fileUse, hasPxRgx = /.+px$/,\n                    magicWordsI18N = mw.config.get(\"wgWikiEditorMagicWords\");\n                fileName = this.fileNameInput.getValue();\n                caption = this.fileTitleInput.getValue();\n                fileSize = this.sizeInput.getValue();\n                fileFloat = this.alignmentSelect.getSelectedItem().data;\n                fileFormat = this.formatSelect.getSelectedItem().data;\n                // Append px to end to size if not already contains it\n                if (fileSize !== \"\" && !hasPxRgx.test(fileSize)) {\n                    fileSize += \"px\";\n                }\n                if (fileName !== \"\") {\n                    fileTitle = new mw.Title(fileName);\n                    // Append file namespace prefix to filename if not already contains it\n                    if (fileTitle.getNamespaceId() !== 6) {\n                        fileTitle = new mw.Title(fileName, 6);\n                    }\n                    fileName = fileTitle.toText();\n                }\n                options = [fileSize, fileFormat, fileFloat];\n                // Filter empty values\n                options = $.grep(options, function(val) {\n                    return val.length && val !== \"default\";\n                });\n                if (caption.length) {\n                    options.push(caption);\n                }\n                fileUse = options.length === 0 ? fileName : fileName + \"|\" + options.join(\"|\");\n                $.wikiEditor.modules.toolbar.fn.doAction(this.editorContext, {\n                    type: \"replace\",\n                    options: {\n                        pre: \"[[\",\n                        peri: fileUse,\n                        post: \"]]\",\n                        ownline: true\n                    }\n                });\n                this.close();\n            };\n            // Remove legacy file insertion\n            $(\"#wpTextbox1\").wikiEditor(\"removeFromToolbar\", {\n                section: \"main\",\n                group: \"insert\",\n                tool: \"file\"\n            });\n            $(\"#wpTextbox1\").wikiEditor(\"addToToolbar\", {\n                section: \"main\",\n                group: \"insert\",\n                tools: {\n                    \"file-alt\": {\n                        label: mw.msg(\"wikieditor-toolbar-tool-file-title\"),\n                        type: \"button\",\n                        icon: \"insert-file.png\",\n                        offset: [2, -1438],\n                        action: {\n                            type: \"callback\",\n                            execute: function(context) {\n                                var windowManager = new OO.ui.WindowManager();\n                                $(\"body\").append(windowManager.$element);\n                                var fileInsertionDialog = new FileInsertionDialog();\n                                fileInsertionDialog.setContext(context);\n                                windowManager.addWindows([fileInsertionDialog]);\n                                windowManager.openWindow(fileInsertionDialog);\n                            }\n                        }\n                    }\n                }\n            });\n        });\n    });\n});"}}}