{"parse":{"title":"\u6a21\u5757:Lyrics/colors/sub","pageid":301572,"wikitext":{"*":"local module = {}\n\nlocal getArgs = require('Module:Arguments').getArgs\n\nfunction module._charaBlock(args)\n\tlocal colors = mw.text.split(args['colors'], ';')\n\tfor i, v in ipairs(colors) do\n\t\tcolors[i] = mw.ustring.gsub(v, '(.+)=.+', '%1')\t\n\tend\n\tlocal charas = mw.text.split(args['charas'], '\uff1b')\n\tif string.find(colors[#colors], '^%s*$') then table.remove(colors, #colors) end\n\tif string.find(charas[#charas], '^%s*$') then table.remove(charas, #charas) end\n\targs['groupColor'] = args['groupColor'] or ''\n\tlocal hasGroupColor = false\n\tif string.find(args['groupColor'], '^%s-color:([^;]+).*') then\n\t\tcolors[#colors + 1] = string.gsub(args['groupColor'], '^%s-color:([^;]+).*', '%1')\n\t\thasGroupColor = true\n\telseif string.find(args['groupColor'], '.*[^%-]color:([^;]+).*') then\n\t\tcolors[#colors + 1] = string.gsub(args['groupColor'], '.*[^%-]color:([^;]+).*', '%1')\n\t\thasGroupColor = true\n\tend\t\n\t\n\tif string.find(charas[#colors] or '', '^%s*$') then\n\t\tcharas[#colors] = '\u5408\u5531(@nolink)'\t\n\tend\n\t\n\tif hasGroupColor and charas[#colors]:find('%(@nolink%)$') == nil then\n\t\tcharas[#colors] = charas[#colors]..'(@nolink)'\n\tend\n\t\n\tif args['groupName'] ~= nil then\n\t\tcharas[#colors] = args['groupName']..'(@nolink)'\n\tend\n\t\n\tlocal product = {}\n\tfor i, v in ipairs(colors) do\n\t\tv = string.gsub(v, '\\n', '')\n\t\trepeat\n\t\t\tlocal ban = {\n\t\t\t    'lg%(.+%)', 'rg%(.+%)', 'rlg%(.+%)', 'rrg%(.+%)', 'co%(.+%)', 'rb%(.+%)', '^%s*$'\n\t\t\t}\n\t\t\tlocal flag = false\n\t\t\tfor index, ptn in ipairs(ban) do\n\t\t\t\tif string.find(v, ptn) then \n\t\t\t\t\tflag = true\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\tend\n\t\t\tif flag then break end\n\t\t\tlocal charaName = '&nbsp;'..string.gsub(charas[i], '(.+)%(.+%)', '%1')\n\t\t\tlocal arg = string.gsub(charas[i], '.+%((.-)%)', '%1')\n\t\t\tlocal block = mw.html.create('span')\n\t\t\t\t:css('display', 'inline-block')\n\t\t\t\t:css('color', v)\n\t\t\t\t:tag('span'):css({\n\t\t\t\t\twidth = '10px',\n\t\t\t\t\theight = '10px',\n\t\t\t\t\tbackground = v,\n\t\t\t\t\tdisplay = 'inline-block'\n\t\t\t\t})\n\t\t\t\t:done():wikitext(charaName)\n\t\t\t:allDone()\n\t\t\t\n\t\t\tfunction link(link, block)\n\t\t\t\treturn '[['..link..'|'..tostring(block)..']]'\t\n\t\t\tend\n\t\t\t\n\t\t\tif arg == '@nolink' then\n\t\t\t\tproduct[#product + 1] = tostring(block)\n\t\t\telseif arg:find('^@link:.+') then\n\t\t\t\tproduct[#product + 1] = link(arg:match('^@link:(.+)'), block)\t\n\t\t\telse \n\t\t\t\tproduct[#product + 1] = link(charas[i], block)\n\t\t\tend\n\t\t\t\n\t\tuntil true\n\tend\n\n\tlocal productWiki = ''\n\tfor i, v in ipairs(product) do\n\t\tproductWiki = productWiki..v..'<span style=\"cursor:default; -webkit-user-select:none; -moz-user-select:none; -ms-user-select:none; -o-user-select:none; user-select:none;\">&emsp;</span>'\n\tend\n\t\n\treturn productWiki\nend\n\nfunction module.charaBlock(frame)\n\tlocal args = getArgs(frame)\n\treturn module._charaBlock(args)\nend\n\nreturn module"}}}