{"parse":{"title":"User:Downtown Berkeley/common.js","pageid":229801,"wikitext":{"*":"// Customized File Insertion dialog\n// Copyright 2017 The Little Moe New LLC. All rights reserved.\n\nmw.loader.using([\"oojs\", \"oojs-ui\"]).then(function () {\n    $(\"#wpTextbox1\").on(\"wikiEditor-toolbar-doneInitialSections\", function () {\n        function FileInsertionDialog(config) {\n            FileInsertionDialog.super.call(this, config);\n        }\n        OO.inheritClass(FileInsertionDialog, OO.ui.ProcessDialog);\n\n        // Name\n        FileInsertionDialog.static.name = \"fileInsertionDialog\";\n        FileInsertionDialog.static.title = mw.msg(\"wikieditor-toolbar-tool-file-title\");\n        FileInsertionDialog.static.actions = [\n            { flags: \"primary\", label: mw.msg(\"wikieditor-toolbar-tool-file-insert\"), action: \"insert\" },\n            { flags: \"safe\", label: mw.msg(\"wikieditor-toolbar-tool-file-cancel\") }\n        ]\n\n        // Initialization\n        FileInsertionDialog.prototype.initialize = function () {\n            FileInsertionDialog.super.prototype.initialize.call(this);\n            this.panel = new OO.ui.PanelLayout({ padded: true, expanded: false });\n\n            this.fileMetaContent = new OO.ui.FieldsetLayout();\n            this.alignmentContent = new OO.ui.FieldsetLayout();\n            this.formatContent = new OO.ui.FieldsetLayout();\n\n            this.fileNameInput = new OO.ui.TextInputWidget({ indicator: \"required\" });\n            this.fileNameField = new OO.ui.FieldLayout(this.fileNameInput, { label: mw.msg(\"wikieditor-toolbar-file-target\"), align: \"top\" });\n\n            this.fileTitleInput = new OO.ui.TextInputWidget();\n            this.fileTitleField = new OO.ui.FieldLayout(this.fileTitleInput, { label: mw.msg(\"wikieditor-toolbar-file-caption\"), align: \"top\" });\n\n            this.sizeInput = new OO.ui.TextInputWidget();\n            this.sizeField = new OO.ui.FieldLayout(this.sizeInput, { label: mw.msg(\"wikieditor-toolbar-file-size\"), align: \"top\" });\n\n            this.fileMetaContent.addItems([this.fileNameField, this.fileTitleField, this.sizeField]);\n\n            var alignOptionDefault = new OO.ui.ButtonOptionWidget({\n                data: \"default\",\n                label: mw.msg(\"wikieditor-toolbar-file-default\"),\n                title: mw.msg(\"wikieditor-toolbar-file-default\")\n            });\n\n            var alignOptionNone = new OO.ui.ButtonOptionWidget({\n                data: \"none\",\n                label: mw.msg(\"wikieditor-toolbar-file-format-none\"),\n                title: mw.msg(\"wikieditor-toolbar-file-format-none\")\n            });\n\n            var magicWords = mw.config.get(\"wgWikiEditorMagicWords\");\n\n            var alignOptionMid = new OO.ui.ButtonOptionWidget({\n                data: \"center\",\n                label: magicWords.img_center,\n                title: magicWords.img_center\n            });\n\n            var alignOptionLeft = new OO.ui.ButtonOptionWidget({\n                data: \"left\",\n                label: magicWords.img_left,\n                title: magicWords.img_left\n            });\n\n            var alignOptionRight = new OO.ui.ButtonOptionWidget({\n                data: \"right\",\n                label: magicWords.img_right,\n                title: magicWords.img_right\n            });\n\n            this.alignmentSelect = new OO.ui.ButtonSelectWidget({\n                items: [alignOptionNone, alignOptionDefault, alignOptionMid, alignOptionLeft, alignOptionRight]\n            });\n\n            this.alignmentField = new OO.ui.FieldLayout(this.alignmentSelect, { label: mw.msg(\"wikieditor-toolbar-file-float\"), align: \"top\" });\n\n            this.alignmentContent.addItems([this.alignmentField]);\n\n            var formatOptionThumbnail = new OO.ui.ButtonOptionWidget({\n                data: \"thumbnail\",\n                label: magicWords.img_thumbnail,\n                title: magicWords.img_thumbnail\n            });\n\n            var formatOptionFramed = new OO.ui.ButtonOptionWidget({\n                data: \"framed\",\n                label: magicWords.img_framed,\n                title: magicWords.img_framed\n            });\n\n            var formatOptionFrameless = new OO.ui.ButtonOptionWidget({\n                data: \"frameless\",\n                label: magicWords.img_frameless,\n                title: magicWords.img_frameless\n            });\n\n            var formatOptionNone = new OO.ui.ButtonOptionWidget({\n                data: \"default\",\n                label: magicWords.img_none,\n                title: magicWords.img_none\n            });\n\n            this.formatSelect = new OO.ui.ButtonSelectWidget({\n                items: [formatOptionThumbnail, formatOptionFramed, formatOptionFrameless, formatOptionNone]\n            });\n\n            this.formatField = new OO.ui.FieldLayout(this.formatSelect, { label: mw.msg(\"wikieditor-toolbar-file-format\"), align: \"top\" });\n\n            this.formatContent.addItems([this.formatField]);\n\n            this.panel.$element.append(this.fileMetaContent.$element);\n            this.panel.$element.append(this.alignmentContent.$element);\n            this.panel.$element.append(this.formatContent.$element);\n\n            this.$body.append(this.panel.$element);\n            this.fileNameInput.connect(this, { \"change\": \"onFileNameChange\" });\n        }\n\n        // Specify the dialog height (or don\"t to use the automatically generated height).\n        FileInsertionDialog.prototype.getBodyHeight = function () {\n            return this.panel.$element.outerHeight(true);\n        };\n\n        // Name validation\n        FileInsertionDialog.prototype.onFileNameChange = function (value) {\n            this.actions.setAbilities({\n                insert: !!value.length\n            });\n        }\n\n        // Default state initialization\n        FileInsertionDialog.prototype.getSetupProcess = function (data) {\n            data = data || {};\n            return FileInsertionDialog.super.prototype.getSetupProcess.call(this, data)\n                .next(function () {\n                    this.actions.setAbilities({\n                        insert: false\n                    });\n                    this.fileNameInput.setValue(\"\");\n                    this.fileTitleInput.setValue(\"\");\n                    this.sizeInput.setValue(\"\");\n                    this.alignmentSelect.selectItemByData(\"default\");\n                    this.formatSelect.selectItemByData(\"thumbnail\");\n                }, this);\n        };\n\n        // Context setup\n        FileInsertionDialog.prototype.setContext = function (context) {\n            this.editorContext = context;\n        }\n\n        // Specify processes to handle the actions.\n        FileInsertionDialog.prototype.getActionProcess = function (action) {\n            if (action === \"insert\") {\n                return new OO.ui.Process(function () {\n                    this.insertImage();\n                }, this);\n            }\n\n            // Fallback to parent handler\n            return FileInsertionDialog.super.prototype.getActionProcess.call(this, action);\n        }\n\n        // Handles image insertion.\n        FileInsertionDialog.prototype.insertImage = function () {\n            if (!this.editorContext) return;\n\n            var fileName, caption, fileFloat, fileFormat, fileSize, fileTitle,\n                options, fileUse,\n                hasPxRgx = /.+px$/,\n                magicWordsI18N = mw.config.get(\"wgWikiEditorMagicWords\");\n\n            fileName = this.fileNameInput.getValue();\n            caption = this.fileTitleInput.getValue();\n            fileSize = this.sizeInput.getValue();\n            fileFloat = this.alignmentSelect.getSelectedItem().data;\n            fileFormat = this.formatSelect.getSelectedItem().data;\n\n            // Append px to end to size if not already contains it\n            if (fileSize !== \"\" && !hasPxRgx.test(fileSize)) {\n                fileSize += \"px\";\n            }\n            if (fileName !== \"\") {\n                fileTitle = new mw.Title(fileName);\n                // Append file namespace prefix to filename if not already contains it\n                if (fileTitle.getNamespaceId() !== 6) {\n                    fileTitle = new mw.Title(fileName, 6);\n                }\n                fileName = fileTitle.toText();\n            }\n\n            options = [fileSize, fileFormat, fileFloat];\n            // Filter empty values\n            options = $.grep(options, function (val) {\n                return val.length && val !== \"default\";\n            });\n            if (caption.length) {\n                options.push(caption);\n            }\n\n            fileUse = options.length === 0 ? fileName : (fileName + \"|\" + options.join(\"|\"));\n            $.wikiEditor.modules.toolbar.fn.doAction(this.editorContext, {\n                type: \"replace\",\n                options: {\n                    pre: \"[[\",\n                    peri: fileUse,\n                    post: \"]]\",\n                    ownline: true\n                }\n            });\n\n            this.close();\n        }\n\n        // Remove legacy file insertion\n        $(\"#wpTextbox1\").wikiEditor(\"removeFromToolbar\", {\n            \"section\": \"main\",\n            \"group\": \"insert\",\n            \"tool\": \"file\"\n        });\n\n        $(\"#wpTextbox1\").wikiEditor(\"addToToolbar\", {\n            \"section\": \"main\",\n            \"group\": \"insert\",\n            \"tools\": {\n                \"file-alt\": {\n                    label: mw.msg(\"wikieditor-toolbar-tool-file-title\"),\n                    type: \"button\",\n                    icon: \"insert-file.png\",\n                    offset: [2, -1438],\n                    action: {\n                        type: \"callback\",\n                        execute: function (context) {\n                            var windowManager = new OO.ui.WindowManager();\n                            $(\"body\").append(windowManager.$element);\n\n                            var fileInsertionDialog = new FileInsertionDialog();\n                            fileInsertionDialog.setContext(context);\n\n                            windowManager.addWindows([fileInsertionDialog]);\n                            windowManager.openWindow(fileInsertionDialog);\n                        }\n                    }\n                }\n            }\n        });\n    });\n});"}}}