{"parse":{"title":"User:Cwek/cat-a-lot.js","pageid":130599,"wikitext":{"*":"/** \n * Cat-A-Lot\n * Changes category of multiple files\n *\n * Originally by Magnus Manske\n * RegExes by Ilmari Karonen\n * Completely rewritten by DieBuche\n *\n * Requires [[MediaWiki:Gadget-SettingsManager.js]] and [[MediaWiki:Gadget-SettingsUI.js]] (properly registered) for per-user-settings\n *\n * READ THIS PAGE IF YOU WANT TO TRANSLATE OR USE THIS ON ANOTHER SITE:\n * http://commons.wikimedia.org/wiki/MediaWiki:Gadget-Cat-a-lot.js/translating\n * <nowiki>\n */\n\n/*global jQuery:false, mediaWiki:false, alert:false, importStylesheet:false */\n/*jshint curly:false, unused:true, unused:true, forin:false, smarttabs:true, loopfunc:true, browser:true */\n\n( function( $, mw ) {\n\t'use strict';\n\n\tvar nsNumber = mw.config.get( 'wgNamespaceNumber' ),\n\t\tnsCat = 14,\n\t\tcurrentCat = mw.config.get( 'wgTitle' ),\n\t\tformattedNS = mw.config.get( 'wgFormattedNamespaces' ),\n\t\tnsIDs = mw.config.get( 'wgNamespaceIds' ),\n\t\tcatALot;\n\n\tvar msgs = {\n\t\t// Preferences\n\t\t// new: added 2012-09-19. Please translate.\n\t\t// Use user language for i18n\n\t\t'cat-a-lot-watchlistpref': \"Watchlist preference concerning files edited with Cat-A-Lot\",\n\t\t'cat-a-lot-watch_pref': \"According to your general preferences\",\n\t\t'cat-a-lot-watch_nochange': \"Do not change watchstatus\",\n\t\t'cat-a-lot-watch_watch': \"Watch pages edited with Cat-A-Lot\",\n\t\t'cat-a-lot-watch_unwatch': \"Remove pages while editing with Cat-A-Lot from your watchlist\",\n\t\t'cat-a-lot-minorpref': \"Mark edits as minor (if you generally mark your edits as minor, this won't change anything)\",\n\t\t'cat-a-lot-editpagespref': \"Allow categorising pages (including categories) that are not files\",\n\t\t'cat-a-lot-docleanuppref': \"Remove {{Check categories}} and other minor cleanup\",\n\t\t'cat-a-lot-subcatcountpref': \"Sub-categories to show at most\",\n\t\t'cat-a-lot-config-settings': \"Preferences\",\n\t\t// Use site language for i18n\n\t\t'cat-a-lot-pref-save-summary': \"[[Help:Gadget-Cat-a-lot|Cat-a-lot]] is updating user preferences\",\n\n\t\t//Progress\n\t\t'cat-a-lot-loading': 'Loading...',\n\t\t'cat-a-lot-editing': 'Editing page',\n\t\t'cat-a-lot-of': 'of ',\n\t\t'cat-a-lot-skipped-already': 'The following {{PLURAL:$1|1=page was|$1 pages were}} skipped, because the page was already in the category:',\n\t\t'cat-a-lot-skipped-not-found': 'The following {{PLURAL:$1|1=page was|$1 pages were}} skipped, because the old category could not be found:',\n\t\t'cat-a-lot-skipped-server': 'The following {{PLURAL:$1|1=page|$1 pages}} couldn\\'t be changed, since there were problems connecting to the server:',\n\t\t'cat-a-lot-all-done': 'All pages are processed.',\n\t\t'cat-a-lot-done': 'Done!',\n\t\t'cat-a-lot-added-cat': 'Added category $1',\n\t\t'cat-a-lot-copied-cat': 'Copied to category $1',\n\t\t'cat-a-lot-moved-cat': 'Moved to category $1',\n\t\t'cat-a-lot-removed-cat': 'Removed from category $1',\n\t\t'cat-a-lot-return-to-page': 'Return to page',\n\t\t'cat-a-lot-cat-not-found': 'Category not found.',\n\n\n\t\t//as in 17 files selected\n\t\t'cat-a-lot-files-selected': '{{PLURAL:$1|1=One file|$1 files}} selected.',\n\n\t\t//Actions\n\t\t'cat-a-lot-copy': 'Copy',\n\t\t'cat-a-lot-move': 'Move',\n\t\t'cat-a-lot-add': 'Add',\n\t\t'cat-a-lot-remove-from-cat': 'Remove from this category',\n\t\t'cat-a-lot-enter-name': 'Enter category name',\n\t\t'cat-a-lot-select': 'Select',\n\t\t'cat-a-lot-all': 'all',\n\t\t'cat-a-lot-none': 'none',\n\n\t\t'cat-a-lot-none-selected': 'No files selected!',\n\n\t\t//Summaries:\n\t\t'cat-a-lot-summary-add': '[[Help:Cat-a-lot|Cat-a-lot]]: Adding [[Category:$1]]',\n\t\t'cat-a-lot-summary-copy': '[[Help:Cat-a-lot|Cat-a-lot]]: Copying from [[Category:$1]] to [[Category:$2]]',\n\t\t'cat-a-lot-summary-move': '[[Help:Cat-a-lot|Cat-a-lot]]: Moving from [[Category:$1]] to [[Category:$2]]',\n\t\t'cat-a-lot-summary-remove': '[[Help:Cat-a-lot|Cat-a-lot]]: Removing from [[Category:$1]]'\n\t};\n\tmw.messages.set( msgs );\n\t\n\tfunction msg( /*params*/ ) {\n\t\tvar args = Array.prototype.slice.call( arguments, 0 );\n\t\targs[0] = 'cat-a-lot-' + args[0];\n\t\treturn mw.message.apply( mw.message, args ).parse();\n\t}\n\tfunction msgPlain( key ) {\n\t\treturn mw.message( 'cat-a-lot-' + key ).plain();\n\t}\n\t\t\n\t// There is only one cat-a-lot on one page\n\tvar $removeLink,\n\t\t$body, $container, $dataContainer, $searchInputContainer, $searchInput, $resultList, $markCounter,\n\t\t$selections, $selectAll, $selectNone, $settingsWrapper, $settingsLink, $head, $link;\n\t\t\n\tcatALot = window.catALot = {\n\t\tapiUrl: mw.util.wikiScript( 'api' ),\n\t\tsearchmode: false,\n\t\tversion: 3.5,\n\t\tsetHeight: 450,\n\t\tsettings: {},\n\t\tinit: function() {\n\t\t\tthis._initSettings();\n\n\t\t\t$body = $( document.body );\n\t\t\t$container = $( '<div id=\"cat_a_lot\"></div>' )\n\t\t\t\t.appendTo( $body );\n\t\t\t$dataContainer = $( '<div id=\"cat_a_lot_data\"></div>' )\n\t\t\t\t.appendTo( $container );\n\t\t\t$searchInputContainer = $( '<div>' )\n\t\t\t\t.appendTo( $dataContainer );\n\t\t\t$searchInput = $( '<input type=\"text\" id=\"cat_a_lot_searchcatname\" />' )\n\t\t\t\t.attr( 'placeholder', msgPlain( 'enter-name' ) )\n\t\t\t\t.appendTo( $searchInputContainer );\n\t\t\t$resultList = $( '<div id=\"cat_a_lot_category_list\"></div>' )\n\t\t\t\t.appendTo( $dataContainer );\n\t\t\t$markCounter = $( '<div id=\"cat_a_lot_mark_counter\"> </div>' )\n\t\t\t\t.appendTo( $dataContainer );\n\t\t\t$selections = $( '<div id=\"cat_a_lot_selections\"></div>' )\n\t\t\t\t.text( msgPlain( 'select' ) )\n\t\t\t\t.appendTo( $dataContainer );\n\t\t\t$selectAll = $( '<a id=\"cat_a_lot_select_all\"></a>' )\n\t\t\t\t.text( msgPlain( 'all' ) )\n\t\t\t\t.appendTo( $selections.append(' ') );\n\t\t\t$selectNone = $( '<a id=\"cat_a_lot_select_none\"></a>' )\n\t\t\t\t.text( msgPlain( 'none' ) )\n\t\t\t\t.appendTo( $selections.append(' \u2022 ') );\n\t\t\t$settingsWrapper = $( '<div id=\"cat_a_lot_settings\"></div>' )\n\t\t\t\t.appendTo( $dataContainer );\n\t\t\t$settingsLink = $( '<a id=\"cat_a_lot_config_settings\"></a>' )\n\t\t\t\t.text( msgPlain( 'config-settings' ) )\n\t\t\t\t.appendTo( $settingsWrapper );\n\t\t\t$head = $( '<div id=\"cat_a_lot_head\"></div>' )\n\t\t\t\t.appendTo( $container );\n\t\t\t$link = $( '<a id=\"cat_a_lot_toggle\"></a>' )\n\t\t\t\t.text( 'Cat-a-lot' )\n\t\t\t\t.appendTo( $head );\n\n\t\t\tif ( !this.searchmode ) {\n\t\t\t\t$removeLink = $( '<a id=\"cat_a_lot_remove\"></a>' )\n\t\t\t\t\t.html( msg( 'remove-from-cat' ) )\n\t\t\t\t\t.appendTo( $selections )\n\t\t\t\t\t.click( function() {\n\t\t\t\t\t\tcatALot.remove();\n\t\t\t\t\t} );\n\t\t\t}\n\n\t\t\tif ( ( 'MediaWiki:Gadget-Cat-a-lot.js' === mw.util.getParamValue( 'withJS' ) &&\n\t\t\t\t!mw.util.getParamValue( 'withCSS' ) ) ||\n\t\t\t\tmw.loader.getState('ext.gadget.Cat-a-lot') === 'registered' ) {\n\t\t\t\t\timportStylesheet( 'MediaWiki:Gadget-Cat-a-lot.css' );\n\t\t\t}\n\n\t\t\tvar reCat = new RegExp( '^\\\\s*' + catALot.localizedRegex( nsCat, 'Category' ) + ':', '' );\n\n\t\t\t$searchInput.keypress( function( e ) {\n\t\t\t\t\tif ( e.which === 13 ) {\n\t\t\t\t\t\tcatALot.updateCats( $.trim( $( this )\n\t\t\t\t\t\t\t.val() ) );\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t.bind( 'input keyup', function() {\n\t\t\t\t\tvar oldVal = this.value,\n\t\t\t\t\t\tnewVal = oldVal.replace( reCat, '' );\n\t\t\t\t\tif ( newVal !== oldVal ) this.value = newVal;\n\t\t\t\t} );\n\t\t\tif ( this.searchmode ) {\n\t\t\t\t$searchInput.val( mw.util.getParamValue( 'search' ) );\n\t\t\t}\n\t\t\tfunction initAutocomplete() {\n\t\t\t\tif ( catALot.autoCompleteIsEnabled ) return;\n\t\t\t\tcatALot.autoCompleteIsEnabled = true;\n\n\t\t\t\t$searchInput.autocomplete( {\n\t\t\t\t\tsource: function( request, response ) {\n\t\t\t\t\t\tcatALot.doAPICall( {\n\t\t\t\t\t\t\taction: 'opensearch',\n\t\t\t\t\t\t\tsearch: request.term,\n\t\t\t\t\t\t\tnamespace: nsCat\n\t\t\t\t\t\t}, function( data ) {\n\t\t\t\t\t\t\tif ( data[ 1 ] ) response( $( data[ 1 ] )\n\t\t\t\t\t\t\t\t.map( function( index, item ) {\n\t\t\t\t\t\t\t\t\treturn item.replace( reCat, '' );\n\t\t\t\t\t\t\t\t} ) );\n\t\t\t\t\t\t} );\n\t\t\t\t\t},\n\t\t\t\t\topen: function() {\n\t\t\t\t\t\t$( \".ui-autocomplete\" )\n\t\t\t\t\t\t\t.position( {\n\t\t\t\t\t\t\t\tmy: $( 'body' )\n\t\t\t\t\t\t\t\t\t.is( '.rtl' ) ? \"left bottom\" : \"right bottom\",\n\t\t\t\t\t\t\t\tat: $( 'body' )\n\t\t\t\t\t\t\t\t\t.is( '.rtl' ) ? \"left top\" : \"right top\",\n\t\t\t\t\t\t\t\tof: $searchInput\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t},\n\t\t\t\t\tappendTo: '#cat_a_lot'\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t$selectAll\n\t\t\t\t.click( function() {\n\t\t\t\t\tcatALot.toggleAll( true );\n\t\t\t\t} );\n\t\t\t$selectNone\n\t\t\t\t.click( function() {\n\t\t\t\t\tcatALot.toggleAll( false );\n\t\t\t\t} );\n\t\t\t$link\n\t\t\t\t.click( function() {\n\t\t\t\t\t$( this ).toggleClass( 'cat_a_lot_enabled' );\n\t\t\t\t\t// Load autocomplete on demand\n\t\t\t\t\tmw.loader.using( ['jquery.ui.autocomplete'], initAutocomplete );\n\t\t\t\t\tcatALot.run();\n\t\t\t\t} );\n\t\t\t$settingsLink\n\t\t\t\t.click( function() {\n\t\t\t\t\tcatALot.manageSettings();\n\t\t\t\t} );\n\n\t\t\tthis.localCatName = formattedNS[ nsCat ];\n\t\t},\n\t\tfindAllLabels: function() {\n\t\t\t// It's possible to allow any kind of pages as well but what happens if you click on \"select all\" and don't expect it\n\t\t\tif ( this.searchmode ) {\n\t\t\t\tthis.labels = $( 'table.searchResultImage' )\n\t\t\t\t\t.find( 'tr>td:eq(1)' );\n\t\t\t\tif ( this.settings.editpages ) {\n\t\t\t\t\tthis.labels = this.labels.add( 'div.mw-search-result-heading' );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.labels = $( 'div.gallerytext' )\n\t\t\t\t\t.add( $( 'div#mw-category-media' )\n\t\t\t\t\t\t.find( 'li[class!=\"gallerybox\"]' ) );\n\n\t\t\t\tif ( this.settings.editpages ) {\n\t\t\t\t\tvar $pgs = $( 'div#mw-pages, div#mw-subcategories' )\n\t\t\t\t\t\t.find( 'li' );\n\t\t\t\t\tthis.labels = this.labels.add( $pgs );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgetTitleFromLink: function( href ) {\n\t\t\ttry {\n\t\t\t\treturn decodeURIComponent( href )\n\t\t\t\t\t.match( /wiki\\/(.+?)(?:#.+)?$/ )[ 1 ].replace( /_/g, ' ' );\n\t\t\t} catch ( ex ) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t},\n\n\t\tgetMarkedLabels: function() {\n\t\t\tvar marked = [];\n\t\t\tthis.selectedLabels = this.labels.filter( '.cat_a_lot_selected' );\n\t\t\tthis.selectedLabels.each( function() {\n\t\t\t\tvar file = $( this )\n\t\t\t\t\t.find( 'a[title]' ),\n\t\t\t\t\ttitle = file.attr( 'title' ) || catALot.getTitleFromLink( file.attr( 'href' ) ) || catALot.getTitleFromLink( $( this )\n\t\t\t\t\t\t.find( 'a' )\n\t\t\t\t\t\t.attr( 'href' ) );\n\n\t\t\t\tmarked.push( [ title, $( this ) ] );\n\t\t\t} );\n\t\t\treturn marked;\n\t\t},\n\n\t\tupdateSelectionCounter: function() {\n\t\t\tthis.selectedLabels = this.labels.filter( '.cat_a_lot_selected' );\n\t\t\t$markCounter\n\t\t\t\t.show()\n\t\t\t\t.html( msg( 'files-selected', this.selectedLabels.length ) );\n\t\t},\n\n\t\tmakeClickable: function() {\n\t\t\tthis.findAllLabels();\n\t\t\tthis.labels.catALotShiftClick( function() {\n\t\t\t\t\tcatALot.updateSelectionCounter();\n\t\t\t\t} )\n\t\t\t\t.addClass( 'cat_a_lot_label' );\n\t\t},\n\n\t\ttoggleAll: function( select ) {\n\t\t\tthis.labels.toggleClass( 'cat_a_lot_selected', select );\n\t\t\tthis.updateSelectionCounter();\n\t\t},\n\n\t\tgetSubCats: function() {\n\t\t\tvar data = {\n\t\t\t\taction: 'query',\n\t\t\t\tlist: 'categorymembers',\n\t\t\t\tcmtype: 'subcat',\n\t\t\t\tcmlimit: this.settings.subcatcount,\n\t\t\t\tcmtitle: 'Category:' + this.currentCategory\n\t\t\t};\n\n\t\t\tthis.doAPICall( data, function( result ) {\n\n\t\t\t\tvar cats = result.query.categorymembers;\n\n\t\t\t\tcatALot.subCats = [];\n\t\t\t\tfor ( var i = 0; i < cats.length; i++ ) {\n\t\t\t\t\tcatALot.subCats.push( cats[ i ].title.replace( /^[^:]+:/, \"\" ) );\n\t\t\t\t}\n\t\t\t\tcatALot.catCounter++;\n\t\t\t\tif ( catALot.catCounter === 2 ) catALot.showCategoryList();\n\t\t\t} );\n\t\t},\n\n\t\tgetParentCats: function() {\n\t\t\tvar data = {\n\t\t\t\taction: 'query',\n\t\t\t\tprop: 'categories',\n\t\t\t\ttitles: 'Category:' + this.currentCategory\n\t\t\t};\n\t\t\tthis.doAPICall( data, function( result ) {\n\t\t\t\tcatALot.parentCats = [];\n\t\t\t\tvar cats, pages = result.query.pages;\n\t\t\t\tif ( pages[ -1 ] && pages[ -1 ].missing === '' ) {\n\t\t\t\t\t$resultList.html( '<span id=\"cat_a_lot_no_found\">' + msg( 'cat-not-found' ) + '</span>' );\n\t\t\t\t\tdocument.body.style.cursor = 'auto';\n\n\t\t\t\t\t$resultList.append( '<table></table>' );\n\t\t\t\t\tcatALot.createCatLinks( \"\u2192\", [ catALot.currentCategory ] );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// there should be only one, but we don't know its ID\n\t\t\t\tfor ( var id in pages ) {\n\t\t\t\t\tcats = pages[ id ].categories;\n\t\t\t\t}\n\t\t\t\tfor ( var i = 0; i < cats.length; i++ ) {\n\t\t\t\t\tcatALot.parentCats.push( cats[ i ].title.replace( /^[^:]+:/, \"\" ) );\n\t\t\t\t}\n\n\t\t\t\tcatALot.catCounter++;\n\t\t\t\tif ( catALot.catCounter === 2 ) catALot.showCategoryList();\n\t\t\t} );\n\t\t},\n\t\tlocalizedRegex: function( namespaceNumber, fallback ) {\n\t\t\t//Copied from HotCat. Thanks Lupo.\n\t\t\tvar wikiTextBlank = '[\\\\t _\\\\xA0\\\\u1680\\\\u180E\\\\u2000-\\\\u200A\\\\u2028\\\\u2029\\\\u202F\\\\u205F\\\\u3000]+';\n\t\t\tvar wikiTextBlankRE = new RegExp( wikiTextBlank, 'g' );\n\n\t\t\tvar createRegexStr = function( name ) {\n\t\t\t\tif ( !name || name.length === 0 ) return \"\";\n\t\t\t\tvar regex_name = \"\";\n\t\t\t\tfor ( var i = 0; i < name.length; i++ ) {\n\t\t\t\t\tvar initial = name.substr( i, 1 );\n\t\t\t\t\tvar ll = initial.toLowerCase();\n\t\t\t\t\tvar ul = initial.toUpperCase();\n\t\t\t\t\tif ( ll === ul ) {\n\t\t\t\t\t\tregex_name += initial;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tregex_name += '[' + ll + ul + ']';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn regex_name.replace( /([\\\\\\^\\$\\.\\?\\*\\+\\(\\)])/g, '\\\\$1' )\n\t\t\t\t\t.replace( wikiTextBlankRE, wikiTextBlank );\n\t\t\t};\n\n\t\t\tfallback = fallback.toLowerCase();\n\t\t\tvar canonical = formattedNS[ namespaceNumber ].toLowerCase();\n\t\t\tvar RegexString = createRegexStr( canonical );\n\t\t\tif ( fallback && canonical !== fallback ) RegexString += '|' + createRegexStr( fallback );\n\t\t\tfor ( var catName in nsIDs ) {\n\t\t\t\tif ( typeof( catName ) === 'string' && catName.toLowerCase() !== canonical && catName.toLowerCase() !== fallback && nsIDs[ catName ] === namespaceNumber ) {\n\t\t\t\t\tRegexString += '|' + createRegexStr( catName );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ( '(?:' + RegexString + ')' );\n\t\t},\n\t\tregexBuilder: function( category ) {\n\t\t\tvar catname = this.localizedRegex( nsCat, 'Category' );\n\n\t\t\t// Build a regexp string for matching the given category:\n\t\t\t// trim leading/trailing whitespace and underscores\n\t\t\tcategory = category.replace( /^[\\s_]+/, \"\" )\n\t\t\t\t.replace( /[\\s_]+$/, \"\" );\n\n\t\t\t// escape regexp metacharacters (= any ASCII punctuation except _)\n\t\t\tcategory = mw.RegExp.escape( category );\n\n\t\t\t// any sequence of spaces and underscores should match any other\n\t\t\tcategory = category.replace( /[\\s_]+/g, '[\\\\s_]+' );\n\n\t\t\t// Make the first character case-insensitive:\n\t\t\tvar first = category.substr( 0, 1 );\n\t\t\tif ( first.toUpperCase() !== first.toLowerCase() ) category = '[' + first.toUpperCase() + first.toLowerCase() + ']' + category.substr( 1 );\n\n\t\t\t// Compile it into a RegExp that matches MediaWiki category syntax (yeah, it looks ugly):\n\t\t\t// XXX: the first capturing parens are assumed to match the sortkey, if present, including the | but excluding the ]]\n\t\t\treturn new RegExp( '\\\\[\\\\[[\\\\s_]*' + catname + '[\\\\s_]*:[\\\\s_]*' + category + '[\\\\s_]*(\\\\|[^\\\\]]*(?:\\\\][^\\\\]]+)*)?\\\\]\\\\]', 'g' );\n\t\t},\n\n\t\tgetContent: function( file, targetcat, mode ) {\n\n\t\t\tvar data = {\n\t\t\t\taction: 'query',\n\t\t\t\tprop: 'info|revisions',\n\t\t\t\trvprop: 'content|timestamp',\n\t\t\t\tintoken: 'edit',\n\t\t\t\ttitles: file[ 0 ]\n\t\t\t};\n\n\t\t\tthis.doAPICall( data, function( result ) {\n\t\t\t\tcatALot.editCategories( result, file, targetcat, mode );\n\t\t\t} );\n\t\t},\n\n\t\t// Remove {{Uncategorized}}. No need to replace it with anything.\n\t\tremoveUncat: function( text ) {\n\t\t\treturn text.replace( /\\{\\{\\s*[Uu]ncategorized\\s*(\\|?.*?)\\}\\}/, \"\" );\n\t\t},\n\n\t\tdoCleanup: function( text ) {\n\t\t\tif ( this.settings.docleanup ) {\n\t\t\t\treturn text.replace( /\\{\\{\\s*[Ch]eck categories\\s*(\\|?.*?)\\}\\}/, \"\" );\n\t\t\t} else {\n\t\t\t\treturn text;\n\t\t\t}\n\t\t},\n\n\t\teditCategories: function( result, file, targetcat, mode ) {\n\t\t\tvar otext, starttimestamp, timestamp;\n\t\t\tif ( !result ) {\n\t\t\t\t//Happens on unstable wifi connections..\n\t\t\t\tthis.connectionError.push( file[ 0 ] );\n\t\t\t\tthis.updateCounter();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar pages = result.query.pages;\n\n\t\t\t// there should be only one, but we don't know its ID\n\t\t\tfor ( var id in pages ) {\n\t\t\t\t// The edittoken only changes between logins\n\t\t\t\tthis.edittoken = pages[ id ].edittoken;\n\t\t\t\totext = pages[ id ].revisions[ 0 ][ '*' ];\n\t\t\t\tstarttimestamp = pages[ id ].starttimestamp;\n\t\t\t\ttimestamp = pages[ id ].revisions[ 0 ].timestamp;\n\t\t\t}\n\n\n\t\t\tvar sourcecat = currentCat;\n\t\t\t// Check if that file is already in that category\n\t\t\tif ( mode !== \"remove\" && this.regexBuilder( targetcat )\n\t\t\t\t.test( otext ) ) {\n\n\t\t\t\t//If the new cat is already there, just remove the old one.\n\t\t\t\tif ( mode === 'move' ) {\n\t\t\t\t\tmode = 'remove';\n\t\t\t\t} else {\n\t\t\t\t\tthis.alreadyThere.push( file[ 0 ] );\n\t\t\t\t\tthis.updateCounter();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar text = otext;\n\t\t\tvar comment;\n\n\t\t\t// Fix text\n\t\t\tswitch ( mode ) {\n\t\t\t\tcase 'add':\n\t\t\t\t\ttext += \"\\n[[\" + this.localCatName + \":\" + targetcat + \"]]\\n\";\n\t\t\t\t\tcomment = msgPlain( 'summary-add' ).replace( '$1', targetcat );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'copy':\n\t\t\t\t\ttext = text.replace( this.regexBuilder( sourcecat ), \"[[\" + this.localCatName + \":\" + sourcecat + \"$1]]\\n[[\" + this.localCatName + \":\" + targetcat + \"$1]]\" );\n\t\t\t\t\tcomment = msgPlain( 'summary-copy' ).replace( '$1', sourcecat ).replace( '$2', targetcat );\n\t\t\t\t\t//If category is added through template:\n\t\t\t\t\tif ( otext === text ) {\n\t\t\t\t\t\ttext += \"\\n[[\" + this.localCatName + \":\" + targetcat + \"]]\";\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'move':\n\t\t\t\t\ttext = text.replace( this.regexBuilder( sourcecat ), \"[[\" + this.localCatName + \":\" + targetcat + \"$1]]\" );\n\t\t\t\t\tcomment = msgPlain( 'summary-move' ).replace( '$1', sourcecat ).replace( '$2', targetcat );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'remove':\n\t\t\t\t\ttext = text.replace( this.regexBuilder( sourcecat ), \"\" );\n\t\t\t\t\tcomment = msgPlain( 'summary-remove' ).replace( '$1', sourcecat );\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif ( text === otext ) {\n\t\t\t\tthis.notFound.push( file[ 0 ] );\n\t\t\t\tthis.updateCounter();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Remove uncat after we checked whether we changed the text successfully.\n\t\t\t// Otherwise we might fail to do the changes, but still replace {{uncat}}\n\t\t\tif ( mode !== 'remove' ) {\n\t\t\t\ttext = this.doCleanup( this.removeUncat( text ) );\n\t\t\t}\n\t\t\tvar data = {\n\t\t\t\taction: 'edit',\n\t\t\t\tsummary: comment,\n\t\t\t\ttitle: file[ 0 ],\n\t\t\t\ttext: text,\n\t\t\t\tstarttimestamp: starttimestamp,\n\t\t\t\tbasetimestamp: timestamp,\n\t\t\t\twatchlist: this.settings.watchlist,\n\t\t\t\ttoken: this.edittoken\n\t\t\t};\n\t\t\tif ( this.settings.minor ) data.minor = true;\n\n\t\t\tthis.doAPICall( data, function() {\n\t\t\t\tcatALot.updateCounter();\n\t\t\t} );\n\t\t\tthis.markAsDone( file[ 1 ], mode, targetcat );\n\t\t},\n\t\tmarkAsDone: function( label, mode, targetcat ) {\n\n\t\t\tlabel.addClass( 'cat_a_lot_markAsDone' );\n\t\t\tswitch ( mode ) {\n\t\t\t\tcase 'add':\n\t\t\t\t\tlabel.append( '<br>' + msg( 'added-cat', targetcat ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'copy':\n\t\t\t\t\tlabel.append( '<br>' + msg( 'copied-cat', targetcat ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'move':\n\t\t\t\t\tlabel.append( '<br>' + msg( 'moved-cat', targetcat ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'remove':\n\t\t\t\t\tlabel.append( '<br>' + msg( 'removed-cat' ) );\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t\tupdateCounter: function() {\n\n\t\t\tthis.counterCurrent++;\n\t\t\tif ( this.counterCurrent > this.counterNeeded ) this.displayResult();\n\t\t\telse this.domCounter.text( this.counterCurrent );\n\t\t},\n\n\t\tdisplayResult: function() {\n\n\t\t\tdocument.body.style.cursor = 'auto';\n\t\t\t$( '.cat_a_lot_feedback' )\n\t\t\t\t.addClass( 'cat_a_lot_done' );\n\t\t\t$( '.ui-dialog-content' )\n\t\t\t\t.height( 'auto' );\n\t\t\tvar rep = this.domCounter.parent();\n\t\t\trep.html( '<h3>' + msg( 'done' ) + '</h3>' );\n\t\t\trep.append( msg( 'all-done' ) + '<br />' );\n\n\t\t\tvar close = $( '<a>' )\n\t\t\t\t.text( msgPlain( 'return-to-page' ) );\n\t\t\tclose.click( function() {\n\t\t\t\tcatALot.progressDialog.remove();\n\t\t\t\tcatALot.toggleAll( false );\n\t\t\t} );\n\t\t\trep.append( close );\n\t\t\tif ( this.alreadyThere.length ) {\n\t\t\t\trep.append( '<h5>' + msg( 'skipped-already', this.alreadyThere.length ) + '</h5>' );\n\t\t\t\trep.append( this.alreadyThere.join( '<br>' ) );\n\t\t\t}\n\t\t\tif ( this.notFound.length ) {\n\t\t\t\trep.append( '<h5>' + msg( 'skipped-not-found', this.notFound.length ) + '</h5>' );\n\t\t\t\trep.append( this.notFound.join( '<br>' ) );\n\t\t\t}\n\t\t\tif ( this.connectionError.length ) {\n\t\t\t\trep.append( '<h5>' + msg( 'skipped-server', this.connectionError.length ) + '</h5>' );\n\t\t\t\trep.append( this.connectionError.join( '<br>' ) );\n\t\t\t}\n\n\t\t},\n\n\t\tmoveHere: function( targetcat ) {\n\t\t\tthis.doSomething( targetcat, 'move' );\n\t\t},\n\n\t\tcopyHere: function( targetcat ) {\n\t\t\tthis.doSomething( targetcat, 'copy' );\n\t\t},\n\n\t\taddHere: function( targetcat ) {\n\t\t\tthis.doSomething( targetcat, 'add' );\n\t\t},\n\n\t\tremove: function() {\n\t\t\tthis.doSomething( '', 'remove' );\n\t\t},\n\n\t\tdoSomething: function( targetcat, mode ) {\n\t\t\tvar files = this.getMarkedLabels();\n\t\t\tif ( files.length === 0 ) {\n\t\t\t\talert( msgPlain( 'none-selected' ) );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.notFound = [];\n\t\t\tthis.alreadyThere = [];\n\t\t\tthis.connectionError = [];\n\t\t\tthis.counterCurrent = 1;\n\t\t\tthis.counterNeeded = files.length;\n\t\t\tmw.loader.using( ['jquery.ui.dialog', 'mediawiki.RegExp'], function() {\n\t\t\t\tcatALot.showProgress();\n\t\t\t\tfor ( var i = 0; i < files.length; i++ ) {\n\t\t\t\t\tcatALot.getContent( files[ i ], targetcat, mode );\n\t\t\t\t}\t\n\t\t\t} );\n\t\t},\n\n\t\tdoAPICall: function( params, callback ) {\n\t\t\tparams.format = 'json';\n\t\t\tvar i = 0;\n\t\t\tvar apiUrl = this.apiUrl;\n\t\t\tvar handleError = function( jqXHR, textStatus, errorThrown ) {\n\t\t\t\tif ( window.console && $.isFunction( window.console.log ) ) {\n\t\t\t\t\twindow.console.log( 'Error: ', jqXHR, textStatus, errorThrown );\n\t\t\t\t}\n\t\t\t\tif ( i < 4 ) {\n\t\t\t\t\twindow.setTimeout( doCall, 300 );\n\t\t\t\t\ti++;\n\t\t\t\t} else if ( params.title ) {\n\t\t\t\t\tthis.connectionError.push( params.title );\n\t\t\t\t\tthis.updateCounter();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t};\n\t\t\tvar doCall = function() {\n\t\t\t\t$.ajax( {\n\t\t\t\t\turl: apiUrl,\n\t\t\t\t\tcache: false,\n\t\t\t\t\tdataType: 'json',\n\t\t\t\t\tdata: params,\n\t\t\t\t\ttype: 'POST',\n\t\t\t\t\tsuccess: callback,\n\t\t\t\t\terror: handleError\n\t\t\t\t} );\n\t\t\t};\n\t\t\tdoCall();\n\t\t},\n\n\t\tcreateCatLinks: function( symbol, list ) {\n\t\t\tlist.sort();\n\t\t\tvar domlist = $resultList.find( 'table' );\n\t\t\tfor ( var i = 0; i < list.length; i++ ) {\n\t\t\t\tvar $tr = $( '<tr>' );\n\n\t\t\t\tvar $link = $( '<a>' ),\n\t\t\t\t\t$add, $move, $copy;\n\n\t\t\t\t$link.text( list[ i ] );\n\t\t\t\t$tr.data( 'cat', list[ i ] );\n\t\t\t\t$link.click( function() {\n\t\t\t\t\tcatALot.updateCats( $( this ).closest('tr').data( 'cat' ) );\n\t\t\t\t} );\n\n\t\t\t\tif ( this.searchmode ) {\n\t\t\t\t\t$add = $( '<a class=\"cat_a_lot_action\"></a>' )\n\t\t\t\t\t\t.text( msgPlain( 'add' ) )\n\t\t\t\t\t\t.click( function() {\n\t\t\t\t\t\t\tcatALot.addHere( $( this ).closest('tr').data( 'cat' ) );\n\t\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\t$move = $( '<a class=\"cat_a_lot_move\"></a>' )\n\t\t\t\t\t\t.text( msgPlain( 'move' ) )\n\t\t\t\t\t\t.click( function() {\n\t\t\t\t\t\t\tcatALot.moveHere( $( this ).closest('tr').data( 'cat' ) );\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t$copy = $( '<a class=\"cat_a_lot_action\"></a>' )\n\t\t\t\t\t\t.text( msgPlain( 'copy' ) )\n\t\t\t\t\t\t.click( function() {\n\t\t\t\t\t\t\tcatALot.copyHere( $( this ).closest('tr').data( 'cat' ) );\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t$tr.append( $('<td>').text( symbol ) )\n\t\t\t\t\t.append( $('<td>').append( $link ) );\n\n\t\t\t\t// Can't move to source category\n\t\t\t\tif ( list[ i ] !== currentCat && this.searchmode ) {\n\t\t\t\t\t$tr.append( $('<td>').append( $add ) );\n\t\t\t\t} else if ( list[ i ] !== currentCat && !this.searchmode ) {\n\t\t\t\t\t$tr.append( $('<td>').append( $move ),  $('<td>').append( $copy ) );\n\t\t\t\t}\n\n\t\t\t\tdomlist.append( $tr );\n\t\t\t}\n\t\t},\n\n\t\tgetCategoryList: function() {\n\t\t\tthis.catCounter = 0;\n\t\t\tthis.getParentCats();\n\t\t\tthis.getSubCats();\n\t\t},\n\n\t\tshowCategoryList: function() {\n\t\t\tvar thiscat = [ this.currentCategory ];\n\n\t\t\t$resultList.empty();\n\t\t\t$resultList.append( '<table></table>' );\n\n\t\t\tthis.createCatLinks( \"\u2191\", this.parentCats );\n\t\t\tthis.createCatLinks( \"\u2192\", thiscat );\n\t\t\tthis.createCatLinks( \"\u2193\", this.subCats );\n\n\t\t\tdocument.body.style.cursor = 'auto';\n\t\t\t//Reset width\n\t\t\t$container.width( '' );\n\t\t\t$container.height( '' );\n\t\t\t$container.width( Math.min( $container.width() * 1.1 + 15, $( window ).width() - 10 ) );\n\n\t\t\t$resultList.css( {\n\t\t\t\tmaxHeight: this.setHeight + 'px',\n\t\t\t\theight: ''\n\t\t\t} );\n\t\t},\n\n\t\tupdateCats: function( newcat ) {\n\t\t\tdocument.body.style.cursor = 'wait';\n\n\t\t\tthis.currentCategory = newcat;\n\t\t\t$resultList.html( '<div class=\"cat_a_lot_loading\"></div>' ).text( msgPlain( 'loading' ) );\n\t\t\tthis.getCategoryList();\n\t\t},\n\t\tshowProgress: function() {\n\t\t\tdocument.body.style.cursor = 'wait';\n\n\t\t\tthis.progressDialog = $( '<div></div>' )\n\t\t\t\t.html( msg( 'editing' ) + ' <span id=\"cat_a_lot_current\">' + this.counterCurrent + '</span> ' + msg( 'of' ) + this.counterNeeded )\n\t\t\t\t.dialog( {\n\t\t\t\t\twidth: 450,\n\t\t\t\t\theight: 90,\n\t\t\t\t\tminHeight: 90,\n\t\t\t\t\tmodal: true,\n\t\t\t\t\tresizable: false,\n\t\t\t\t\tdraggable: false,\n\t\t\t\t\tcloseOnEscape: false,\n\t\t\t\t\tdialogClass: \"cat_a_lot_feedback\"\n\t\t\t\t} );\n\t\t\t$( '.ui-dialog-titlebar' )\n\t\t\t\t.hide();\n\t\t\tthis.domCounter = $( '#cat_a_lot_current' );\n\n\t\t},\n\n\t\trun: function() {\n\t\t\tif ( $( '.cat_a_lot_enabled' ).length ) {\n\t\t\t\tthis.makeClickable();\n\t\t\t\t$dataContainer\n\t\t\t\t\t.show();\n\t\t\t\t$container\n\t\t\t\t\t.resizable( {\n\t\t\t\t\t\thandles: 'n',\n\t\t\t\t\t\talsoResize: '#cat_a_lot_category_list',\n\t\t\t\t\t\tresize: function() {\n\t\t\t\t\t\t\t$( this )\n\t\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\t\tleft: '',\n\t\t\t\t\t\t\t\t\ttop: ''\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\tcatALot.setHeight = $( this )\n\t\t\t\t\t\t\t\t.height();\n\t\t\t\t\t\t\t$resultList\n\t\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\t\tmaxHeight: '',\n\t\t\t\t\t\t\t\t\twidth: ''\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t$resultList\n\t\t\t\t\t.css( {\n\t\t\t\t\t\tmaxHeight: '450px'\n\t\t\t\t\t} );\n\t\t\t\tif ( this.searchmode ) this.updateCats( \"Pictures and images\" );\n\t\t\t\telse this.updateCats( currentCat );\n\n\t\t\t} else {\n\t\t\t\t$dataContainer\n\t\t\t\t\t.hide();\n\t\t\t\t$container\n\t\t\t\t\t.resizable( \"destroy\" );\n\t\t\t\t//Unbind click handlers\n\t\t\t\tthis.labels.unbind( 'click.catALot' );\n\t\t\t}\n\t\t},\n\n\t\tmanageSettings: function() {\n\t\t\tmw.loader.using( [ 'ext.gadget.SettingsManager', 'ext.gadget.SettingsUI', 'jquery.ui.progressbar' ], function() {\n\t\t\t\tcatALot._manageSettings();\n\t\t\t} );\n\t\t},\n\t\t_manageSettings: function() {\n\t\t\twindow.mw.libs.SettingsUI( this.defaults, \"Cat-A-Lot\" )\n\t\t\t\t.show()\n\t\t\t\t.done( function( s, verbose, loc, settingsOut, $dlg ) {\n\t\t\t\t\tvar mustRestart = false,\n\t\t\t\t\t\t_restart = function() {\n\t\t\t\t\t\t\tif ( !mustRestart ) return;\n\n\t\t\t\t\t\t\t$container.remove();\n\t\t\t\t\t\t\tcatALot.labels.unbind( 'click.catALot' );\n\t\t\t\t\t\t\tcatALot.init();\n\t\t\t\t\t\t},\n\t\t\t\t\t\t_saveToJS = function() {\n\t\t\t\t\t\t\tvar opt = mw.libs.settingsManager.option( {\n\t\t\t\t\t\t\t\t\toptionName: 'catALotPrefs',\n\t\t\t\t\t\t\t\t\tvalue: catALot.settings,\n\t\t\t\t\t\t\t\t\tencloseSignature: 'catALot',\n\t\t\t\t\t\t\t\t\tencloseBlock: '////////// Cat-A-Lot user preferences //////////\\n',\n\t\t\t\t\t\t\t\t\ttriggerSaveAt: /Cat.?A.?Lot/i,\n\t\t\t\t\t\t\t\t\teditSummary: msgPlain( 'pref-save-summary' )\n\t\t\t\t\t\t\t\t} ),\n\t\t\t\t\t\t\t\toldHeight = $dlg.height(),\n\t\t\t\t\t\t\t\t$prog = $( '<div>' );\n\n\t\t\t\t\t\t\t$dlg.css( 'height', oldHeight )\n\t\t\t\t\t\t\t\t.html( '' );\n\t\t\t\t\t\t\t$prog.css( {\n\t\t\t\t\t\t\t\t\t'height': Math.round( oldHeight / 8 ),\n\t\t\t\t\t\t\t\t\t'margin-top': Math.round( ( 7 * oldHeight ) / 16 )\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.appendTo( $dlg );\n\n\t\t\t\t\t\t\t$dlg.parent()\n\t\t\t\t\t\t\t\t.find( '.ui-dialog-buttonpane button' )\n\t\t\t\t\t\t\t\t.button( 'option', 'disabled', true );\n\n\t\t\t\t\t\t\topt.save()\n\t\t\t\t\t\t\t\t.done( function( text, progress ) {\n\t\t\t\t\t\t\t\t\t$prog.progressbar( {\n\t\t\t\t\t\t\t\t\t\tvalue: progress\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t\t$prog.fadeOut( function() {\n\t\t\t\t\t\t\t\t\t\t$dlg.dialog( 'close' );\n\t\t\t\t\t\t\t\t\t\t_restart();\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.progress( function( text, progress ) {\n\t\t\t\t\t\t\t\t\t$prog.progressbar( {\n\t\t\t\t\t\t\t\t\t\tvalue: progress\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t\t// TODO: Add \"details\" to progressbar\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.fail( function( text ) {\n\t\t\t\t\t\t\t\t\t$prog.addClass( 'ui-state-error' );\n\t\t\t\t\t\t\t\t\t$dlg.prepend( $( '<p>' )\n\t\t\t\t\t\t\t\t\t\t.text( text ) );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t};\n\t\t\t\t\t$.each( settingsOut, function( n, v ) {\n\t\t\t\t\t\tif ( v.forcerestart && catALot.settings[ v.name ] !== v.value ) {\n\t\t\t\t\t\t\tmustRestart = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatALot.settings[ v.name ] = v.value;\n\t\t\t\t\t\twindow.catALotPrefs[ v.name ] = v.value;\n\t\t\t\t\t} );\n\t\t\t\t\tswitch ( loc ) {\n\t\t\t\t\t\tcase 'page':\n\t\t\t\t\t\t\t$dlg.dialog( 'close' );\n\t\t\t\t\t\t\t_restart();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'account-publicly':\n\t\t\t\t\t\t\t_saveToJS();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t},\n\t\t_initSettings: function() {\n\t\t\tif ( this.settings.watchlist ) return;\n\t\t\tif ( !window.catALotPrefs ) window.catALotPrefs = {};\n\t\t\t$.each( this.defaults, function( n, v ) {\n\t\t\t\tv.value = catALot.settings[ v.name ] = ( window.catALotPrefs[ v.name ] || v[ 'default' ] );\n\t\t\t\tv.label = msgPlain( v.label_i18n );\n\t\t\t\tif ( v.select_i18n ) {\n\t\t\t\t\tv.select = {};\n\t\t\t\t\t$.each( v.select_i18n, function( i18nk, val ) {\n\t\t\t\t\t\tv.select[ msgPlain( i18nk ) ] = val;\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\tdefaults: [ {\n\t\t\tname: 'watchlist',\n\t\t\t'default': 'preferences',\n\t\t\tlabel_i18n: 'watchlistpref',\n\t\t\tselect_i18n: {\n\t\t\t\t'watch_pref': 'preferences',\n\t\t\t\t'watch_nochange': 'nochange',\n\t\t\t\t'watch_watch': 'watch',\n\t\t\t\t'watch_unwatch': 'unwatch'\n\t\t\t}\n\t\t}, {\n\t\t\tname: 'minor',\n\t\t\t'default': false,\n\t\t\tlabel_i18n: 'minorpref'\n\t\t}, {\n\t\t\tname: 'editpages',\n\t\t\t'default': false,\n\t\t\tlabel_i18n: 'editpagespref',\n\t\t\tforcerestart: true\n\t\t}, {\n\t\t\tname: 'docleanup',\n\t\t\t'default': false,\n\t\t\tlabel_i18n: 'docleanuppref'\n\t\t}, {\n\t\t\tname: 'subcatcount',\n\t\t\t'default': 50,\n\t\t\t'min': 5,\n\t\t\t'max': 500,\n\t\t\tlabel_i18n: 'subcatcountpref',\n\t\t\tforcerestart: true\n\t\t} ]\n\t};\n\n\tif ( ( nsNumber === -1 && mw.config.get( 'wgCanonicalSpecialPageName' ) === \"Search\" ) || nsNumber === nsCat ) {\n\t\tif ( nsNumber === -1 ) {\n\t\t\tcatALot.searchmode = true;\n\t\t}\n\t\tvar loadingLocalizations = 1;\n\t\tvar loadLocalization = function( lang, cb ) {\n\t\t\tloadingLocalizations++;\n\t\t\tswitch ( lang ) {\n\t\t\t\tcase 'zh-hk':\n\t\t\t\tcase 'zh-mo':\n\t\t\t\tcase 'zh-tw':\n\t\t\t\t\tlang = 'zh-hant';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'zh':\n\t\t\t\tcase 'zh-cn':\n\t\t\t\tcase 'zh-my':\n\t\t\t\tcase 'zh-sg':\n\t\t\t\t\tlang = 'zh-hans';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\t\t\t$.ajax( {\n\t\t\t\turl: mw.util.wikiScript(),\n\t\t\t\tdataType: 'script',\n\t\t\t\tdata: {\n\t\t\t\t\ttitle: 'MediaWiki:Gadget-Cat-a-lot.js/' + lang,\n\t\t\t\t\taction: 'raw',\n\t\t\t\t\tctype: 'text/javascript',\n\t\t\t\t\t// Allow caching for 28 days\n\t\t\t\t\tmaxage: 2419200,\n\t\t\t\t\tsmaxage: 2419200\n\t\t\t\t},\n\t\t\t\tcache: true,\n\t\t\t\tsuccess: cb,\n\t\t\t\terror: cb\n\t\t\t} );\n\t\t};\n\t\tvar maybeLaunch = function() {\n\t\t\tloadingLocalizations--;\n\t\t\t\n\t\t\tfunction init() {\n\t\t\t\t$( document ).ready( function() {\n\t\t\t\t\t\tcatALot.init();\n\t\t\t\t\t} );\n\t\t\t}\n\t\t\tif ( 0 === loadingLocalizations ) {\n\t\t\t\tmw.loader.using( [ 'user' ], init, init );\n\t\t\t}\n\t\t};\n\n\t\tif ( mw.config.get( 'wgUserLanguage' ) !== 'en' ) {\n\t\t\tloadLocalization( mw.config.get( 'wgUserLanguage' ), maybeLaunch );\n\t\t}\n\t\tif ( mw.config.get( 'wgContentLanguage' ) !== 'en' ) {\n\t\t\tloadLocalization( mw.config.get( 'wgContentLanguage' ), maybeLaunch );\n\t\t}\n\t\tmaybeLaunch();\n\t}\n\n} )( jQuery, mediaWiki );\n\n/**\n *  Derivative work of\n *  (replace \"checkboxes\" with cat-a-lot labels in your mind)\n */\n/**\n * jQuery checkboxShiftClick\n *\n * This will enable checkboxes to be checked or unchecked in a row by clicking one, holding shift and clicking another one\n *\n * @author Krinkle <krinklemail@gmail.com>\n * @license GPL v2\n */\n( function( $ ) {\n\t$.fn.catALotShiftClick = function( cb ) {\n\t\tvar prevCheckbox = null,\n\t\t\t$box = this;\n\t\t// When our boxes are clicked..\n\t\t$box.bind( 'click.catALot', function( e ) {\n\n\t\t\t// Highlight last selected\n\t\t\t$( '#cat_a_lot_last_selected' )\n\t\t\t\t.removeAttr( 'id' );\n\t\t\tvar $thisControl = $( e.target ),\n\t\t\t\tmethod;\n\t\t\tif ( !$thisControl.hasClass( 'cat_a_lot_label' ) ) {\n\t\t\t\t$thisControl = $thisControl.parents( '.cat_a_lot_label' );\n\t\t\t}\n\t\t\t$thisControl.attr( 'id', 'cat_a_lot_last_selected' )\n\t\t\t\t.toggleClass( 'cat_a_lot_selected' );\n\n\t\t\t// And one has been clicked before...\n\t\t\tif ( prevCheckbox !== null && e.shiftKey ) {\n\t\t\t\t// Prevent selection\n\t\t\t\te.preventDefault();\n\n\t\t\t\tmethod = $thisControl.hasClass( 'cat_a_lot_selected' ) ? 'addClass' : 'removeClass';\n\n\t\t\t\t// Check or uncheck this one and all in-between checkboxes\n\t\t\t\t$box.slice(\n\t\t\t\t\tMath.min( $box.index( prevCheckbox ), $box.index( $thisControl ) ),\n\t\t\t\t\tMath.max( $box.index( prevCheckbox ), $box.index( $thisControl ) ) + 1\n\t\t\t\t)[ method ]( 'cat_a_lot_selected' );\n\t\t\t}\n\t\t\t// Either way, update the prevCheckbox variable to the one clicked now\n\t\t\tprevCheckbox = $thisControl;\n\n\t\t\tif ( $.isFunction( cb ) ) cb();\n\t\t} );\n\t\treturn $box;\n\t};\n}( jQuery ) );\n\n// </nowiki>"}}}