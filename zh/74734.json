{"parse":{"title":"User:\u5546\u706b/templeStatistics.js","pageid":269316,"wikitext":{"*":"/*\n*\u540d\u79f0\uff1aVC\u6bbf\u5802\u66f2\u7edf\u8ba1\u5668\n*\u4f5c\u8005\uff1a\u5546\u706b\n*\u529f\u80fd\u63cf\u8ff0\uff1a\u8ba1\u7b97\u6bcf\u4e2aVC\u6b4c\u59ec\u5df2\u6709\u7684\u6bbf\u5802\u66f2\u6570\n*\u7248\u672c\uff1aBeta 1.2\n*\u5b89\u88c5\u65b9\u6cd5\uff1a\u5728\u4e2a\u4ebajs\u9875\u6dfb\u52a0\u4ee3\u7801 mw.loader.load('/index.php?title=User:\u5546\u706b/templeStatistics.js&action=raw&ctype=text/javascript');\n*/\n\n$('#n-recentchanges').after('<li><a id=\"templesofsingers\" href=\"javascript:void(0);\" onclick=\"templesOfSingers()\">\u6bbf\u5802\u66f2\u7edf\u8ba1</a></li><li><a id=\"TempleSong\" data-subpages=\"Vocaloid\u4e2d\u6587\u6bbf\u5802\u66f2/2012\u5e74\u6295\u7a3f|Vocaloid\u4e2d\u6587\u6bbf\u5802\u66f2/2013\u5e74\u6295\u7a3f|Vocaloid\u4e2d\u6587\u6bbf\u5802\u66f2/2014\u5e74\u6295\u7a3f|Vocaloid\u4e2d\u6587\u6bbf\u5802\u66f2/2015\u5e74\u6295\u7a3f|Vocaloid\u4e2d\u6587\u6bbf\u5802\u66f2/2016\u5e74\u6295\u7a3f|Vocaloid\u4e2d\u6587\u6bbf\u5802\u66f2/2017\u5e74\u6295\u7a3f|Vocaloid\u4e2d\u6587\u6bbf\u5802\u66f2/2018\u5e74\u6295\u7a3f|Vocaloid\u4e2d\u6587\u6bbf\u5802\u66f2/\u6897\u66f2\u76f8\u5173\" data-pattern=\"UP\" href = \"/Vocaloid\u4e2d\u6587\u6bbf\u5802\u66f2\">--\u9996\u6bbf\u5802</a></li>');\n(function(){\n\tvar promises=[], count=0, lastCount = 0, lastTime = 0;\n\t$.each([\"2012\u5e74\u6295\u7a3f\", \"2013\u5e74\u6295\u7a3f\", \"2014\u5e74\u6295\u7a3f\", \"2015\u5e74\u6295\u7a3f\", \"2016\u5e74\u6295\u7a3f\", \"2017\u5e74\u6295\u7a3f\", \"2018\u5e74\u6295\u7a3f\", \"\u6897\u66f2\u76f8\u5173\"],function(i,v){\n\t\tpromises.push($.get(\"/api.php\",{format:\"json\",formatversion:2, action:\"parse\", page:\"Vocaloid\u4e2d\u6587\u6bbf\u5802\u66f2/\" + v,prop:\"wikitext\"}).then(function(data){\n\t\t\tcount += data.parse.wikitext.match(RegExp($(\"#TempleSong\").data(\"pattern\"),\"g\")).length;\n\t\t}));\n\t});\n\tpromises.push($.get(\"/api.php\", {format:\"json\", action:\"parse\", page:\"Template:SubpageStringCounter/Vocaloid\u4e2d\u6587\u6bbf\u5802\u66f2/default\", prop:\"wikitext\"}).then(function(data){\n\t\tlastObj = JSON.parse(data.parse.wikitext['*']);\n\t}));\n\t$.when.apply($,promises).then(function(){\n\t\t$(\"#TempleSong\").text(count - 174 + \"\u9996\u6bbf\u5802\");/*\n\t\tif (lastObj.counter !== count && mw.config.get('wgUserGroups').indexOf('autoconfirmed') !== -1){\n\t\t\tlastObj.counter = count;\n\t\t\tlastTime = lastObj.date;\n\t\t\tlastObj.date = new Date().getTime();\n\t\t\tlastObj.update_reason = 'data_expired (old date: \\\"' + lastTime + '\\\", new date: \\\"' + lastObj.date + '\\\")';\n\t\t\t$.get('/api.php', {\"action\": \"query\", \"meta\": \"tokens\"}).then(function(data){\n\t\t\t\t$.post('/api.php', {\n                \taction: 'edit',\n                \tformat: 'json',\n                \ttext: JSON.stringify(lastObj),\n                \tsummary: 'Auto update reason: \"data_expired\" for page [[Vocaloid\u4e2d\u6587\u6bbf\u5802\u66f2]]',\n            \t\tminor: true,\n                \twatchlist: 'nochange',\n                \ttitle: 'Template:SubpageStringCounter/Vocaloid\u4e2d\u6587\u6bbf\u5802\u66f2/default',\n                \ttags: 'widgetSubpageStringCounter',\n                \ttoken: data.query.tokens.csrftoken.replace(\"+\\\\\", \"%2B%5C%5C\")\n            \t}, function(){alert(\"success\")});\n\t\t\t});\n\t\t}*/\n\t});\n})();\n\n$('#footer').after('<div class=\"templeCounter\" id=\"black_back\" onclick=\"closeTemple()\" style=\"display: none; position: fixed; top: 0%; left: 0%; width: 100%; height: 100%; background-color: black; z-index:1001; -moz-opacity: 0.6; opacity:.60; filter: alpha(opacity=60);\"></div><div id=\"light_box\" class=\"templeCounter\" style=\"display: none; position: fixed; top: 25%; left: 25%; width: 50%; height: 30%; padding: 16px; border: 1px solid rgb(0, 0, 0); background-color: white; z-index:1002; overflow: auto;\"><p>\u6ce8\u610f\uff1a\u4ee5\u4e0b\u6570\u636e\u53ea\u5305\u62ecBilibili\u6295\u7a3f\u7684\u4e2d\u6587\u6bbf\u5802\u66f2\uff1b\u540c\u65f6\u5305\u62ec\u4f20\u8bf4\u66f2\u3002</p><ul><li>\u6d1b\u5929\u4f9d\uff1a<span class=\"singer\"></span>\u9996</li><li>\u8a00\u548c\uff1a<span class=\"singer\"></span>\u9996</li><li>\u5fc3\u534e\uff1a<span class=\"singer\"></span>\u9996</li><li>\u4e50\u6b63\u7eeb\uff1a<span class=\"singer\"></span>\u9996</li><li>\u661f\u5c18\uff1a<span class=\"singer\"></span>\u9996</li><li>\u4e50\u6b63\u9f99\u7259\uff1a<span class=\"singer\"></span>\u9996</li><li>\u521d\u97f3\u672a\u6765\uff1a<span class=\"singer\"></span>\u9996</li></div>');\n\nfunction templesOfSingers() {\n    $('#templesofsingers').attr(\"onclick\", \"\").text(\"\u5237\u65b0\u4e2d...\");\n    singer = new Array(0, 2, 3, 2, 0, -1, -2);//\u77eb\u6b63\u503c\uff1a\u6d1b\u3001\u8a00\u3001\u5fc3\u3001\u7eeb\u3001\u5c18\u3001\u9f99\u3001\u521d\n    var promises1 = [], greytexts = [];  \n    time=setInterval(\"showResult()\", 100);\n    $.each([\"2012\u5e74\u6295\u7a3f\", \"2013\u5e74\u6295\u7a3f\", \"2014\u5e74\u6295\u7a3f\", \"2015\u5e74\u6295\u7a3f\", \"2016\u5e74\u6295\u7a3f\", \"2017\u5e74\u6295\u7a3f\", \"2018\u5e74\u6295\u7a3f\", \"\u6897\u66f2\u76f8\u5173\"], function (i, v) {\n        promises1.push($.get(\"/api.php\", { format: \"json\", action: \"parse\", page: \"Vocaloid\u4e2d\u6587\u6bbf\u5802\u66f2/\" + v, prop: \"wikitext\" }).then(function (data) {\n            var wikitext = data.parse.wikitext['*'];\n            var start = wikitext.indexOf(\"\\u65b0}}\");\n            var end = wikitext.lastIndexOf(\"/*\");\n            if (end == -1) end = wikitext.length;\n            for (var point = start; point < end; point++) {\n                if (wikitext.charAt(point) == '#') {\n                    switch (wikitext.substr(point + 1, 6).toUpperCase()) {\n                        case \"66CCFF\": {\n                            singer[0]++;\n                            break;\n                        }\n                        case \"00FFCC\": {\n                            singer[1]++;\n                            break;\n                        }\n                        case \"EE82EE\": {\n                            singer[2]++;\n                            break;\n                        }\n                        case \"EE0000\": {\n                            singer[3]++;\n                            break;\n                        }\n                        case \"9999FF\": {\n                            singer[4]++;\n                            break;\n                        }\n                        case \"006666\": {\n                            singer[5]++;\n                            break;\n                        }\n                        case \"39C5BB\": {\n                            singer[6]++;\n                            break;\n                        }\n                        case \"777777\": {\n                            for (var point1 = point + 6; wikitext.charAt(point1) != '['; point1++);\n                            for (var point2 = point1 + 2; wikitext.charAt(point2) != '|' && wikitext.charAt(point2) != ']' && wikitext.charAt(point2) != '#'; point2++);\n                            greytexts.push(wikitext.substring(point1 + 2, point2));\n                        }\n                    }\n                }\n            }\n        }));\n    });\n    $.when.apply($, promises1).then(function (){\n        $.each(greytexts, function (j, greytext) {\n            $.get(\"/api.php\", { action: \"parse\", page: greytext, format: \"json\", prop: \"categories\" }).then (function (data) {\n                for (var i in data.parse.categories) {\n                    switch (data.parse.categories[i]['*']) {\n                        case \"\\u6d1b\\u5929\\u4f9d\\u6b4c\\u66f2\":\n                            singer[0]++;\n                            break;\n                        case \"\\u8a00\\u548c\\u6b4c\\u66f2\":\n                            singer[1]++;\n                            break;\n                        case \"\\u5fc3\\u534e\\u6b4c\\u66f2\":\n                            singer[2]++;\n                            break;\n                        case \"\\u4e50\\u6b63\\u7eeb\\u6b4c\\u66f2\":\n                            singer[3]++;\n                            break;\n                        case \"\\u661f\\u5c18\\u6b4c\\u66f2\":\n                            singer[4]++;\n                            break;\n                        case \"\\u4e50\\u6b63\\u9f99\\u7259\\u6b4c\\u66f2\":\n                            singer[5]++;\n                            break;\n                        case \"\\u521d\\u97f3\\u672a\\u6765\\u6b4c\\u66f2\":\n                            singer[6]++;\n                            break;\n                    }\n                }\n            });\n        });\n        setTimeout(\"clearInterval(time)\", 30000);\n        $('#templesofsingers').attr(\"onclick\", \"templesOfSingers()\").text(\"\u66f4\u65b0\u7edf\u8ba1\u7ed3\u679c\");\n    });\n}\n\nfunction showResult (){\n\t$('.templeCounter').css(\"display\", \"block\");\n    $(\".singer\").text(function(index, old){\n        return singer[index];\n    });\n}\n\nfunction closeTemple (){\n    $('.templeCounter').css(\"display\", \"none\");\n    clearInterval(time);\n}"}}}