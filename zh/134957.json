{"parse":{"title":"\u6a21\u5757:Gallery","pageid":265426,"wikitext":{"*":"-- This module implements {{gallery}}\n\nlocal p = {}\n\nlocal templatestyles = 'Template:Gallery/styles.css'\n\nlocal function trim(s)\n\treturn (mw.ustring.gsub(s, \"^%s*(.-)%s*$\", \"%1\"))\nend\n\nfunction p.gallery(frame)\n\tlocal origArgs\n\t-- If called via #invoke, use the args passed into the invoking template.\n\t-- Otherwise, for testing purposes, assume args are being passed directly in.\n\tif type(frame.getParent) == 'function' then\n\t\torigArgs = frame:getParent().args\n\telse\n\t\torigArgs = frame\n\tend\n    \n    -- ParserFunctions considers the empty string to be false, so to preserve the previous \n    -- behavior of {{gallery}}, change any empty arguments to nil, so Lua will consider\n    -- them false too.\n    local args = {}\n    for k, v in pairs(origArgs) do\n    \tif v ~= '' then\n    \t\targs[k] = v\n    \tend\n\tend\n\n\tlocal tbl = mw.html.create('table')\n    \n\tif args.state then\n\t\ttbl\n\t\t\t:addClass('gallery-mod-collapsible')\n\t\t\t:addClass('collapsible')\n\t\t\t:addClass(args.state)\n\tend\n\t\n\tif args.style then\n\t\ttbl:cssText(args.style)\n\telse\n\t\ttbl\n\t\t\t:addClass('gallery-mod')\n\tend\n\t\n\tif args.align then\n\t\tif args.align == 'center' then\n\t\t\ttbl\n\t\t\t\t:addClass('gallery-mod-center')\n\t\telse\n\t\t\ttbl:css('float', args.align)\n\t\tend\n\tend\n\t\n\tif args.title then\n\t\ttbl\n\t\t\t:tag('tr')\n\t\t\t\t:tag('th')\n\t\t\t\t\t:addClass('gallery-mod-title')\n\t\t\t\t\t:wikitext(args.title)\n\tend\n\t\n\tlocal mainCell = tbl:tag('tr'):tag('td')\n\t\n\tlocal imageCount = math.ceil(#args / 2)\n\tlocal cellWidth = tonumber(args.cellwidth) or tonumber(args.width) or 180\n\tlocal imgHeight = tonumber(args.height) or 180\n\tlocal lines = tonumber(args.lines) or 2\n\tlocal captionstyle = args.captionstyle\n\n\t\n    for i = 1, imageCount do\n\t\tlocal img = trim(args[i*2 - 1] or '')\n\t\tlocal caption = trim(args[i*2] or '')\n\t\tlocal imgWidth = tonumber(args['width' .. i]) or tonumber(args.width) or 180\n\t\tlocal alt = args['alt' .. i] or ''\n\t\t\n\t\tlocal textWidth\n\t\tif cellWidth < 30 then\n\t\t\ttextWidth = imgHeight + 27\n\t\telse\n\t\t\ttextWidth = cellWidth + 7\n\t\tend\n\n\t\tif img ~= '' then\n\t\t\tlocal imgTbl = mainCell:tag('table')\n\n\t\t\tlocal img_wikitext = function()\n\t\t\t\tif frame:callParserFunction{ name = 'filepath', args = { img:gsub('^%s-[Ff][Ii][Ll][Ee]:', '') } } ~= '' then\n\t\t\t\t\t-- \u5185\u90e8\u56fe\u7247\n\t\t\t\t\treturn string.format('[[%s|center|%dx%dpx|alt=%s|%s]]', img, imgWidth, imgHeight, alt, mw.text.unstrip(caption))\n\t\t\t\telse\n\t\t\t\t\t-- \u5916\u90e8\u56fe\u7247\n\t\t\t\t\treturn string.format('<img src=\"%s\" alt=\"%s\" style=\"max-width:%dpx; max-height:%dpx\" class=\"multimediaViewerScrollSet\" >', img, alt, imgWidth, imgHeight)\n\t\t\t\tend\n\t\t\tend\n            \n\t\t\timgTbl\n\t\t\t\t:css('width', (cellWidth + 20) .. 'px')\n\t\t\t\t:addClass('gallery-mod-box')\n\t\t\t\t:tag('tr')\n\t\t\t\t\t:tag('td')\n\t\t\t\t\t\t:addClass('thumb')\n\t\t\t\t\t\t:css('height', (imgHeight + 20) .. 'px')\n\t\t\t\t\t\t:wikitext(img_wikitext())\n\t\t\t\t\t\t:done()\n\t\t\t\t\t:done()\n\t\t\t\t:tag('tr')\n\t\t\t\t\t:addClass('gallery-mod-text')\n\t\t\t\t\t:tag('td')\n\t\t\t\t\t\t:addClass('core')\n\t\t\t\t\t\t:tag('div')\n\t\t\t\t\t\t\t:addClass('caption')\n\t\t\t\t\t\t\t:css('min-height', (0.1 + 1.5*lines) .. 'em')\n\t\t\t\t\t\t\t:css('width', textWidth .. 'px')\n\t\t\t\t\t\t\t:cssText(captionstyle)\n\t\t\t\t\t\t\t:wikitext(caption .. '&nbsp;')\n\t\tend\n\tend\n    \n\tif args.footer then\n\t\ttbl\n\t\t\t:tag('tr')\n\t\t\t\t:tag('td')\n\t\t\t\t\t:addClass('gallery-mod-footer')\n\t\t\t\t\t:wikitext(args.footer)\n\tend\n\tif args.perrow then\n\t\ttbl:css('width', 8 + (cellWidth + 20 + 6)*tonumber(args.perrow) .. 'px')\n\tend\n\n\treturn frame:extensionTag{ name = 'templatestyles', args = { src = templatestyles} } .. tostring(tbl)\nend\n\nreturn p"}}}