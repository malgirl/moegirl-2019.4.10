{"parse":{"title":"\u6a21\u5757:Lyrics/colors","pageid":274748,"wikitext":{"*":"local module = {}\n\nlocal array = require('Module:var-array')\nlocal rainbow = require('Module:rainbow')._main\n\nfunction module.main(frame)\n\tlocal args = frame.args\n\tlocal colorsStr = args['colors'] or ''\n\tlocal charasStr = args['charas'] or ''\n\tlocal text = args['lyric']\n\tif type(text) ~= 'string' then error('\u6b4c\u8bcd\u4e0d\u80fd\u4e3a\u7a7a\uff01') end\n\tlocal hasRuby = false\n\tif text:find('<ruby') then hasRuby = true end\n\ttext = text:gsub('%$([%d%$%[@])', function(s) return frame:expandTemplate{ title = 'ce', args = {s} } end)\n\t\n\tlocal iterC = string.gmatch(colorsStr, '([^;]+);?')\n\tlocal colors = {}\n\tlocal aliases = {}\n\tfor v in iterC do\n\t\tlocal name = ''\n\t\tlocal color = v\n\t\tif string.find(v, '=') then\n\t\t\tcolor, name = mw.ustring.match(v, '(.+)=(.+)')\n\t\t    aliases[#colors + 1] = mw.text.trim(name)\n\t\tend\n\t    color = string.gsub(color, '%%', '%%%%')\n\t    colors[#colors + 1] = mw.text.trim(color)\n\tend\n\t\n\tlocal charas = {}\n\tlocal iterCharas = mw.ustring.gmatch(charasStr, '([^\uff1b]+)\uff1b?')\n\tfor v in iterCharas do\n\t    v = string.gsub(v, '%%', '%%%%')\n\t    charas[#charas + 1] = mw.text.trim(v)\n\t    if args['charaBlock'] == 'on' then\n\t    \tcharas[#charas] = string.gsub(charas[#charas], '%(.+%)', '')\n\t    end\n\tend\n\t\n\t-- \u989c\u8272\u522b\u540d\n\tfor i, v in pairs(aliases) do\n\t\tv = string.gsub(v, '([%%%(%)%.%+%-%*%?%[%]%^%$])', '%%%1')\n\t\ttext = mw.ustring.gsub(text, '@%['..v..'%]', '@'..i)\n\tend\n\t\n\tfor i, v in pairs(charas) do\n\t\tv = string.gsub(v, '([%%%(%)%.%+%-%*%?%[%]%^%$])', '%%%1')\n\t\ttext = mw.ustring.gsub(text, '@%['..v..'%]', '@'..i)\n\tend\n\t\n\tlocal iterL = string.gmatch(text..'\\n', '([^\\n]*\\n)')\n\tlocal sentence = {}\n\tfor v in iterL do\n\t    sentence[#sentence + 1] = v\n\tend\n\t\n\t-- \u5305\u88f9\u8282\u70b9\n\tfor i=1, #sentence do\n\t\tlocal preParsed = string.gsub(sentence[i], '(@%d+)([^@\\n]+)', '<*span title=\"%1\" style=\"color:%1\">%2<*/span>')\n\t\tlocal chorus = '\u5408\u5531'\n\t\tif #charas > #colors then chorus = charas[#charas] end\n\t\tpreParsed = '<span class=\"NoTitlebox\" title=\"'..chorus..'\">'..preParsed:gsub('\\n$', '')..'</span>\\n'\n    \tsentence[i] = preParsed\n\tend\n\t\n\twhile #charas > #colors do\n\t\ttable.remove(charas)\n\tend\n\t\n\tfor i, v in ipairs(sentence) do\n\t\tlocal material = string.gsub(v, 'color:@(%d%d)', 'color:@/double/%1')\n\t\tfor i=1, #colors do\n\t\t    if i > 9 then material = string.gsub(material ,'color:@/double/(%d%d)', 'color:@%1') end\n\t\t    material = string.gsub(material, 'color:@'..i, 'color:'..colors[i]):gsub('title=\"@'..i..'\"', 'title=\"'..(charas[i] or '')..'\"')\n\t\tend\n\t\t\n\t\t-- \u6e10\u53d8\u8272\u5b9e\u73b0\n\t\tlocal mode = {\n\t\t    lg = 'linear',\n\t\t    rg = 'radial',\n\t\t    rlg = 'repeating-linear',\n\t\t    rrg = 'repeating-radial',\n\t\t    \n\t\t    rb = 'linear'\n\t\t}\n\t\tfor k, v in pairs(mode) do\n\t\t\tmaterial = string.gsub(material, '<%*span ([^>]-)style=\"color:'..k..'(%(.-%))\">(.-)<%*/span>', function(s1, s2, s3)\n\t\t\t\tif k == 'rb' then\n\t\t\t\t\tlocal pattern = ''\n\t\t\t\t\ts2 = string.gsub(s2, '%((.+)%)', '%1')\n\t\t\t\t\tlocal colors = mw.text.split(s2, ',')\n\t\t\t\t\tlocal quotient = 100 / #colors\n\t\t\t\t\tfor i, v in ipairs(colors) do\n\t\t\t\t\t\tlocal color = mw.text.trim(v)\n\t\t\t\t\t\tif i == 1 then\n\t\t\t\t\t\t\tpattern = color..' '..quotient..'%'\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tpattern = pattern..', '..color..' '..(quotient * (i - 1))..'%'..', '..color..' '..(quotient * i)..'%'\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\t\ts2 = '('..pattern..')'\n\t\t\t\tend\n\t\t\t\tlocal style = '; background:-webkit-'..v..'-gradient'..s2..'; -webkit-background-clip:text; -webkit-text-fill-color:transparent; background-position:0 1px;'\n\t\t\t\ts3 = string.gsub(s3, '<([^>]+)>', function(s)\n\t\t\t\t\ts = s..' style=\"'..style..'\"'\n\t\t\t\t\treturn '<'..s..'>'\n\t\t\t\tend)\n\t\t\t\t-- \u989d\u5916\u5957\u4e00\u5c42span\uff0c\u4ee5\u514d\u5f71\u54cdtitlebox\n\t\t\t\treturn '<span '..s1..'><span style=\"'..style..'\">'..s3..'</span></span>'\n\t\t\tend)\n\t\tend\n\t\t\n\t\t-- \u4ea4\u66ff\u8272\u5b9e\u73b0\n\t\tmaterial = string.gsub(material, '<%*span ([^>]-)style=\"color:co%((.-)%)\">(.-)<%*/span>', \n\t\tfunction(s1, s2, s3)\n\t\t\tlocal colors = {}\n\t\t    local iterC = string.gmatch(s2, '([^,]+),?')\n\t\t    for v in iterC do\n\t\t        colors[#colors + 1] = string.gsub(v, '^%s*', ''):gsub('%s*$', '')\n\t\t    end    \n\t\t    return '<span '..s1..'>'..rainbow(colors, s3)..'</span>'\n\t\tend)\n\t\t\n\t\t-- \u6574\u7406\u8282\u70b9\n\t\tmaterial = string.gsub(material, '<%*/span>@', '</span>'):gsub('title=\"@%d%d?\"', ''):gsub('<%*(/?span)', '<%1'):gsub('@', '')\n\t\t\n\t\tsentence[i] = string.gsub(material, 'color:@(%d%d)', 'color:@/double/%1')\n\tend\n\n\tarray.new(args['arrayName'], sentence)\n\treturn hasRuby or ''\nend\n\nreturn module"}}}