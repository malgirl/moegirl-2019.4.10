{"parse":{"title":"\u6a21\u5757:Random","pageid":278614,"wikitext":{"*":"local module = {}\n\nlocal getArgs = require('Module:Arguments').getArgs\n\nfunction _main(args)\n  local upset = 0\n  function upsetRandomSeed()\n    math.randomseed(tostring(os.time()):reverse():sub(1, 7)..upset..args['upset'])\n    upset = upset + 1\n  end\n\n  upsetRandomSeed()  \n  \n\tlocal count = tonumber(args['count'] or 1)\n\tif count < 1 then count = 1 end\n\tlocal result = {}\n\t\n\tfunction testRepetition(val)\n\t\tfor i, v in ipairs(result) do\n\t\t\tif v == val then\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\n\n  function getRandomNumber()\n    local ran, min, max = 0, 0, 1\n    if args[1] == nil then\n      return math.random(0, 1), 0, 1\n    elseif args[1] == 'init' then\n      ran = math.random()\n    else\n      if args[2] then\n      \tmin, max = tonumber(args[1]), tonumber(args[2])\n      else\n        max = tonumber(args[1])\n      end\n      \n      if min > max then min, max = max, min end\n      ran = math.random(min, max)\n    end\n\n    return ran, min, max\n  end\n  \n  repeat\n    local ran, min, max = getRandomNumber()\n    if testRepetition(ran) == false then\n      result[#result + 1] = ran\n    end\n    \n    if args[1] ~= 'init' and #result >= max - min + 1 then\n      for i=#result + 1, count do\n        if args[1] == nil then upsetRandomSeed() end\n        result[i] = math.random(min, max)\n      end\n    end\n  until(#result >= count)\n  \n  return table.concat(result, ',')\nend\n\nfunction module.main(frame)\n\tlocal args = getArgs(frame)\n\treturn _main(args)\nend\n\nreturn module"}}}