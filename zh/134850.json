{"parse":{"title":"Widget:LrcPlayer","pageid":210017,"wikitext":{"*":"<noinclude>Only for {{tl|LrcPlayer}}</noinclude><includeonly><!--{if !isset($wgLrcPlayer) || !$wgLrcPlayer}--><!--{assign var=\"wgLrcPlayer\" value=true scope=\"global\"}--><script>\nwindow.RLQ = window.RLQ || [];\nwindow.RLQ.push(function() {\n    mw.loader.using(\"jquery.client\", function() {\n        $(function() {\n            $('.lrcPlayer').each(function() {\n                var self = $(this),\n                    data = this.dataset;\n                var audio = $('<audio/>').attr({\n                        autoplay: data.autoplay ? true : false,\n                        controls: true,\n                        loop: data.loop ? true : false,\n                        src: data.audiosrc,\n                        preload: 'none',\n                        controlslist: \"nodownload\"\n                    }).appendTo(this)[0],\n                    container = $('<div/>').attr('class', 'container').append('<hr class=\"first\"></hr>').appendTo(this);\n                if (localStorage.widgetLrcPlayerVolume) audio.volume = +localStorage.widgetLrcPlayerVolume;\n                audio.addEventListener('volumechange', function() {\n                    localStorage.setItem('widgetLrcPlayerVolume', audio.volume);\n                });\n                if (data.title) {\n                    container.append('<div class=\"title\">' + data.title + '</div>');\n                    if (data.artist) container.append('<div class=\"subtitle\">' + data.artist + '</div>');\n                    if (data.album) container.find('.subtitle').append(' - ' + data.album);\n                }\n                //if ($.client.profile().layout !== 'webkit') return;\n                var clientVersion = $.client.profile().versionNumber;\n                if (clientVersion < 55) self.addClass('dark');\n                else self.addClass('light');\n                if (data.lrcsrc) $.ajax({\n                    url: data.lrcsrc,\n                    type: 'GET',\n                    dataType: 'text',\n                    error: function() {\n                        var arg = ['error:'];\n                        for (var i = 0, l = arguments.length; i < l; i++) arg[i + 1] = arguments[i];\n                        console.debug('widget.lrcPlayer', 'networkError');\n                        console.debug('lrc:', data.lrcsrc);\n                        console.debug.apply(console, arg);\n                        finish(self, container);\n                    },\n                    success: function(originLrcs) {\n                        var tagsRegMap = {\n                                ti: 'title',\n                                ar: 'artist',\n                                al: 'album',\n                                offset: 'offset',\n                                by: 'by'\n                            },\n                            tags = {},\n                            lrcs = {},\n                            lis = {},\n                            times = [],\n                            isLrc = function isLrc(lrc) {\n                                return /^\\[(\\d{2,}):(\\d{2})(\\.\\d{2,3})?\\](.*)$|^\\[(ti|ar|al|offset|by):([^\\]]*)\\]$/g.test(lrc);\n                            },\n                            offset = +(originLrcs.match(/\\[offset:(\\d+)\\]/i) || [undefined, 0])[1];\n                        originLrcs.split(/\\r*\\n/).forEach(function(lrc) {\n                            if (!isLrc(lrc)) return;\n                            var tag = /^\\[(ti|ar|al|offset|by):([^\\]]*)\\]$/i.exec(lrc);\n                            if (tag) return tags[tagsRegMap[tag[1]]] = tag[2];\n                            var exec = /^\\[(\\d{2,}):(\\d{2})(\\.\\d{2,3})?\\](.*)$/g.exec(lrc);\n                            if (!exec) return;\n                            var text = exec[4] || '',\n                                min = exec[1],\n                                sec = exec[2],\n                                ms = exec[3] || 0;\n                            //if (!text) return;\n                            var time = parseInt((+min * 60 + +sec + +ms) * 1000 + offset);\n                            if (time < 0.5) time = 0;\n                            else time -= 0.5;\n                            time += '';\n                            if (!lrcs[time]) {\n                                lrcs[time] = text;\n                                times.push(+time);\n                            } else lrcs[time] += '\\n' + text;\n                        });\n                        if (tags.title && !data.title) {\n                            container.append('<div class=\"title\">' + tags.title + '</div>');\n                            if (tags.artist && !data.artist) container.append('<div class=\"subtitle\">' + tags.artist + '</div>');\n                            if (tags.album) container.find('.subtitle').append(' - ' + tags.album);\n                        }\n                        if (!times.length) return finish(self, container);\n                        var lrcList = $('<ol/>').appendTo(container.append(container.find('.title, .subtitle')[0] ? '<hr class=\"second\"></hr>' : ''));\n                        times.forEach(function(time) {\n                            var li = $('<li/>');\n                            if (lrcs[time]) lrcs[time].split('\\n').forEach(function(t) {\n                                li.append($('<div/>').text(t));\n                            });\n                            lis[time] = li.appendTo(lrcList);\n                        });\n                        lrcList.find('div').each(function() {\n                            if (this.innerText.trim() === '') this.remove();\n                        });\n                        var curIndex = -1;\n                        audio.addEventListener('timeupdate', function() {\n                            var time = (this.currentTime || 0) * 1000,\n                                curLine;\n                            for (var i = 0, l = times.length; i < l; i++) {\n                                if (+times[i] < time) continue;\n                                var index = i - 1 > 0 ? i - 1 < l ? i - 1 : l : 0;\n                                if (curIndex === index) return;\n                                curIndex = index;\n                                curLine = lis[times[i - 1 > 0 ? i - 1 : 0]];\n                                break;\n                            }\n                            if (!curLine) curLine = lrcList.find('li').last();\n                            if (curLine.hasClass('show')) return;\n                            curLine.addClass('show').siblings().removeClass('show');\n                            var prev = curLine.prev(),\n                                height = 0,\n                                maxHight = 0;\n                            $(curLine.nextAll(':not(:empty)').slice(0, 2)).add(curLine).add(prev).each(function() {\n                                maxHight += $(this).height();\n                            });\n                            if (maxHight > lrcList.height()) lrcList.height(maxHight);\n                            if (!prev.text()) prev = prev.prev();\n                            prev.prevAll().each(function() {\n                                height += $(this).height();\n                            });\n                            curLine.parent().clearQueue().animate({\n                                scrollTop: height\n                            }, 370);\n                        });\n                        audio.addEventListener('play', function() {\n                            var lastLine = lrcList.find('li:last'),\n                                realLastLine = lrcList.find('li:not(:empty)').last();\n                            if (!lastLine.is('.show:not(:empty)')) {\n                                var lineHeight = realLastLine.height() + realLastLine.prev(':not(:empty)').height();\n                                lastLine.css('margin-bottom', (lrcList.height() - lineHeight) + 'px');\n                            }\n                        });\n                        finish(self, container);\n                    }\n                });\n                else finish(self, container);\n            });\n            //\u8981\u4e0d\u8981\u52a0\u5206\u5272\u7ebf\n            function finish(self, container) {\n                if (!container.text()) container.remove();\n                self.fadeIn();\n            }\n        });\n    });\n});\n</script><style>\n.lrcPlayer,\n.lrcPlayer audio {\n    width: 730px;\n    margin: 0 auto;\n    outline: unset;\n}\n.lrcPlayer {\n    border-radius: 5px;\n    padding: .5em 0;\n    font-size: 16px;\n    display: none;\n    margin: .5em auto 0;\n}\n.lrcPlayer audio::-webkit-media-controls-play-button,\n.lrcPlayer audio::-webkit-media-controls-timeline,\n.lrcPlayer audio::-webkit-media-controls-mute-button,\n.lrcPlayer audio::-webkit-media-controls-volume-slider {\n    cursor: pointer;\n}\n.lrcPlayer .container {\n    padding: 0 1px;\n}\n.lrcPlayer .first {\n    margin: 7px 17px;\n}\n.lrcPlayer .second {\n    margin: 7px 37px;\n}\n.lrcPlayer .title,\n.lrcPlayer .subtitle {\n    text-align: center;\n    line-height: 2em;\n}\n.lrcPlayer .title {\n    font-size: 24px;\n}\n.lrcPlayer ol {\n    margin: .5em 0 0;\n    padding: 0;\n    list-style: none;\n    height: 128px;\n    transition: .137s height linear;\n    overflow-y: scroll;\n    overflow-x: hidden;\n}\n.lrcPlayer ol::-webkit-scrollbar {\n    width: 12px;\n    background-color: #434343;\n}\n.lrcPlayer ol::-webkit-scrollbar-thumb {\n    border-radius: 10px;\n    background-color: rgba(0, 0, 0, .5);\n    border: #f5f5f5 1px solid;\n}\n.lrcPlayer ol::-webkit-scrollbar-track {\n    /* border-radius: 10px; */\n    background-color: #f5f5f5;\n}\n.lrcPlayer li {\n    margin: 0;\n    text-align: center;\n    opacity: .73;\n    line-height: 1.5em;\n    transition: .37s all linear;\n}\n.lrcPlayer .show {\n    opacity: 1;\n    font-size: 24px;\n}\n/* \u4e3b\u9898\u8bbe\u7f6e */\n.lrcPlayer.dark,\n.lrcPlayer.dark audio::-webkit-media-controls-panel {\n    background-color: #434343;\n}\n.lrcPlayer.dark .title,\n.lrcPlayer.dark .subtitle,\n.lrcPlayer.dark li {\n    color: white;\n}\n.lrcPlayer.dark ol::-webkit-scrollbar-thumb,\n.lrcPlayer.dark ol::-webkit-scrollbar-track {\n    -webkit-box-shadow: inset 0 0 6px #434343;\n}\n.lrcPlayer.light .title,\n.lrcPlayer.light .subtitle,\n.lrcPlayer.light li {\n    color: #5A5A5A;\n}\n.lrcPlayer.light,\n.lrcPlayer.light audio::-webkit-media-controls-panel {\n    background-color: #FAFAFA;\n}\n.lrcPlayer.light ol::-webkit-scrollbar-thumb,\n.lrcPlayer.light ol::-webkit-scrollbar-track {\n    -webkit-box-shadow: inset 0 0 6px #FAFAFA;\n}\n</style><!--{/if}--></includeonly>"}}}