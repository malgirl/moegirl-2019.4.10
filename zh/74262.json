{"parse":{"title":"User:\u4e5d\u6c5f\u6708/\u62c9\u59c6\u8fbe\u8868\u8fbe\u5f0f","pageid":287564,"wikitext":{"*":"\n'''\u62c9\u59c6\u8fbe\u8868\u8fbe\u5f0f'''\uff08\u82f1\uff1aLambda Expression\uff09\u662f\u4e00\u79cd\u533f\u540d\u51fd\u6570\uff08\u82f1\uff1aAnonymous Function\uff09\u7684\u5b9a\u4e49\u5f62\u5f0f\uff0c\u5f97\u540d\u81ea\u6570\u5b66\u4e2d\u7684\u03bb\u6f14\u7b97\u3002\n\n==\u7b80\u4ecb==\n\u62c9\u59c6\u8fbe\u8868\u8fbe\u5f0f\u4e00\u822c\u4e5f\u53ebLambda\u8868\u8fbe\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u53eb\u4f5c\u533f\u540d\u51fd\u6570\uff08\u8fd9\u662f\u4e00\u4e2a\u66f4\u5e7f\u7684\u6982\u5ff5\uff09\uff0c\u4e0d\u8fc7\u5728ES\u4e2d\u5219\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u540d\u5b57\uff1a\u7bad\u5934\u51fd\u6570\uff08\u82f1\uff1aArrow Function\uff09\u3002\u4e0d\u540c\u7684\u7f16\u7a0b\u8bed\u8a00\u5728\u8bbe\u8ba1Lambda\u8868\u8fbe\u5f0f\u7684\u65f6\u5019\uff0c\u5728\u5f62\u5f0f\u4e0a\u4f1a\u6709\u6240\u533a\u522b\uff0c\u4e0d\u8fc7\u5927\u540c\u5c0f\u5f02\u3002\n\nC++11\u6807\u51c6\u4e2d\u5f15\u5165\u4e86Lambda\u8868\u8fbe\u5f0f\uff0c\u5176\u57fa\u672c\u5f62\u5f0f\u662f[capture list] (parameter list) -> return type { function body }\uff0c\u5b83\u53ef\u4ee5\u7701\u7565\u8fd4\u56de\u503c\uff0c\u4e5f\u53ef\u4ee5\u7701\u7565\u53c2\u6570\u3002\u5982\u679c\u8fd4\u56de\u503c\u88ab\u7701\u7565\uff0c\u90a3\u4e48\u5728\u51fd\u6570\u4f53\u4e2d\u5982\u679c\u6709\u8fd4\u56de\u8bed\u53e5\uff0c\u5219\u8be5\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\u7531\u8be5\u8fd4\u56de\u503c\u51b3\u5b9a\uff0c\u5982\u679c\u6ca1\u6709\u8fd4\u56de\u8bed\u53e5\uff0c\u5219\u8be5\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\u9ed8\u8ba4\u4e3avoid\u7c7b\u578b\u3002\n\n\u5728C#2.0\u4e4b\u524d\uff0c\u58f0\u660e\u59d4\u6258\uff08\u82f1\uff1adelegate\uff09\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u4f7f\u7528\u547d\u540d\u65b9\u6cd5\uff08\u82f1\uff1anamed methods\uff09\uff0c\u800c\u5728C#2.0\u6807\u51c6\u4e2d\uff0c\u5f15\u5165\u4e86\u533f\u540d\u65b9\u6cd5\uff08\u82f1\uff1aAnonymous Methods\uff09\u7684\u6982\u5ff5\uff0c\u6b64\u7c7b\u65b9\u6cd5\u5141\u8bb8\u5c06\u4ee3\u7801\u5757\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\uff0c\u4ee5\u4ee3\u66ff\u5355\u72ec\u5b9a\u4e49\u7684\u65b9\u6cd5\u3002\u800c\u5728C#3.0\u53ca\u66f4\u9ad8\u7248\u672c\u4e2d\uff0cLambda\u8868\u8fbe\u5f0f\u53d6\u4ee3\u4e86\u533f\u540d\u65b9\u6cd5\uff0c\u4f5c\u4e3a\u7f16\u5199\u5185\u8054\u4ee3\u7801\u7684\u9996\u9009\u65b9\u5f0f\u3002\u8fd9\u4e9b\u529f\u80fd\u7edf\u79f0\u4e3a\u533f\u540d\u51fd\u6570\u3002\u4e0d\u8fc7C#\u4e2d\u4e00\u822c\u4e0d\u6d89\u53ca\u95ed\u5305\u7684\u6982\u5ff5\uff0c\u56e0\u4e3a\u5b83\u901a\u5e38\u662f\u9760\u533f\u540d\u51fd\u6570\u6765\u5b9e\u73b0\u95ed\u5305\u7684\u3002Lambda\u8868\u8fbe\u5f0f\u5728Linq\u4e2d\u975e\u5e38\u5b9e\u7528\uff0c\u800c\u4e8b\u5b9e\u4e0a\u5b83\u4eec\u5c31\u662f\u4e00\u8d77\u51fa\u73b0\u7684\uff0c\u662f\u9488\u5bf9\u81ea\u52a8\u7c7b\u578b\u3001\u533f\u540d\u63a8\u65ad\u7684\u6269\u5c55\uff0c\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cLambda\u8868\u8fbe\u5f0f\u672c\u8eab\u6ca1\u6709\u7c7b\u578b\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u4e00\u822c\u8bf4\u7684\u7c7b\u578b\u662f\u6307\u59d4\u6258\u7c7b\u578b\u6216Lambda\u8868\u8fbe\u5f0f\u6240\u8f6c\u6362\u6210\u7684\u8868\u8fbe\u5f0f\u7c7b\u578b\u3002\n\nJava8\u4e2d\u6b63\u5f0f\u5f15\u5165\u4e86Lambda\u8868\u8fbe\u5f0f\uff0c\u5728Java\u4e2dLambda\u8868\u8fbe\u5f0f\u6709\u65f6\u5019\u4e5f\u88ab\u89e3\u91ca\u4e3a\u95ed\u5305\uff08\u82f1\uff1aclosure\uff09\u6216\u533f\u540d\u65b9\u6cd5\uff0c\u5176\u57fa\u672c\u5f62\u5f0f\u4e0eC++\u76f8\u4f3c\u4f7f\u7528\u201c->\u201d\u4f5c\u4e3a\u7b26\u53f7\uff0c\u4f46\u53c2\u6570\u4f20\u9012\u548c\u8fd4\u56de\u503c\u7684\u60c5\u51b5\u4e0d\u5b8c\u5168\u4e00\u6837\u3002\u5b83\u7684\u57fa\u672c\u5f62\u5f0f\u662f(parameter list) -> { function body }\u6216\u8005(parameter list) -> expression\u3002Java\u7684\u8bed\u53e5\u5757\u4e2d\u5982\u679c\u51fd\u6570\u4f53\u5982\u679c\u6709return\u8bed\u53e5\uff0c\u90a3\u4e48\u5c31\u8fd4\u56de\u90a3\u4e2a\u8fd4\u56de\u503c\u5426\u5219\u5c31\u662fvoid\uff0c\u4f46\u8868\u8fbe\u5f0f\u4e0d\u4e00\u6837\uff0c\u8868\u8fbe\u5f0f\u4f1a\u88ab\u76f4\u63a5\u6267\u884c\u7136\u540e\u8fd4\u56de\u6267\u884c\u7ed3\u679c\uff0c\u4e0d\u9700\u8981\u989d\u5916\u58f0\u660ereturn\uff0c\u540c\u65f6\u5b83\u4e5f\u53ef\u4ee5\u548c\u5176\u4ed6\u8868\u8fbe\u5f0f\u4e00\u6837\u88ab\u62ec\u53f7\u62ec\u8d77\u6765\u4f7f\u7528\u3002Java\u7684Lambda\u8868\u8fbe\u5f0f\u540c\u6837\u6ca1\u6709\u7c7b\u578b\uff0c\u4f46\u5b83\u53ef\u4ee5\u8f6c\u6362\u6210\u4e00\u4e2a\u51fd\u6570\u5f0f\u63a5\u53e3\u7c7b\u578b\u3002\n\n\u5728ES6\u6807\u51c6\u4e2d\uff0c\u7bad\u5934\u51fd\u6570\u7528\u6765\u5b9a\u4e49\u4e00\u4e2a\u533f\u540d\u51fd\u6570\uff0c\u5176\u57fa\u672c\u5f62\u5f0f\u662f(parameter list) => { function body }\uff0c\u5b9e\u9645\u4e0a\u5b83\u662f\u5957\u4e86\u4e00\u4e2athis\u7528\u6765\u6307\u4ee3\u5b9a\u4e49\u7684\u51fd\u6570\u7684\u8bed\u6cd5\u7cd6\uff0c\u8fd9\u4e2a\u8bbe\u8ba1\u5f88\u6709\u7528\uff0c\u53ef\u4ee5\u907f\u514d\u5f88\u591a\u60c5\u51b5\u4e0b\u7684this=window\u7684\u6bdb\u75c5\uff0c\u4f46\u662f\u5728\u4e00\u4e9b\u56de\u8c03\u4e2d\uff0cthis\u4e5f\u4f1a\u88ab\u6301\u6709\u8be5\u51fd\u6570\u7684\u5bf9\u8c61\u672c\u8eab\u62a2\u5360\u6389\uff0c\u800c\u65e0\u6cd5\u6b63\u5e38\u4f7f\u7528\u3002\n==\u4f8b\u5b50==\n===C Sharp===\n<pre>\nusing System;\nusing System.Collections.Generic;\nnamespace HelloWorldApplication\n{\n    class HelloWorld\n    {\n        static void Main(string[] args)\n        {\n         List<Func<object[], Delegate>> mydelegate = new List<Func<object[], Delegate>>{\n                (useless) =>{\n                    Action<object[]> function = (objs) =>\n                    {\n                         Console.WriteLine(\"John:hello world!\");\n                    };\n                    return function;\n                },\n                (useless)=> {\n                    Func<object[],int> function = (objs)=>\n                    {\n                        Console.WriteLine(\"Mark:hello world!\");\n                        return 0;\n                    };\n                    return function;\n                }\n            };\n            dynamic z1 = mydelegate[0](new object[0]);\n            dynamic z2 = mydelegate[1](new object[0]);\n            z1(new object[0]);    //John:hello world!\n            z2(new object[0]);    //Mark:hello world!\n        }\n    }\n}\n</pre>\n\n===JavaScript===\n<pre>\nfunction main(){\n    var x = (ovo) => {\n        var who = ovo;\n        var said=\":\";\n        console.log(who+said+\"hello world!\")\n    };\n    var Mark = {\n        said:()=>{\n            console.log(\"Mark:hello world!\")\n        }\n    };\n    x(\"John\");      //John:hello world!\n    Mark.said();    //Mark:hello world!\n}\nmain(); \n</pre>\n\n==\u5916\u90e8\u94fe\u63a5==\n<references />"}}}