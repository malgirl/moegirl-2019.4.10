{"parse":{"title":"MediaWiki:Gadget-popups-main.js","pageid":135106,"wikitext":{"*":"/*\n * \u5168\u90e8\u5185\u5bb9\u5f15\u81ea https://en.wikipedia.org/w/index.php?title=MediaWiki:Gadget-popups.js&action=raw&ctype=text/javascript\n */\n// <pre>\n\"use strict\";\n\n$(function() {\n    var pg = {\n        re: {},\n        ns: {},\n        string: {},\n        wiki: {},\n        user: {},\n        misc: {},\n        option: {},\n        optionDefault: {},\n        flag: {},\n        cache: {},\n        structures: {},\n        timer: {},\n        counter: {},\n        current: {},\n        fn: {},\n        endoflist: null\n    };\n    if (window.pg) {\n        return;\n    }\n    window.pg = pg;\n\n    function setupTooltips(container, remove, force, popData) {\n        log(\"setupTooltips, container=\" + container + \", remove=\" + remove);\n        if (!container) {\n            if (getValueOf(\"popupOnEditSelection\") && document && document.editform && document.editform.wpTextbox1) {\n                document.editform.wpTextbox1.onmouseup = doSelectionPopup;\n            }\n            container = defaultPopupsContainer();\n        }\n        if (!remove && !force && container.ranSetupTooltipsAlready) {\n            return;\n        }\n        container.ranSetupTooltipsAlready = !remove;\n        var anchors;\n        anchors = container.getElementsByTagName(\"A\");\n        setupTooltipsLoop(anchors, 0, 250, 100, remove, popData);\n    }\n\n    function defaultPopupsContainer() {\n        if (getValueOf(\"popupOnlyArticleLinks\")) {\n            return document.getElementById(\"mw_content\") || document.getElementById(\"content\") || document.getElementById(\"article\") || document;\n        }\n        return document;\n    }\n\n    function setupTooltipsLoop(anchors, begin, howmany, sleep, remove, popData) {\n        log(simplePrintf(\"setupTooltipsLoop(%s,%s,%s,%s,%s)\", arguments));\n        var finish = begin + howmany;\n        var loopend = Math.min(finish, anchors.length);\n        var j = loopend - begin;\n        log(\"setupTooltips: anchors.length=\" + anchors.length + \", begin=\" + begin + \", howmany=\" + howmany + \", loopend=\" + loopend + \", remove=\" + remove);\n        var doTooltip = remove ? removeTooltip : addTooltip;\n        if (j > 0) {\n            do {\n                var a = anchors[loopend - j];\n                if (typeof a === \"undefined\" || !a || !a.href) {\n                    log(\"got null anchor at index \" + loopend - j);\n                    continue;\n                }\n                doTooltip(a, popData);\n            } while (--j);\n        }\n        if (finish < anchors.length) {\n            setTimeout(function() {\n                setupTooltipsLoop(anchors, finish, howmany, sleep, remove, popData);\n            }, sleep);\n        } else {\n            if (!remove && !getValueOf(\"popupTocLinks\")) {\n                rmTocTooltips();\n            }\n            pg.flag.finishedLoading = true;\n        }\n    }\n\n    function rmTocTooltips() {\n        var toc = document.getElementById(\"toc\");\n        if (toc) {\n            var tocLinks = toc.getElementsByTagName(\"A\");\n            var tocLen = tocLinks.length;\n            for (var j = 0; j < tocLen; ++j) {\n                removeTooltip(tocLinks[j], true);\n            }\n        }\n    }\n\n    function addTooltip(a, popData) {\n        if (!isPopupLink(a)) {\n            return;\n        }\n        a.onmouseover = mouseOverWikiLink;\n        a.onmouseout = mouseOutWikiLink;\n        a.onmousedown = killPopup;\n        a.hasPopup = true;\n        a.popData = popData;\n    }\n\n    function removeTooltip(a) {\n        if (!a.hasPopup) {\n            return;\n        }\n        a.onmouseover = null;\n        a.onmouseout = null;\n        if (a.originalTitle) {\n            a.title = a.originalTitle;\n        }\n        a.hasPopup = false;\n    }\n\n    function removeTitle(a) {\n        if (!a.originalTitle) {\n            a.originalTitle = a.title;\n        }\n        a.title = \"\";\n    }\n\n    function restoreTitle(a) {\n        if (a.title || !a.originalTitle) {\n            return;\n        }\n        a.title = a.originalTitle;\n    }\n\n    function registerHooks(np) {\n        var popupMaxWidth = getValueOf(\"popupMaxWidth\");\n        if (typeof popupMaxWidth === \"number\") {\n            var setMaxWidth = function() {\n                np.mainDiv.style.maxWidth = popupMaxWidth + \"px\";\n                np.maxWidth = popupMaxWidth;\n            };\n            np.addHook(setMaxWidth, \"unhide\", \"before\");\n        }\n        np.addHook(addPopupShortcuts, \"unhide\", \"after\");\n        np.addHook(rmPopupShortcuts, \"hide\", \"before\");\n    }\n\n    function removeModifierKeyHandler(a) {\n        document.removeEventListener(\"keydown\", a.modifierKeyHandler, false);\n        document.removeEventListener(\"keyup\", a.modifierKeyHandler, false);\n    }\n\n    function mouseOverWikiLink(evt) {\n        if (!evt && window.event) {\n            evt = window.event;\n        }\n        if (getValueOf(\"popupModifier\")) {\n            var action = getValueOf(\"popupModifierAction\");\n            var key = action == \"disable\" ? \"keyup\" : \"keydown\";\n            var a = this;\n            a.modifierKeyHandler = function(evt) {\n                mouseOverWikiLink2(a, evt);\n            };\n            document.addEventListener(key, a.modifierKeyHandler, false);\n        }\n        return mouseOverWikiLink2(this, evt);\n    }\n\n    function footnoteTarget(a) {\n        var aTitle = Title.fromAnchor(a);\n        var anch = aTitle.anchor;\n        if (!/^(cite_note-|_note-|endnote)/.test(anch)) {\n            return false;\n        }\n        var lTitle = Title.fromURL(location.href);\n        if (lTitle.toString(true) !== aTitle.toString(true)) {\n            return false;\n        }\n        var el = document.getElementById(anch);\n        while (el && typeof el.nodeName === \"string\") {\n            var nt = el.nodeName.toLowerCase();\n            if (nt === \"li\") {\n                return el;\n            } else if (nt === \"body\") {\n                return false;\n            } else if (el.parentNode) {\n                el = el.parentNode;\n            } else {\n                return false;\n            }\n        }\n        return false;\n    }\n\n    function footnotePreview(x, navpop) {\n        setPopupHTML(\"<hr />\" + x.innerHTML, \"popupPreview\", navpop.idNumber);\n    }\n\n    function modifierPressed(evt) {\n        var mod = getValueOf(\"popupModifier\");\n        if (!mod) {\n            return false;\n        }\n        if (!evt && window.event) {\n            evt = window.event;\n        }\n        return evt && mod && evt[mod.toLowerCase() + \"Key\"];\n    }\n\n    function isCorrectModifier(a, evt) {\n        if (!getValueOf(\"popupModifier\")) {\n            return true;\n        }\n        var action = getValueOf(\"popupModifierAction\");\n        return action == \"enable\" && modifierPressed(evt) || action == \"disable\" && !modifierPressed(evt);\n    }\n\n    function mouseOverWikiLink2(a, evt) {\n        if (!isCorrectModifier(a, evt)) {\n            return;\n        }\n        if (getValueOf(\"removeTitles\")) {\n            removeTitle(a);\n        }\n        if (a == pg.current.link && a.navpopup && a.navpopup.isVisible()) {\n            return;\n        }\n        pg.current.link = a;\n        if (getValueOf(\"simplePopups\") && !pg.option.popupStructure) {\n            setDefault(\"popupStructure\", \"original\");\n        }\n        var article = new Title().fromAnchor(a);\n        pg.current.article = article;\n        if (!a.navpopup) {\n            a.navpopup = newNavpopup(a, article);\n            pg.current.linksHash[a.href] = a.navpopup;\n            pg.current.links.push(a);\n        }\n        if (a.navpopup.pending === null || a.navpopup.pending !== 0) {\n            simplePopupContent(a, article);\n        }\n        a.navpopup.showSoonIfStable(a.navpopup.delay);\n        clearInterval(pg.timer.checkPopupPosition);\n        pg.timer.checkPopupPosition = setInterval(checkPopupPosition, 600);\n        if (getValueOf(\"simplePopups\")) {\n            if (getValueOf(\"popupPreviewButton\") && !a.simpleNoMore) {\n                var d = document.createElement(\"div\");\n                d.className = \"popupPreviewButtonDiv\";\n                var s = document.createElement(\"span\");\n                d.appendChild(s);\n                s.className = \"popupPreviewButton\";\n                s[\"on\" + getValueOf(\"popupPreviewButtonEvent\")] = function() {\n                    a.simpleNoMore = true;\n                    d.style.display = \"none\";\n                    nonsimplePopupContent(a, article);\n                };\n                s.innerHTML = popupString(\"show preview\");\n                setPopupHTML(d, \"popupPreview\", a.navpopup.idNumber);\n            }\n        }\n        if (a.navpopup.pending !== 0) {\n            nonsimplePopupContent(a, article);\n        }\n    }\n\n    function simplePopupContent(a, article) {\n        a.navpopup.hasPopupMenu = false;\n        a.navpopup.setInnerHTML(popupHTML(a));\n        fillEmptySpans({\n            navpopup: a.navpopup\n        });\n        if (getValueOf(\"popupDraggable\")) {\n            var dragHandle = getValueOf(\"popupDragHandle\") || null;\n            if (dragHandle && dragHandle != \"all\") {\n                dragHandle += a.navpopup.idNumber;\n            }\n            setTimeout(function() {\n                a.navpopup.makeDraggable(dragHandle);\n            }, 150);\n        }\n        if (getValueOf(\"popupRedlinkRemoval\") && a.className == \"new\") {\n            setPopupHTML(\"<br>\" + popupRedlinkHTML(article), \"popupRedlink\", a.navpopup.idNumber);\n        }\n    }\n\n    function debugData(navpopup) {\n        if (getValueOf(\"popupDebugging\") && navpopup.idNumber) {\n            setPopupHTML(\"idNumber=\" + navpopup.idNumber + \", pending=\" + navpopup.pending, \"popupError\", navpopup.idNumber);\n        }\n    }\n\n    function newNavpopup(a, article) {\n        var navpopup = new Navpopup();\n        navpopup.fuzz = 5;\n        navpopup.delay = getValueOf(\"popupDelay\") * 1e3;\n        navpopup.idNumber = ++pg.idNumber;\n        navpopup.parentAnchor = a;\n        navpopup.parentPopup = a.popData && a.popData.owner;\n        navpopup.article = article;\n        registerHooks(navpopup);\n        return navpopup;\n    }\n\n    function shouldShowNonSimple(a) {\n        return !getValueOf(\"simplePopups\") || a.simpleNoMore;\n    }\n\n    function shouldShow(a, option) {\n        if (shouldShowNonSimple(a)) {\n            return getValueOf(option);\n        } else {\n            return typeof window[option] != \"undefined\" && window[option];\n        }\n    }\n\n    function nonsimplePopupContent(a, article) {\n        var diff = null,\n            history = null;\n        var params = parseParams(a.href);\n        var oldid = typeof params.oldid == \"undefined\" ? null : params.oldid;\n        if (shouldShow(a, \"popupPreviewDiffs\")) {\n            diff = params.diff;\n        }\n        if (shouldShow(a, \"popupPreviewHistory\")) {\n            history = params.action == \"history\";\n        }\n        a.navpopup.pending = 0;\n        var referenceElement = footnoteTarget(a);\n        if (referenceElement) {\n            footnotePreview(referenceElement, a.navpopup);\n        } else if (diff || diff === 0) {\n            loadDiff(article, oldid, diff, a.navpopup);\n        } else if (history) {\n            loadAPIPreview(\"history\", article, a.navpopup);\n        } else if (shouldShowNonSimple(a) && pg.re.contribs.test(a.href)) {\n            loadAPIPreview(\"contribs\", article, a.navpopup);\n        } else if (shouldShowNonSimple(a) && pg.re.backlinks.test(a.href)) {\n            loadAPIPreview(\"backlinks\", article, a.navpopup);\n        } else if (article.namespaceId() == pg.nsImageId && (shouldShow(a, \"imagePopupsForImages\") || !anchorContainsImage(a))) {\n            loadAPIPreview(\"imagepagepreview\", article, a.navpopup);\n            loadImage(article, a.navpopup);\n        } else {\n            if (article.namespaceId() == pg.nsCategoryId && shouldShow(a, \"popupCategoryMembers\")) {\n                loadAPIPreview(\"category\", article, a.navpopup);\n            } else if ((article.namespaceId() == pg.nsUserId || article.namespaceId() == pg.nsUsertalkId) && shouldShow(a, \"popupUserInfo\")) {\n                loadAPIPreview(\"userinfo\", article, a.navpopup);\n            }\n            if (shouldShowNonSimple(a)) startArticlePreview(article, oldid, a.navpopup);\n        }\n    }\n\n    function pendingNavpopTask(navpop) {\n        if (navpop && navpop.pending === null) {\n            navpop.pending = 0;\n        }\n        ++navpop.pending;\n        debugData(navpop);\n    }\n\n    function completedNavpopTask(navpop) {\n        if (navpop && navpop.pending) {\n            --navpop.pending;\n        }\n        debugData(navpop);\n    }\n\n    function startArticlePreview(article, oldid, navpop) {\n        navpop.redir = 0;\n        loadPreview(article, oldid, navpop);\n    }\n\n    function loadPreview(article, oldid, navpop) {\n        if (!navpop.redir) {\n            navpop.originalArticle = article;\n        }\n        article.oldid = oldid;\n        loadAPIPreview(\"revision\", article, navpop);\n    }\n\n    function loadPreviewFromRedir(redirMatch, navpop) {\n        var target = new Title().fromWikiText(redirMatch[2]);\n        if (navpop.article.anchor) {\n            target.anchor = navpop.article.anchor;\n        }\n        navpop.redir++;\n        navpop.redirTarget = target;\n        var warnRedir = redirLink(target, navpop.article);\n        setPopupHTML(warnRedir, \"popupWarnRedir\", navpop.idNumber);\n        navpop.article = target;\n        fillEmptySpans({\n            redir: true,\n            redirTarget: target,\n            navpopup: navpop\n        });\n        return loadPreview(target, null, navpop);\n    }\n\n    function insertPreview(download) {\n        if (!download.owner) {\n            return;\n        }\n        var redirMatch = pg.re.redirect.exec(download.data);\n        if (download.owner.redir === 0 && redirMatch) {\n            loadPreviewFromRedir(redirMatch, download.owner);\n            return;\n        }\n        if (download.owner.visible || !getValueOf(\"popupLazyPreviews\")) {\n            insertPreviewNow(download);\n        } else {\n            var id = download.owner.redir ? \"PREVIEW_REDIR_HOOK\" : \"PREVIEW_HOOK\";\n            download.owner.addHook(function() {\n                insertPreviewNow(download);\n                return true;\n            }, \"unhide\", \"after\", id);\n        }\n    }\n\n    function insertPreviewNow(download) {\n        if (!download.owner) {\n            return;\n        }\n        var wikiText = download.data;\n        var navpop = download.owner;\n        var art = navpop.redirTarget || navpop.originalArticle;\n        makeFixDabs(wikiText, navpop);\n        if (getValueOf(\"popupSummaryData\")) {\n            getPageInfo(wikiText, download);\n            setPopupTrailer(getPageInfo(wikiText, download), navpop.idNumber);\n        }\n        var imagePage = \"\";\n        if (art.namespaceId() == pg.nsImageId) {\n            imagePage = art.toString();\n        } else {\n            imagePage = getValidImageFromWikiText(wikiText);\n        }\n        if (imagePage) {\n            loadImage(Title.fromWikiText(imagePage), navpop);\n        }\n        if (getValueOf(\"popupPreviews\")) {\n            insertArticlePreview(download, art, navpop);\n        }\n    }\n\n    function insertArticlePreview(download, art, navpop) {\n        if (download && typeof download.data == typeof \"\") {\n            if (art.namespaceId() == pg.nsTemplateId && getValueOf(\"popupPreviewRawTemplates\")) {\n                var h = '<hr /><span style=\"font-family: monospace;\">' + download.data.entify().split(\"\\\\n\").join(\"<br />\\\\n\") + \"</span>\";\n                setPopupHTML(h, \"popupPreview\", navpop.idNumber);\n            } else {\n                var p = prepPreviewmaker(download.data, art, navpop);\n                p.showPreview();\n            }\n        }\n    }\n\n    function prepPreviewmaker(data, article, navpop) {\n        var d = anchorize(data, article.anchorString());\n        var urlBase = joinPath([pg.wiki.articlebase, article.urlString()]);\n        var p = new Previewmaker(d, urlBase, navpop);\n        return p;\n    }\n\n    function anchorize(d, anch) {\n        if (!anch) {\n            return d;\n        }\n        var anchRe = RegExp(\"(?:=+\\\\s*\" + literalizeRegex(anch).replace(/[_ ]/g, \"[_ ]\") + \"\\\\s*=+|\\\\{\\\\{\\\\s*\" + getValueOf(\"popupAnchorRegexp\") + \"\\\\s*(?:\\\\|[^|}]*)*?\\\\s*\" + literalizeRegex(anch) + \"\\\\s*(?:\\\\|[^}]*)?}})\");\n        var match = d.match(anchRe);\n        if (match && match.length > 0 && match[0]) {\n            return d.substring(d.indexOf(match[0]));\n        }\n        var lines = d.split(\"\\n\");\n        for (var i = 0; i < lines.length; ++i) {\n            lines[i] = lines[i].replace(RegExp(\"[[]{2}([^|\\\\]]*?[|])?(.*?)[\\\\]]{2}\", \"g\"), \"$2\").replace(/'''([^'])/g, \"$1\").replace(RegExp(\"''([^'])\", \"g\"), \"$1\");\n            if (lines[i].match(anchRe)) {\n                return d.split(\"\\n\").slice(i).join(\"\\n\").replace(RegExp(\"^[^=]*\"), \"\");\n            }\n        }\n        return d;\n    }\n\n    function killPopup() {\n        removeModifierKeyHandler(this);\n        if (getValueOf(\"popupShortcutKeys\")) {\n            rmPopupShortcuts();\n        }\n        if (!pg) {\n            return;\n        }\n        if (pg.current.link && pg.current.link.navpopup) {\n            pg.current.link.navpopup.banish();\n        }\n        pg.current.link = null;\n        abortAllDownloads();\n        if (pg.timer.checkPopupPosition) {\n            clearInterval(pg.timer.checkPopupPosition);\n            pg.timer.checkPopupPosition = null;\n        }\n        return true;\n    }\n\n    function Drag() {\n        this.startCondition = null;\n        this.endHook = null;\n    }\n    Drag.prototype.fixE = function(e) {\n        if (typeof e == \"undefined\") {\n            e = window.event;\n        }\n        if (typeof e.layerX == \"undefined\") {\n            e.layerX = e.offsetX;\n        }\n        if (typeof e.layerY == \"undefined\") {\n            e.layerY = e.offsetY;\n        }\n        return e;\n    };\n    Drag.prototype.init = function(o, oRoot) {\n        var dragObj = this;\n        this.obj = o;\n        o.onmousedown = function(e) {\n            dragObj.start.apply(dragObj, [e]);\n        };\n        o.dragging = false;\n        o.popups_draggable = true;\n        o.hmode = true;\n        o.vmode = true;\n        o.root = oRoot ? oRoot : o;\n        if (isNaN(parseInt(o.root.style.left, 10))) {\n            o.root.style.left = \"0px\";\n        }\n        if (isNaN(parseInt(o.root.style.top, 10))) {\n            o.root.style.top = \"0px\";\n        }\n        o.root.onthisStart = function() {};\n        o.root.onthisEnd = function() {};\n        o.root.onthis = function() {};\n    };\n    Drag.prototype.start = function(e) {\n        var o = this.obj;\n        e = this.fixE(e);\n        if (this.startCondition && !this.startCondition(e)) {\n            return;\n        }\n        var y = parseInt(o.vmode ? o.root.style.top : o.root.style.bottom, 10);\n        var x = parseInt(o.hmode ? o.root.style.left : o.root.style.right, 10);\n        o.root.onthisStart(x, y);\n        o.lastMouseX = e.clientX;\n        o.lastMouseY = e.clientY;\n        var dragObj = this;\n        o.onmousemoveDefault = document.onmousemove;\n        o.dragging = true;\n        document.onmousemove = function(e) {\n            dragObj.drag.apply(dragObj, [e]);\n        };\n        document.onmouseup = function(e) {\n            dragObj.end.apply(dragObj, [e]);\n        };\n        return false;\n    };\n    Drag.prototype.drag = function(e) {\n        e = this.fixE(e);\n        var o = this.obj;\n        var ey = e.clientY;\n        var ex = e.clientX;\n        var y = parseInt(o.vmode ? o.root.style.top : o.root.style.bottom, 10);\n        var x = parseInt(o.hmode ? o.root.style.left : o.root.style.right, 10);\n        var nx, ny;\n        nx = x + (ex - o.lastMouseX) * (o.hmode ? 1 : -1);\n        ny = y + (ey - o.lastMouseY) * (o.vmode ? 1 : -1);\n        this.obj.root.style[o.hmode ? \"left\" : \"right\"] = nx + \"px\";\n        this.obj.root.style[o.vmode ? \"top\" : \"bottom\"] = ny + \"px\";\n        this.obj.lastMouseX = ex;\n        this.obj.lastMouseY = ey;\n        this.obj.root.onthis(nx, ny);\n        return false;\n    };\n    Drag.prototype.end = function() {\n        document.onmousemove = this.obj.onmousemoveDefault;\n        document.onmouseup = null;\n        this.obj.dragging = false;\n        if (this.endHook) {\n            this.endHook(parseInt(this.obj.root.style[this.obj.hmode ? \"left\" : \"right\"], 10), parseInt(this.obj.root.style[this.obj.vmode ? \"top\" : \"bottom\"], 10));\n        }\n    };\n    pg.structures.original = {};\n    pg.structures.original.popupLayout = function() {\n        return [\"popupError\", \"popupImage\", \"popupTopLinks\", \"popupTitle\", \"popupUserData\", \"popupData\", \"popupOtherLinks\", \"popupRedir\", [\"popupWarnRedir\", \"popupRedirTopLinks\", \"popupRedirTitle\", \"popupRedirData\", \"popupRedirOtherLinks\"], \"popupMiscTools\", [\"popupRedlink\"], \"popupPrePreviewSep\", \"popupPreview\", \"popupSecondPreview\", \"popupPreviewMore\", \"popupPostPreview\", \"popupFixDab\"];\n    };\n    pg.structures.original.popupRedirSpans = function() {\n        return [\"popupRedir\", \"popupWarnRedir\", \"popupRedirTopLinks\", \"popupRedirTitle\", \"popupRedirData\", \"popupRedirOtherLinks\"];\n    };\n    pg.structures.original.popupTitle = function(x) {\n        log(\"defaultstructure.popupTitle\");\n        if (!getValueOf(\"popupNavLinks\")) {\n            return navlinkStringToHTML(\"<b><<mainlink>></b>\", x.article, x.params);\n        }\n        return \"\";\n    };\n    pg.structures.original.popupTopLinks = function(x) {\n        log(\"defaultstructure.popupTopLinks\");\n        if (getValueOf(\"popupNavLinks\")) {\n            return navLinksHTML(x.article, x.hint, x.params);\n        }\n        return \"\";\n    };\n    pg.structures.original.popupImage = function(x) {\n        log(\"original.popupImage, x.article=\" + x.article + \", x.navpop.idNumber=\" + x.navpop.idNumber);\n        return imageHTML(x.article, x.navpop.idNumber);\n    };\n    pg.structures.original.popupRedirTitle = pg.structures.original.popupTitle;\n    pg.structures.original.popupRedirTopLinks = pg.structures.original.popupTopLinks;\n\n    function copyStructure(oldStructure, newStructure) {\n        pg.structures[newStructure] = {};\n        for (var prop in pg.structures[oldStructure]) {\n            pg.structures[newStructure][prop] = pg.structures[oldStructure][prop];\n        }\n    }\n    copyStructure(\"original\", \"nostalgia\");\n    pg.structures.nostalgia.popupTopLinks = function(x) {\n        var str = \"\";\n        str += \"<b><<mainlink|shortcut= >></b>\";\n        str += \"if(user){<br><<contribs|shortcut=c>>\";\n        str += \"if(wikimedia){*<<count|shortcut=#>>}\";\n        str += \"if(ipuser){}else{*<<email|shortcut=E>>}if(admin){*<<block|shortcut=b>>}}\";\n        var editstr = \"<<edit|shortcut=e>>\";\n        var editOldidStr = \"if(oldid){<<editOld|shortcut=e>>|<<revert|shortcut=v|rv>>|<<edit|cur>>}else{\" + editstr + \"}\";\n        var historystr = \"<<history|shortcut=h>>\";\n        var watchstr = \"<<unwatch|unwatchShort>>|<<watch|shortcut=w|watchThingy>>\";\n        str += \"<br>if(talk){\" + editOldidStr + \"|<<new|shortcut=+>>\" + \"*\" + historystr + \"*\" + watchstr + \"*\" + \"<b><<article|shortcut=a>></b>|<<editArticle|edit>>\" + \"}else{\" + editOldidStr + \"*\" + historystr + \"*\" + watchstr + \"*\" + \"<b><<talk|shortcut=t>></b>|<<editTalk|edit>>|<<newTalk|shortcut=+|new>>}\";\n        str += \"<br><<whatLinksHere|shortcut=l>>*<<relatedChanges|shortcut=r>>\";\n        str += \"if(admin){<br>}else{*}<<move|shortcut=m>>\";\n        str += \"if(admin){*<<unprotect|unprotectShort>>|<<protect|shortcut=p>>*\" + \"<<undelete|undeleteShort>>|<<delete|shortcut=d>>}\";\n        return navlinkStringToHTML(str, x.article, x.params);\n    };\n    pg.structures.nostalgia.popupRedirTopLinks = pg.structures.nostalgia.popupTopLinks;\n    copyStructure(\"original\", \"fancy\");\n    pg.structures.fancy.popupTitle = function(x) {\n        return navlinkStringToHTML(\"<font size=+0><<mainlink>></font>\", x.article, x.params);\n    };\n    pg.structures.fancy.popupTopLinks = function(x) {\n        var hist = \"<<history|shortcut=h|hist>>|<<lastEdit|shortcut=/|last>>|<<editors|shortcut=E|eds>>\";\n        var watch = \"<<unwatch|unwatchShort>>|<<watch|shortcut=w|watchThingy>>\";\n        var move = \"<<move|shortcut=m|move>>\";\n        return navlinkStringToHTML(\"if(talk){\" + \"<<edit|shortcut=e>>|<<new|shortcut=+|+>>*\" + hist + \"*\" + \"<<article|shortcut=a>>|<<editArticle|edit>>\" + \"*\" + watch + \"*\" + move + \"}else{<<edit|shortcut=e>>*\" + hist + \"*<<talk|shortcut=t|>>|<<editTalk|edit>>|<<newTalk|shortcut=+|new>>\" + \"*\" + watch + \"*\" + move + \"}<br>\", x.article, x.params);\n    };\n    pg.structures.fancy.popupOtherLinks = function(x) {\n        var admin = \"<<unprotect|unprotectShort>>|<<protect|shortcut=p>>*<<undelete|undeleteShort>>|<<delete|shortcut=d|del>>\";\n        var user = \"<<contribs|shortcut=c>>if(wikimedia){|<<count|shortcut=#|#>>}\";\n        user += \"if(ipuser){|<<arin>>}else{*<<email|shortcut=E|\" + popupString(\"email\") + \">>}if(admin){*<<block|shortcut=b>>}\";\n        var normal = \"<<whatLinksHere|shortcut=l|links here>>*<<relatedChanges|shortcut=r|related>>\";\n        return navlinkStringToHTML(\"<br>if(user){\" + user + \"*}if(admin){\" + admin + \"if(user){<br>}else{*}}\" + normal, x.article, x.params);\n    };\n    pg.structures.fancy.popupRedirTitle = pg.structures.fancy.popupTitle;\n    pg.structures.fancy.popupRedirTopLinks = pg.structures.fancy.popupTopLinks;\n    pg.structures.fancy.popupRedirOtherLinks = pg.structures.fancy.popupOtherLinks;\n    copyStructure(\"fancy\", \"fancy2\");\n    pg.structures.fancy2.popupTopLinks = function(x) {\n        return \"<br>\" + pg.structures.fancy.popupTopLinks(x).replace(RegExp(\"<br>$\", \"i\"), \"\");\n    };\n    pg.structures.fancy2.popupLayout = function() {\n        return [\"popupError\", \"popupImage\", \"popupTitle\", \"popupUserData\", \"popupData\", \"popupTopLinks\", \"popupOtherLinks\", \"popupRedir\", [\"popupWarnRedir\", \"popupRedirTopLinks\", \"popupRedirTitle\", \"popupRedirData\", \"popupRedirOtherLinks\"], \"popupMiscTools\", [\"popupRedlink\"], \"popupPrePreviewSep\", \"popupPreview\", \"popupSecondPreview\", \"popupPreviewMore\", \"popupPostPreview\", \"popupFixDab\"];\n    };\n    copyStructure(\"original\", \"menus\");\n    pg.structures.menus.popupLayout = function() {\n        return [\"popupError\", \"popupImage\", \"popupTopLinks\", \"popupTitle\", \"popupOtherLinks\", \"popupRedir\", [\"popupWarnRedir\", \"popupRedirTopLinks\", \"popupRedirTitle\", \"popupRedirData\", \"popupRedirOtherLinks\"], \"popupUserData\", \"popupData\", \"popupMiscTools\", [\"popupRedlink\"], \"popupPrePreviewSep\", \"popupPreview\", \"popupSecondPreview\", \"popupPreviewMore\", \"popupPostPreview\", \"popupFixDab\"];\n    };\n    pg.structures.menus.popupTopLinks = function(x, shorter) {\n        var s = [];\n        var dropdiv = '<div class=\"popup_drop\">';\n        var enddiv = \"</div>\";\n        var hist = \"<<history|shortcut=h>>\";\n        if (!shorter) {\n            hist = \"<menurow>\" + hist + \"|<<historyfeed|rss>>|<<editors|shortcut=E>></menurow>\";\n        }\n        var lastedit = \"<<lastEdit|shortcut=/|show last edit>>\";\n        var thank = \"if(diff){<<thank|send thanks>>}\";\n        var jsHistory = \"<<lastContrib|last set of edits>><<sinceMe|changes since mine>>\";\n        var linkshere = \"<<whatLinksHere|shortcut=l|what links here>>\";\n        var related = \"<<relatedChanges|shortcut=r|related changes>>\";\n        var search = \"<menurow><<search|shortcut=s>>if(wikimedia){|<<globalsearch|shortcut=g|global>>}\" + \"|<<google|shortcut=G|web>></menurow>\";\n        var watch = \"<menurow><<unwatch|unwatchShort>>|<<watch|shortcut=w|watchThingy>></menurow>\";\n        var protect = \"<menurow><<unprotect|unprotectShort>>|\" + \"<<protect|shortcut=p>>|<<protectlog|log>></menurow>\";\n        var del = \"<menurow><<undelete|undeleteShort>>|<<delete|shortcut=d>>|\" + \"<<deletelog|log>></menurow>\";\n        var move = \"<<move|shortcut=m|move page>>\";\n        var nullPurge = \"<menurow><<nullEdit|shortcut=n|null edit>>|<<purge|shortcut=P>></menurow>\";\n        var viewOptions = \"<menurow><<view|shortcut=v>>|<<render|shortcut=S>>|<<raw>></menurow>\";\n        var editRow = \"if(oldid){\" + \"<menurow><<edit|shortcut=e>>|<<editOld|shortcut=e|this&nbsp;revision>></menurow>\" + \"<menurow><<revert|shortcut=v>>|<<undo>></menurow>\" + \"}else{<<edit|shortcut=e>>}\";\n        var markPatrolled = \"if(rcid){<<markpatrolled|mark patrolled>>}\";\n        var newTopic = \"if(talk){<<new|shortcut=+|new topic>>}\";\n        var protectDelete = \"if(admin){\" + protect + del + \"}\";\n        if (getValueOf(\"popupActionsMenu\")) {\n            s.push(\"<<mainlink>>*\" + dropdiv + menuTitle(\"actions\"));\n        } else {\n            s.push(dropdiv + \"<<mainlink>>\");\n        }\n        s.push(\"<menu>\");\n        s.push(editRow + markPatrolled + newTopic + hist + lastedit + thank);\n        if (!shorter) {\n            s.push(jsHistory);\n        }\n        s.push(move + linkshere + related);\n        if (!shorter) {\n            s.push(nullPurge + search);\n        }\n        if (!shorter) {\n            s.push(viewOptions);\n        }\n        s.push(\"<hr />\" + watch + protectDelete);\n        s.push(\"<hr />\" + \"if(talk){<<article|shortcut=a|view article>><<editArticle|edit article>>}\" + \"else{<<talk|shortcut=t|talk page>><<editTalk|edit talk>>\" + \"<<newTalk|shortcut=+|new topic>>}</menu>\" + enddiv);\n        var email = \"<<email|shortcut=E|email user>>\";\n        var contribs = \"if(wikimedia){<menurow>}<<contribs|shortcut=c|contributions>>if(wikimedia){</menurow>}\" + \"if(admin){<menurow><<deletedContribs>></menurow>}\";\n        s.push(\"if(user){*\" + dropdiv + menuTitle(\"user\"));\n        s.push(\"<menu>\");\n        s.push(\"<menurow><<userPage|shortcut=u|user&nbsp;page>>|<<userSpace|space>></menurow>\");\n        s.push(\"<<userTalk|shortcut=t|user talk>><<editUserTalk|edit user talk>>\" + \"<<newUserTalk|shortcut=+|leave comment>>\");\n        if (!shorter) {\n            s.push(\"if(ipuser){<<arin>>}else{\" + email + \"}\");\n        } else {\n            s.push(\"if(ipuser){}else{\" + email + \"}\");\n        }\n        s.push(\"<hr />\" + contribs + \"<<userlog|shortcut=L|user log>>\");\n        s.push(\"if(wikimedia){<<count|shortcut=#|edit counter>>}\");\n        s.push(\"if(admin){<menurow><<unblock|unblockShort>>|<<block|shortcut=b|block user>></menurow>}\");\n        s.push(\"<<blocklog|shortcut=B|block log>>\");\n        s.push(\"</menu>\" + enddiv + \"}\");\n        if (getValueOf(\"popupSetupMenu\") && !x.navpop.hasPopupMenu) {\n            x.navpop.hasPopupMenu = true;\n            s.push(\"*\" + dropdiv + menuTitle(\"popupsMenu\") + \"<menu>\");\n            s.push(\"<<togglePreviews|toggle previews>>\");\n            s.push(\"<<purgePopups|reset>>\");\n            s.push(\"<<disablePopups|disable>>\");\n            s.push(\"</menu>\" + enddiv);\n        }\n        return navlinkStringToHTML(s.join(\"\"), x.article, x.params);\n    };\n\n    function menuTitle(s) {\n        return '<a href=\"#\" noPopup=1>' + popupString(s) + \"</a>\";\n    }\n    pg.structures.menus.popupRedirTitle = pg.structures.menus.popupTitle;\n    pg.structures.menus.popupRedirTopLinks = pg.structures.menus.popupTopLinks;\n    copyStructure(\"menus\", \"shortmenus\");\n    pg.structures.shortmenus.popupTopLinks = function(x) {\n        return pg.structures.menus.popupTopLinks(x, true);\n    };\n    pg.structures.shortmenus.popupRedirTopLinks = pg.structures.shortmenus.popupTopLinks;\n    pg.structures.lite = {};\n    pg.structures.lite.popupLayout = function() {\n        return [\"popupTitle\", \"popupPreview\"];\n    };\n    pg.structures.lite.popupTitle = function(x) {\n        log(x.article + \": structures.lite.popupTitle\");\n        return '<div><span class=\"popup_mainlink\"><b>' + x.article.toString() + \"</b></span></div>\";\n    };\n\n    function substitute(data, cmdBody) {\n        var fromRe = RegExp(cmdBody.from, cmdBody.flags);\n        return data.replace(fromRe, cmdBody.to);\n    }\n\n    function execCmds(data, cmdList) {\n        for (var i = 0; i < cmdList.length; ++i) {\n            data = cmdList[i].action(data, cmdList[i]);\n        }\n        return data;\n    }\n\n    function parseCmd(str) {\n        if (!str.length) {\n            return [];\n        }\n        var p = false;\n        switch (str.charAt(0)) {\n            case \"s\":\n                p = parseSubstitute(str);\n                break;\n\n            default:\n                return false;\n        }\n        if (p) {\n            return [p].concat(parseCmd(p.remainder));\n        }\n        return false;\n    }\n\n    function unEscape(str, sep) {\n        return str.split(\"\\\\\\\\\").join(\"\\\\\").split(\"\\\\\" + sep).join(sep).split(\"\\\\n\").join(\"\\n\");\n    }\n\n    function parseSubstitute(str) {\n        var from, to, flags, tmp;\n        if (str.length < 4) {\n            return false;\n        }\n        var sep = str.charAt(1);\n        str = str.substring(2);\n        tmp = skipOver(str, sep);\n        if (tmp) {\n            from = tmp.segment;\n            str = tmp.remainder;\n        } else {\n            return false;\n        }\n        tmp = skipOver(str, sep);\n        if (tmp) {\n            to = tmp.segment;\n            str = tmp.remainder;\n        } else {\n            return false;\n        }\n        flags = \"\";\n        if (str.length) {\n            tmp = skipOver(str, \";\") || skipToEnd(str, \";\");\n            if (tmp) {\n                flags = tmp.segment;\n                str = tmp.remainder;\n            }\n        }\n        return {\n            action: substitute,\n            from: from,\n            to: to,\n            flags: flags,\n            remainder: str\n        };\n    }\n\n    function skipOver(str, sep) {\n        var endSegment = findNext(str, sep);\n        if (endSegment < 0) {\n            return false;\n        }\n        var segment = unEscape(str.substring(0, endSegment), sep);\n        return {\n            segment: segment,\n            remainder: str.substring(endSegment + 1)\n        };\n    }\n\n    function skipToEnd(str, sep) {\n        return {\n            segment: str,\n            remainder: \"\"\n        };\n    }\n\n    function findNext(str, ch) {\n        for (var i = 0; i < str.length; ++i) {\n            if (str.charAt(i) == \"\\\\\") {\n                i += 2;\n            }\n            if (str.charAt(i) == ch) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    function setCheckbox(param, box) {\n        var val = mw.util.getParamValue(param);\n        if (val) {\n            switch (val) {\n                case \"1\":\n                case \"yes\":\n                case \"true\":\n                    box.checked = true;\n                    break;\n\n                case \"0\":\n                case \"no\":\n                case \"false\":\n                    box.checked = false;\n            }\n        }\n    }\n\n    function autoEdit() {\n        setupPopups(function() {\n            if (mw.util.getParamValue(\"autoimpl\") !== popupString(\"autoedit_version\")) {\n                return false;\n            }\n            if (mw.util.getParamValue(\"autowatchlist\") && mw.util.getParamValue(\"actoken\") === autoClickToken()) {\n                pg.fn.modifyWatchlist(mw.util.getParamValue(\"title\"), mw.util.getParamValue(\"action\"));\n            }\n            if (!document.editform) {\n                return false;\n            }\n            if (autoEdit.alreadyRan) {\n                return false;\n            }\n            autoEdit.alreadyRan = true;\n            var cmdString = mw.util.getParamValue(\"autoedit\");\n            if (cmdString) {\n                try {\n                    var editbox = document.editform.wpTextbox1;\n                    var cmdList = parseCmd(cmdString);\n                    var input = editbox.value;\n                    var output = execCmds(input, cmdList);\n                    editbox.value = output;\n                } catch (dang) {\n                    return;\n                }\n                if (typeof wikEdUseWikEd != \"undefined\") {\n                    if (wikEdUseWikEd === true) {\n                        WikEdUpdateFrame();\n                    }\n                }\n            }\n            setCheckbox(\"autominor\", document.editform.wpMinoredit);\n            setCheckbox(\"autowatch\", document.editform.wpWatchthis);\n            var rvid = mw.util.getParamValue(\"autorv\");\n            if (rvid) {\n                var url = pg.wiki.apiwikibase + \"?action=query&format=json&formatversion=2&prop=revisions&revids=\" + rvid;\n                startDownload(url, null, autoEdit2);\n            } else {\n                autoEdit2();\n            }\n        });\n    }\n\n    function autoEdit2(d) {\n        var summary = mw.util.getParamValue(\"autosummary\");\n        var summaryprompt = mw.util.getParamValue(\"autosummaryprompt\");\n        var summarynotice = \"\";\n        if (d && d.data && mw.util.getParamValue(\"autorv\")) {\n            var s = getRvSummary(summary, d.data);\n            if (s === false) {\n                summaryprompt = true;\n                summarynotice = popupString(\"Failed to get revision information, please edit manually.\\n\\n\");\n                summary = simplePrintf(summary, [mw.util.getParamValue(\"autorv\"), \"(unknown)\", \"(unknown)\"]);\n            } else {\n                summary = s;\n            }\n        }\n        if (summaryprompt) {\n            var txt = summarynotice + popupString(\"Enter a non-empty edit summary or press cancel to abort\");\n            var response = prompt(txt, summary);\n            if (response) {\n                summary = response;\n            } else {\n                return;\n            }\n        }\n        if (summary) {\n            document.editform.wpSummary.value = summary;\n        }\n        setTimeout(autoEdit3, 100);\n    }\n\n    function autoClickToken() {\n        return mw.user.sessionId();\n    }\n\n    function autoEdit3() {\n        if (mw.util.getParamValue(\"actoken\") != autoClickToken()) {\n            return;\n        }\n        var btn = mw.util.getParamValue(\"autoclick\");\n        if (btn) {\n            if (document.editform && document.editform[btn]) {\n                var button = document.editform[btn];\n                var msg = tprintf(\"The %s button has been automatically clicked. Please wait for the next page to load.\", [button.value]);\n                bannerMessage(msg);\n                document.title = \"(\" + document.title + \")\";\n                button.click();\n            } else {\n                alert(tprintf(\"Could not find button %s. Please check the settings in your javascript file.\", [btn]));\n            }\n        }\n    }\n\n    function bannerMessage(s) {\n        var headings = document.getElementsByTagName(\"h1\");\n        if (headings) {\n            var div = document.createElement(\"div\");\n            div.innerHTML = \"<font size=+1><b>\" + s + \"</b></font>\";\n            headings[0].parentNode.insertBefore(div, headings[0]);\n        }\n    }\n\n    function getRvSummary(template, json) {\n        try {\n            var o = getJsObj(json);\n            var edit = anyChild(o.query.pages).revisions[0];\n            var timestamp = edit.timestamp.split(/[A-Z]/g).join(\" \").replace(/^ *| *$/g, \"\");\n            return simplePrintf(template, [edit.revid, timestamp, edit.userhidden ? \"(hidden)\" : edit.user]);\n        } catch (badness) {\n            return false;\n        }\n    }\n\n    function Downloader(url) {\n        if (typeof XMLHttpRequest != \"undefined\") {\n            this.http = new XMLHttpRequest();\n        }\n        this.url = url;\n        this.id = null;\n        this.lastModified = null;\n        this.callbackFunction = null;\n        this.onFailure = null;\n        this.aborted = false;\n        this.method = \"GET\";\n        this.async = true;\n    }\n    new Downloader();\n    Downloader.prototype.send = function(x) {\n        if (!this.http) {\n            return null;\n        }\n        return this.http.send(x);\n    };\n    Downloader.prototype.abort = function() {\n        if (!this.http) {\n            return null;\n        }\n        this.aborted = true;\n        return this.http.abort();\n    };\n    Downloader.prototype.getData = function() {\n        if (!this.http) {\n            return null;\n        }\n        return this.http.responseText;\n    };\n    Downloader.prototype.setTarget = function() {\n        if (!this.http) {\n            return null;\n        }\n        this.http.open(this.method, this.url, this.async);\n        this.http.setRequestHeader(\"Api-User-Agent\", pg.misc.userAgent);\n    };\n    Downloader.prototype.getReadyState = function() {\n        if (!this.http) {\n            return null;\n        }\n        return this.http.readyState;\n    };\n    pg.misc.downloadsInProgress = {};\n    Downloader.prototype.start = function() {\n        if (!this.http) {\n            return;\n        }\n        pg.misc.downloadsInProgress[this.id] = this;\n        this.http.send(null);\n    };\n    Downloader.prototype.getLastModifiedDate = function() {\n        if (!this.http) {\n            return null;\n        }\n        var lastmod = null;\n        try {\n            lastmod = this.http.getResponseHeader(\"Last-Modified\");\n        } catch (err) {}\n        if (lastmod) {\n            return new Date(lastmod);\n        }\n        return null;\n    };\n    Downloader.prototype.setCallback = function(f) {\n        if (!this.http) {\n            return;\n        }\n        this.http.onreadystatechange = f;\n    };\n    Downloader.prototype.getStatus = function() {\n        if (!this.http) {\n            return null;\n        }\n        return this.http.status;\n    };\n\n    function newDownload(url, id, callback, onfailure) {\n        var d = new Downloader(url);\n        if (!d.http) {\n            return \"ohdear\";\n        }\n        d.id = id;\n        d.setTarget();\n        if (!onfailure) {\n            onfailure = 2;\n        }\n        var f = function() {\n            if (d.getReadyState() == 4) {\n                delete pg.misc.downloadsInProgress[this.id];\n                try {\n                    if (d.getStatus() == 200) {\n                        d.data = d.getData();\n                        d.lastModified = d.getLastModifiedDate();\n                        callback(d);\n                    } else if (typeof onfailure == typeof 1) {\n                        if (onfailure > 0) {\n                            newDownload(url, id, callback, onfailure - 1);\n                        }\n                    } else if ($.isFunction(onfailure)) {\n                        onfailure(d, url, id, callback);\n                    }\n                } catch (somerr) {}\n            }\n        };\n        d.setCallback(f);\n        return d;\n    }\n\n    function fakeDownload(url, id, callback, data, lastModified, owner) {\n        var d = newDownload(url, callback);\n        d.owner = owner;\n        d.id = id;\n        d.data = data;\n        d.lastModified = lastModified;\n        return callback(d);\n    }\n\n    function startDownload(url, id, callback) {\n        var d = newDownload(url, id, callback);\n        if (typeof d == typeof \"\") {\n            return d;\n        }\n        d.start();\n        return d;\n    }\n\n    function abortAllDownloads() {\n        for (var x in pg.misc.downloadsInProgress) {\n            try {\n                pg.misc.downloadsInProgress[x].aborted = true;\n                pg.misc.downloadsInProgress[x].abort();\n                delete pg.misc.downloadsInProgress[x];\n            } catch (e) {}\n        }\n    }\n    var Insta = {};\n\n    function setupLivePreview() {\n        Insta.conf = {\n            baseUrl: \"\",\n            user: {},\n            wiki: {\n                lang: pg.wiki.lang,\n                interwiki: pg.wiki.interwiki,\n                default_thumb_width: 180\n            },\n            paths: {\n                articles: pg.wiki.articlePath + \"/\",\n                math: \"/math/\",\n                images: \"//upload.wikimedia.org/wikipedia/en/\",\n                images_fallback: \"//upload.wikimedia.org/wikipedia/commons/\"\n            },\n            locale: {\n                user: mw.config.get(\"wgFormattedNamespaces\")[pg.nsUserId],\n                image: mw.config.get(\"wgFormattedNamespaces\")[pg.nsImageId],\n                category: mw.config.get(\"wgFormattedNamespaces\")[pg.nsCategoryId],\n                months: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n            }\n        };\n        Insta.conf.user.name = Insta.conf.user.name || \"Wikipedian\";\n        Insta.conf.user.signature = \"[[\" + Insta.conf.locale.user + \":\" + Insta.conf.user.name + \"|\" + Insta.conf.user.name + \"]]\";\n        Insta.BLOCK_IMAGE = new RegExp(\"^\\\\[\\\\[(?:File|Image|\" + Insta.conf.locale.image + \"):.*?\\\\|.*?(?:frame|thumbnail|thumb|none|right|left|center)\", \"i\");\n    }\n    Insta.dump = function(from, to) {\n        if (typeof from == \"string\") {\n            from = document.getElementById(from);\n        }\n        if (typeof to == \"string\") {\n            to = document.getElementById(to);\n        }\n        to.innerHTML = this.convert(from.value);\n    };\n    Insta.convert = function(wiki) {\n        var ll = typeof wiki == \"string\" ? wiki.replace(/\\r/g, \"\").split(/\\n/) : wiki,\n            o = \"\",\n            p = 0,\n            $r;\n\n        function remain() {\n            return ll.length;\n        }\n\n        function sh() {\n            return ll.shift();\n        }\n\n        function ps(s) {\n            o += s;\n        }\n\n        function f() {\n            var i = 1,\n                a = arguments,\n                f = a[0],\n                o = \"\",\n                c, p;\n            for (; i < a.length; i++) {\n                if ((p = f.indexOf(\"?\")) + 1) {\n                    i -= c = f.charAt(p + 1) == \"?\" ? 1 : 0;\n                    o += f.substring(0, p) + (c ? \"?\" : a[i]);\n                    f = f.substr(p + 1 + c);\n                } else {\n                    break;\n                }\n            }\n            return o + f;\n        }\n\n        function html_entities(s) {\n            return s.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n        }\n\n        function htmlescape_text(s) {\n            return s.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/:/g, \"&#58;\").replace(/\\[/g, \"&#91;\").replace(/]/g, \"&#93;\");\n        }\n\n        function htmlescape_attr(s) {\n            return htmlescape_text(s).replace(/'/g, \"&#39;\").replace(/\"/g, \"&quot;\");\n        }\n\n        function str_imatch(a, b) {\n            for (var i = 0, l = Math.min(a.length, b.length); i < l; i++) {\n                if (a.charAt(i) != b.charAt(i)) {\n                    break;\n                }\n            }\n            return i;\n        }\n\n        function $(c) {\n            return typeof c == \"string\" ? ll[0].substr(0, c.length) == c : $r = ll[0].match(c);\n        }\n\n        function $$(c) {\n            return ll[0] == c;\n        }\n\n        function _(p) {\n            return ll[0].charAt(p);\n        }\n\n        function endl(s) {\n            ps(s);\n            sh();\n        }\n\n        function parse_list() {\n            var prev = \"\";\n            while (remain() && $(/^([*#:;]+)(.*)$/)) {\n                var l_match = $r;\n                sh();\n                var ipos = str_imatch(prev, l_match[1]);\n                for (var prevPos = prev.length - 1; prevPos >= ipos; prevPos--) {\n                    var pi = prev.charAt(prevPos);\n                    if (pi == \"*\") {\n                        ps(\"</ul>\");\n                    } else if (pi == \"#\") {\n                        ps(\"</ol>\");\n                    } else if ($.inArray(l_match[1].charAt(prevPos), [\"\", \"*\", \"#\"])) {\n                        ps(\"</dl>\");\n                    }\n                }\n                for (var matchPos = ipos; matchPos < l_match[1].length; matchPos++) {\n                    var li = l_match[1].charAt(matchPos);\n                    if (li == \"*\") {\n                        ps(\"<ul>\");\n                    } else if (li == \"#\") {\n                        ps(\"<ol>\");\n                    } else if ($.inArray(prev.charAt(matchPos), [\"\", \"*\", \"#\"])) {\n                        ps(\"<dl>\");\n                    }\n                }\n                switch (l_match[1].charAt(l_match[1].length - 1)) {\n                    case \"*\":\n                    case \"#\":\n                        ps(\"<li>\" + parse_inline_nowiki(l_match[2]));\n                        break;\n\n                    case \";\":\n                        ps(\"<dt>\");\n                        var dt_match = l_match[2].match(/(.*?)(:.*?)$/);\n                        if (dt_match) {\n                            ps(parse_inline_nowiki(dt_match[1]));\n                            ll.unshift(dt_match[2]);\n                        } else ps(parse_inline_nowiki(l_match[2]));\n                        break;\n\n                    case \":\":\n                        ps(\"<dd>\" + parse_inline_nowiki(l_match[2]));\n                }\n                prev = l_match[1];\n            }\n            for (var i = prev.length - 1; i >= 0; i--) {\n                ps(f(\"</?>\", prev.charAt(i) == \"*\" ? \"ul\" : prev.charAt(i) == \"#\" ? \"ol\" : \"dl\"));\n            }\n        }\n\n        function parse_table() {\n            endl(f(\"<table>\", $(/^\\{\\|( .*)$/) ? $r[1] : \"\"));\n            for (; remain();)\n                if ($(\"|\")) switch (_(1)) {\n                    case \"}\":\n                        endl(\"</table>\");\n                        return;\n\n                    case \"-\":\n                        endl(f(\"<tr>\", $(/\\|-*(.*)/)[1]));\n                        break;\n\n                    default:\n                        parse_table_data();\n                } else if ($(\"!\")) {\n                    parse_table_data();\n                } else {\n                    sh();\n                }\n        }\n\n        function parse_table_data() {\n            var td_line, match_i;\n            var td_match = sh().match(/^(\\|\\+|\\||!)((?:([^[|]*?)\\|(?!\\|))?(.*))$/);\n            if (td_match[1] == \"|+\") ps(\"<caption\");\n            else ps(\"<t\" + (td_match[1] == \"|\" ? \"d\" : \"h\"));\n            if (typeof td_match[3] != \"undefined\") {\n                match_i = 4;\n            } else match_i = 2;\n            ps(\">\");\n            if (td_match[1] != \"|+\") {\n                td_line = td_match[match_i].split(td_match[1] == \"|\" ? \"||\" : /(?:\\|\\||!!)/);\n                ps(parse_inline_nowiki(td_line.shift()));\n                while (td_line.length) ll.unshift(td_match[1] + td_line.pop());\n            } else ps(td_match[match_i]);\n            var tc = 0,\n                td = [];\n            while (remain()) {\n                td.push(sh());\n                if ($(\"|\")) {\n                    if (!tc) break;\n                    else if (_(1) == \"}\") tc--;\n                } else if (!tc && $(\"!\")) break;\n                else if ($(\"{|\")) tc++;\n            }\n            if (td.length) ps(Insta.convert(td));\n        }\n\n        function parse_pre() {\n            ps(\"<pre>\");\n            do {\n                endl(parse_inline_nowiki(ll[0].substring(1)) + \"\\n\");\n            } while (remain() && $(\" \"));\n            ps(\"</pre>\");\n        }\n\n        function parse_block_image() {\n            ps(parse_image(sh()));\n        }\n\n        function parse_image(str) {\n            var tag = str.substring(str.indexOf(\":\") + 1, str.length - 2);\n            var width;\n            var attr = [],\n                filename, caption = \"\";\n            var thumb = 0,\n                frame = 0,\n                center = 0;\n            var align = \"\";\n            if (tag.match(/\\|/)) {\n                var nesting = 0;\n                var last_attr;\n                for (var i = tag.length - 1; i > 0; i--) {\n                    if (tag.charAt(i) == \"|\" && !nesting) {\n                        last_attr = tag.substr(i + 1);\n                        tag = tag.substring(0, i);\n                        break;\n                    } else switch (tag.substr(i - 1, 2)) {\n                        case \"]]\":\n                            nesting++;\n                            i--;\n                            break;\n\n                        case \"[[\":\n                            nesting--;\n                            i--;\n                    }\n                }\n                attr = tag.split(/\\s*\\|\\s*/);\n                attr.push(last_attr);\n                filename = attr.shift();\n                var w_match;\n                for (; attr.length; attr.shift()) {\n                    w_match = attr[0].match(/^(\\d*)(?:[px]*\\d*)?px$/);\n                    if (w_match) width = w_match[1];\n                    else switch (attr[0]) {\n                        case \"thumb\":\n                        case \"thumbnail\":\n                            thumb = true;\n                            frame = true;\n                            break;\n\n                        case \"frame\":\n                            frame = true;\n                            break;\n\n                        case \"none\":\n                        case \"right\":\n                        case \"left\":\n                            center = false;\n                            align = attr[0];\n                            break;\n\n                        case \"center\":\n                            center = true;\n                            align = \"none\";\n                            break;\n\n                        default:\n                            if (attr.length == 1) caption = attr[0];\n                    }\n                }\n            } else filename = tag;\n            return \"\";\n        }\n\n        function parse_inline_nowiki(str) {\n            var start, lastend = 0;\n            var substart = 0,\n                nestlev = 0,\n                open, close, subloop;\n            var html = \"\";\n            while (-1 != (start = str.indexOf(\"<nowiki>\", substart))) {\n                html += parse_inline_wiki(str.substring(lastend, start));\n                start += 8;\n                substart = start;\n                subloop = true;\n                do {\n                    open = str.indexOf(\"<nowiki>\", substart);\n                    close = str.indexOf(\"</nowiki>\", substart);\n                    if (close <= open || open == -1) {\n                        if (close == -1) {\n                            return html + html_entities(str.substr(start));\n                        }\n                        substart = close + 9;\n                        if (nestlev) {\n                            nestlev--;\n                        } else {\n                            lastend = substart;\n                            html += html_entities(str.substring(start, lastend - 9));\n                            subloop = false;\n                        }\n                    } else {\n                        substart = open + 8;\n                        nestlev++;\n                    }\n                } while (subloop);\n            }\n            return html + parse_inline_wiki(str.substr(lastend));\n        }\n\n        function parse_inline_images(str) {\n            var start, substart = 0,\n                nestlev = 0;\n            var loop, close, open, wiki, html;\n            while (-1 != (start = str.indexOf(\"[[\", substart))) {\n                if (str.substr(start + 2).match(RegExp(\"^(Image|File|\" + Insta.conf.locale.image + \"):\", \"i\"))) {\n                    loop = true;\n                    substart = start;\n                    do {\n                        substart += 2;\n                        close = str.indexOf(\"]]\", substart);\n                        open = str.indexOf(\"[[\", substart);\n                        if (close <= open || open == -1) {\n                            if (close == -1) return str;\n                            substart = close;\n                            if (nestlev) {\n                                nestlev--;\n                            } else {\n                                wiki = str.substring(start, close + 2);\n                                html = parse_image(wiki);\n                                str = str.replace(wiki, html);\n                                substart = start + html.length;\n                                loop = false;\n                            }\n                        } else {\n                            substart = open;\n                            nestlev++;\n                        }\n                    } while (loop);\n                } else break;\n            }\n            return str;\n        }\n\n        function parse_inline_formatting(str) {\n            var em, st, i, li, o = \"\";\n            while ((i = str.indexOf(\"''\", li)) + 1) {\n                o += str.substring(li, i);\n                li = i + 2;\n                if (str.charAt(i + 2) == \"'\") {\n                    li++;\n                    st = !st;\n                    o += st ? \"<strong>\" : \"</strong>\";\n                } else {\n                    em = !em;\n                    o += em ? \"<em>\" : \"</em>\";\n                }\n            }\n            return o + str.substr(li);\n        }\n\n        function parse_inline_wiki(str) {\n            str = parse_inline_images(str);\n            str = parse_inline_formatting(str);\n            str = str.replace(/<(?:)math>(.*?)<\\/math>/gi, \"\");\n            var date = new Date();\n            var minutes = date.getUTCMinutes();\n            if (minutes < 10) minutes = \"0\" + minutes;\n            date = f(\"?:?, ? ? ? (UTC)\", date.getUTCHours(), minutes, date.getUTCDate(), Insta.conf.locale.months[date.getUTCMonth()], date.getUTCFullYear());\n            return str.replace(/~{5}(?!~)/g, date).replace(/~{4}(?!~)/g, Insta.conf.user.name + \" \" + date).replace(/~{3}(?!~)/g, Insta.conf.user.name).replace(RegExp(\"\\\\[\\\\[:((?:\" + Insta.conf.locale.category + \"|Image|File|\" + Insta.conf.locale.image + \"|\" + Insta.conf.wiki.interwiki + \"):[^|]*?)\\\\]\\\\](\\\\w*)\", \"gi\"), function($0, $1, $2) {\n                return f(\"<a href='?'>?</a>\", Insta.conf.paths.articles + htmlescape_attr($1), htmlescape_text($1) + htmlescape_text($2));\n            }).replace(RegExp(\"\\\\[\\\\[(?:\" + Insta.conf.locale.category + \"|\" + Insta.conf.wiki.interwiki + \"):.*?\\\\]\\\\]\", \"gi\"), \"\").replace(RegExp(\"\\\\[\\\\[:((?:\" + Insta.conf.locale.category + \"|Image|File|\" + Insta.conf.locale.image + \"|\" + Insta.conf.wiki.interwiki + \"):.*?)\\\\|([^\\\\]]+?)\\\\]\\\\](\\\\w*)\", \"gi\"), function($0, $1, $2, $3) {\n                return f(\"<a href='?'>?</a>\", Insta.conf.paths.articles + htmlescape_attr($1), htmlescape_text($2) + htmlescape_text($3));\n            }).replace(/\\[\\[(\\/[^|]*?)\\]\\]/g, function($0, $1) {\n                return f(\"<a href='?'>?</a>\", Insta.conf.baseUrl + htmlescape_attr($1), htmlescape_text($1));\n            }).replace(/\\[\\[(\\/.*?)\\|(.+?)\\]\\]/g, function($0, $1, $2) {\n                return f(\"<a href='?'>?</a>\", Insta.conf.baseUrl + htmlescape_attr($1), htmlescape_text($2));\n            }).replace(/\\[\\[([^[|]*?)\\]\\](\\w*)/g, function($0, $1, $2) {\n                return f(\"<a href='?'>?</a>\", Insta.conf.paths.articles + htmlescape_attr($1), htmlescape_text($1) + htmlescape_text($2));\n            }).replace(/\\[\\[([^[]*?)\\|([^\\]]+?)\\]\\](\\w*)/g, function($0, $1, $2, $3) {\n                return f(\"<a href='?'>?</a>\", Insta.conf.paths.articles + htmlescape_attr($1), htmlescape_text($2) + htmlescape_text($3));\n            }).replace(/\\[\\[([^\\]]*?:)?(.*?)( *\\(.*?\\))?\\|\\]\\]/g, function($0, $1, $2, $3) {\n                return f(\"<a href='?'>?</a>\", Insta.conf.paths.articles + htmlescape_attr($1) + htmlescape_attr($2) + htmlescape_attr($3), htmlescape_text($2));\n            }).replace(/\\[(https?|news|ftp|mailto|gopher|irc):(\\/*)([^\\]]*?) (.*?)\\]/g, function($0, $1, $2, $3, $4) {\n                return f(\"<a class='external' href='?:?'>?</a>\", htmlescape_attr($1), htmlescape_attr($2) + htmlescape_attr($3), htmlescape_text($4));\n            }).replace(/\\[http:\\/\\/(.*?)\\]/g, function($0, $1) {\n                return f(\"<a class='external' href='http://?'>[#]</a>\", htmlescape_attr($1));\n            }).replace(/\\[(news|ftp|mailto|gopher|irc):(\\/*)(.*?)\\]/g, function($0, $1, $2, $3) {\n                return f(\"<a class='external' href='?:?'>?:?</a>\", htmlescape_attr($1), htmlescape_attr($2) + htmlescape_attr($3), htmlescape_text($1), htmlescape_text($2) + htmlescape_text($3));\n            }).replace(/(^| )(https?|news|ftp|mailto|gopher|irc):(\\/*)([^ $]*[^.,!?;: $])/g, function($0, $1, $2, $3, $4) {\n                return f(\"?<a class='external' href='?:?'>?:?</a>\", htmlescape_text($1), htmlescape_attr($2), htmlescape_attr($3) + htmlescape_attr($4), htmlescape_text($2), htmlescape_text($3) + htmlescape_text($4));\n            }).replace(\"__NOTOC__\", \"\").replace(\"__NOEDITSECTION__\", \"\");\n        }\n        for (; remain();)\n            if ($(/^(={1,6})(.*)\\1(.*)$/)) {\n                p = 0;\n                endl(f(\"<h?>?</h?>?\", $r[1].length, parse_inline_nowiki($r[2]), $r[1].length, $r[3]));\n            } else if ($(/^[*#:;]/)) {\n            p = 0;\n            parse_list();\n        } else if ($(\" \")) {\n            p = 0;\n            parse_pre();\n        } else if ($(\"{|\")) {\n            p = 0;\n            parse_table();\n        } else if ($(/^----+$/)) {\n            p = 0;\n            endl(\"<hr />\");\n        } else if ($(Insta.BLOCK_IMAGE)) {\n            p = 0;\n            parse_block_image();\n        } else {\n            if ($$(\"\")) {\n                p = remain() > 1 && ll[1] === \"\";\n                if (p) endl(\"<p><br>\");\n            } else {\n                if (!p) {\n                    ps(\"<p>\");\n                    p = 1;\n                }\n                ps(parse_inline_nowiki(ll[0]) + \" \");\n            }\n            sh();\n        }\n        return o;\n    };\n\n    function wiki2html(txt, baseurl) {\n        Insta.conf.baseUrl = baseurl;\n        return Insta.convert(txt);\n    }\n\n    function popupFilterPageSize(data) {\n        return formatBytes(data.length);\n    }\n\n    function popupFilterCountLinks(data) {\n        var num = countLinks(data);\n        return String(num) + \"&nbsp;\" + (num != 1 ? popupString(\"wikiLinks\") : popupString(\"wikiLink\"));\n    }\n\n    function popupFilterCountImages(data) {\n        var num = countImages(data);\n        return String(num) + \"&nbsp;\" + (num != 1 ? popupString(\"images\") : popupString(\"image\"));\n    }\n\n    function popupFilterCountCategories(data) {\n        var num = countCategories(data);\n        return String(num) + \"&nbsp;\" + (num != 1 ? popupString(\"categories\") : popupString(\"category\"));\n    }\n\n    function popupFilterLastModified(data, download) {\n        var lastmod = download.lastModified;\n        var now = new Date();\n        var age = now - lastmod;\n        if (lastmod && getValueOf(\"popupLastModified\")) {\n            return tprintf(\"%s old\", [formatAge(age)]).replace(RegExp(\" \", \"g\"), \"&nbsp;\");\n        }\n        return \"\";\n    }\n\n    function formatAge(age) {\n        var a = 0 + age,\n            aa = a;\n        var seclen = 1e3;\n        var minlen = 60 * seclen;\n        var hourlen = 60 * minlen;\n        var daylen = 24 * hourlen;\n        var weeklen = 7 * daylen;\n        var numweeks = (a - a % weeklen) / weeklen;\n        a = a - numweeks * weeklen;\n        var sweeks = addunit(numweeks, \"week\");\n        var numdays = (a - a % daylen) / daylen;\n        a = a - numdays * daylen;\n        var sdays = addunit(numdays, \"day\");\n        var numhours = (a - a % hourlen) / hourlen;\n        a = a - numhours * hourlen;\n        var shours = addunit(numhours, \"hour\");\n        var nummins = (a - a % minlen) / minlen;\n        a = a - nummins * minlen;\n        var smins = addunit(nummins, \"minute\");\n        var numsecs = (a - a % seclen) / seclen;\n        a = a - numsecs * seclen;\n        var ssecs = addunit(numsecs, \"second\");\n        if (aa > 4 * weeklen) {\n            return sweeks;\n        }\n        if (aa > weeklen) {\n            return sweeks + \" \" + sdays;\n        }\n        if (aa > daylen) {\n            return sdays + \" \" + shours;\n        }\n        if (aa > 6 * hourlen) {\n            return shours;\n        }\n        if (aa > hourlen) {\n            return shours + \" \" + smins;\n        }\n        if (aa > 10 * minlen) {\n            return smins;\n        }\n        if (aa > minlen) {\n            return smins + \" \" + ssecs;\n        }\n        return ssecs;\n    }\n\n    function addunit(num, str) {\n        return \"\" + num + \" \" + (num != 1 ? popupString(str + \"s\") : popupString(str));\n    }\n\n    function runPopupFilters(list, data, download) {\n        var ret = [];\n        for (var i = 0; i < list.length; ++i) {\n            if (list[i] && typeof list[i] == \"function\") {\n                var s = list[i](data, download, download.owner.article);\n                if (s) {\n                    ret.push(s);\n                }\n            }\n        }\n        return ret;\n    }\n\n    function getPageInfo(data, download) {\n        if (!data || data.length === 0) {\n            return popupString(\"Empty page\");\n        }\n        var popupFilters = getValueOf(\"popupFilters\") || [];\n        var extraPopupFilters = getValueOf(\"extraPopupFilters\") || [];\n        var pageInfoArray = runPopupFilters(popupFilters.concat(extraPopupFilters), data, download);\n        var pageInfo = pageInfoArray.join(\", \");\n        if (pageInfo !== \"\") {\n            pageInfo = upcaseFirst(pageInfo);\n        }\n        return pageInfo;\n    }\n\n    function countLinks(wikiText) {\n        return wikiText.split(\"[[\").length - 1;\n    }\n\n    function countImages(wikiText) {\n        return (wikiText.parenSplit(pg.re.image).length - 1) / (pg.re.imageBracketCount + 1);\n    }\n\n    function countCategories(wikiText) {\n        return (wikiText.parenSplit(pg.re.category).length - 1) / (pg.re.categoryBracketCount + 1);\n    }\n\n    function popupFilterStubDetect(data, download, article) {\n        var counts = stubCount(data, article);\n        if (counts.real) {\n            return popupString(\"stub\");\n        }\n        if (counts.sect) {\n            return popupString(\"section stub\");\n        }\n        return \"\";\n    }\n\n    function popupFilterDisambigDetect(data, download, article) {\n        if (!getValueOf(\"popupAllDabsStubs\") && article.namespace()) {\n            return \"\";\n        }\n        return isDisambig(data, article) ? popupString(\"disambig\") : \"\";\n    }\n\n    function formatBytes(num) {\n        return num > 949 ? Math.round(num / 100) / 10 + popupString(\"kB\") : num + \"&nbsp;\" + popupString(\"bytes\");\n    }\n\n    function Stringwrapper() {\n        this.indexOf = function(x) {\n            return this.toString().indexOf(x);\n        };\n        this.toString = function() {\n            return this.value;\n        };\n        this.parenSplit = function(x) {\n            return this.toString().parenSplit(x);\n        };\n        this.substring = function(x, y) {\n            if (typeof y == \"undefined\") {\n                return this.toString().substring(x);\n            }\n            return this.toString().substring(x, y);\n        };\n        this.split = function(x) {\n            return this.toString().split(x);\n        };\n        this.replace = function(x, y) {\n            return this.toString().replace(x, y);\n        };\n    }\n\n    function Title(val) {\n        this.value = null;\n        this.anchor = \"\";\n        this.setUtf(val);\n    }\n    Title.prototype = new Stringwrapper();\n    Title.prototype.toString = function(omitAnchor) {\n        return this.value + (!omitAnchor && this.anchor ? \"#\" + this.anchorString() : \"\");\n    };\n    Title.prototype.anchorString = function() {\n        if (!this.anchor) {\n            return \"\";\n        }\n        var split = this.anchor.parenSplit(/((?:[.][0-9A-F]{2})+)/);\n        var len = split.length;\n        for (var j = 1; j < len; j += 2) {\n            split[j] = decodeURIComponent(split[j].split(\".\").join(\"%\")).split(\"_\").join(\" \");\n        }\n        return split.join(\"\");\n    };\n    Title.prototype.urlAnchor = function() {\n        var split = this.anchor.parenSplit(\"/((?:[%][0-9A-F]{2})+)/\");\n        var len = split.length;\n        for (var j = 1; j < len; j += 2) {\n            split[j] = split[j].split(\"%\").join(\".\");\n        }\n        return split.join(\"\");\n    };\n    Title.prototype.anchorFromUtf = function(str) {\n        this.anchor = encodeURIComponent(str.split(\" \").join(\"_\")).split(\"%3A\").join(\":\").split(\"'\").join(\"%27\").split(\"%\").join(\".\");\n    };\n    Title.fromURL = function(h) {\n        return new Title().fromURL(h);\n    };\n    Title.prototype.fromURL = function(h) {\n        if (typeof h != \"string\") {\n            this.value = null;\n            return this;\n        }\n        var splitted = h.split(\"?\");\n        splitted[0] = splitted[0].split(\"&\").join(\"%26\");\n        h = splitted.join(\"?\");\n        var contribs = pg.re.contribs.exec(h);\n        if (contribs) {\n            if (contribs[1] == \"title=\") {\n                contribs[3] = contribs[3].split(\"+\").join(\" \");\n            }\n            var u = new Title(contribs[3]);\n            this.setUtf(this.decodeNasties(mw.config.get(\"wgFormattedNamespaces\")[pg.nsUserId] + \":\" + u.stripNamespace()));\n            return this;\n        }\n        var email = pg.re.email.exec(h);\n        if (email) {\n            this.setUtf(this.decodeNasties(mw.config.get(\"wgFormattedNamespaces\")[pg.nsUserId] + \":\" + new Title(email[3]).stripNamespace()));\n            return this;\n        }\n        var backlinks = pg.re.backlinks.exec(h);\n        if (backlinks) {\n            this.setUtf(this.decodeNasties(new Title(backlinks[3])));\n            return this;\n        }\n        var specialdiff = pg.re.specialdiff.exec(h);\n        if (specialdiff) {\n            this.setUtf(this.decodeNasties(new Title(mw.config.get(\"wgFormattedNamespaces\")[pg.nsSpecialId] + \":Diff\")));\n            return this;\n        }\n        var m = pg.re.main.exec(h);\n        if (m === null) {\n            this.value = null;\n        } else {\n            var fromBotInterface = /[?](.+[&])?title=/.test(h);\n            if (fromBotInterface) {\n                m[2] = m[2].split(\"+\").join(\"_\");\n            }\n            var extracted = m[2] + (m[3] ? \"#\" + m[3] : \"\");\n            if (pg.flag.isSafari && /%25[0-9A-Fa-f]{2}/.test(extracted)) {\n                this.setUtf(decodeURIComponent(unescape(extracted)));\n            } else {\n                this.setUtf(this.decodeNasties(extracted));\n            }\n        }\n        return this;\n    };\n    Title.prototype.decodeNasties = function(txt) {\n        var ret = this.decodeEscapes(decodeURI(txt));\n        ret = ret.replace(/[_ ]*$/, \"\");\n        return ret;\n    };\n    Title.prototype.decodeEscapes = function(txt) {\n        var split = txt.parenSplit(/((?:[%][0-9A-Fa-f]{2})+)/);\n        var len = split.length;\n        for (var i = 1; i < len; i = i + 2) {\n            split[i] = unescape(split[i]);\n        }\n        return split.join(\"\");\n    };\n    Title.fromAnchor = function(a) {\n        return new Title().fromAnchor(a);\n    };\n    Title.prototype.fromAnchor = function(a) {\n        if (!a) {\n            this.value = null;\n            return this;\n        }\n        return this.fromURL(a.href);\n    };\n    Title.fromWikiText = function(txt) {\n        return new Title().fromWikiText(txt);\n    };\n    Title.prototype.fromWikiText = function(txt) {\n        txt = myDecodeURI(txt);\n        this.setUtf(txt);\n        return this;\n    };\n    Title.prototype.hintValue = function() {\n        if (!this.value) {\n            return \"\";\n        }\n        return safeDecodeURI(this.value);\n    };\n    Title.prototype.toUserName = function(withNs) {\n        if (this.namespaceId() != pg.nsUserId && this.namespaceId() != pg.nsUsertalkId) {\n            this.value = null;\n            return;\n        }\n        this.value = (withNs ? mw.config.get(\"wgFormattedNamespaces\")[pg.nsUserId] + \":\" : \"\") + this.stripNamespace().split(\"/\")[0];\n    };\n    Title.prototype.userName = function(withNs) {\n        var t = new Title(this.value);\n        t.toUserName(withNs);\n        if (t.value) {\n            return t;\n        }\n        return null;\n    };\n    Title.prototype.toTalkPage = function() {\n        if (this.value === null) {\n            return null;\n        }\n        var namespaceId = this.namespaceId();\n        if (namespaceId >= 0 && namespaceId % 2 === 0) {\n            var localizedNamespace = mw.config.get(\"wgFormattedNamespaces\")[namespaceId + 1];\n            if (typeof localizedNamespace !== \"undefined\") {\n                if (localizedNamespace === \"\") {\n                    this.value = this.stripNamespace();\n                } else {\n                    this.value = localizedNamespace.split(\" \").join(\"_\") + \":\" + this.stripNamespace();\n                }\n                return this.value;\n            }\n        }\n        this.value = null;\n        return null;\n    };\n    Title.prototype.namespace = function() {\n        return mw.config.get(\"wgFormattedNamespaces\")[this.namespaceId()];\n    };\n    Title.prototype.namespaceId = function() {\n        var n = this.value.indexOf(\":\");\n        if (n < 0) {\n            return 0;\n        }\n        var namespaceId = mw.config.get(\"wgNamespaceIds\")[this.value.substring(0, n).split(\" \").join(\"_\").toLowerCase()];\n        if (typeof namespaceId == \"undefined\") return 0;\n        return namespaceId;\n    };\n    Title.prototype.talkPage = function() {\n        var t = new Title(this.value);\n        t.toTalkPage();\n        if (t.value) {\n            return t;\n        }\n        return null;\n    };\n    Title.prototype.isTalkPage = function() {\n        if (this.talkPage() === null) {\n            return true;\n        }\n        return false;\n    };\n    Title.prototype.toArticleFromTalkPage = function() {\n        if (this.value === null) {\n            return null;\n        }\n        var namespaceId = this.namespaceId();\n        if (namespaceId >= 0 && namespaceId % 2 == 1) {\n            var localizedNamespace = mw.config.get(\"wgFormattedNamespaces\")[namespaceId - 1];\n            if (typeof localizedNamespace !== \"undefined\") {\n                if (localizedNamespace === \"\") {\n                    this.value = this.stripNamespace();\n                } else {\n                    this.value = localizedNamespace.split(\" \").join(\"_\") + \":\" + this.stripNamespace();\n                }\n                return this.value;\n            }\n        }\n        this.value = null;\n        return null;\n    };\n    Title.prototype.articleFromTalkPage = function() {\n        var t = new Title(this.value);\n        t.toArticleFromTalkPage();\n        if (t.value) {\n            return t;\n        }\n        return null;\n    };\n    Title.prototype.articleFromTalkOrArticle = function() {\n        var t = new Title(this.value);\n        if (t.toArticleFromTalkPage()) {\n            return t;\n        }\n        return this;\n    };\n    Title.prototype.isIpUser = function() {\n        return pg.re.ipUser.test(this.userName());\n    };\n    Title.prototype.stripNamespace = function() {\n        var n = this.value.indexOf(\":\");\n        if (n < 0) {\n            return this.value;\n        }\n        var namespaceId = this.namespaceId();\n        if (namespaceId === pg.nsMainspaceId) return this.value;\n        return this.value.substring(n + 1);\n    };\n    Title.prototype.setUtf = function(value) {\n        if (!value) {\n            this.value = \"\";\n            return;\n        }\n        var anch = value.indexOf(\"#\");\n        if (anch < 0) {\n            this.value = value.split(\"_\").join(\" \");\n            this.anchor = \"\";\n            return;\n        }\n        this.value = value.substring(0, anch).split(\"_\").join(\" \");\n        this.anchor = value.substring(anch + 1);\n        this.ns = null;\n    };\n    Title.prototype.setUrl = function(urlfrag) {\n        var anch = urlfrag.indexOf(\"#\");\n        this.value = safeDecodeURI(urlfrag.substring(0, anch));\n        this.anchor = this.value.substring(anch + 1);\n    };\n    Title.prototype.append = function(x) {\n        this.setUtf(this.value + x);\n    };\n    Title.prototype.urlString = function(x) {\n        if (!x) {\n            x = {};\n        }\n        var v = this.toString(true);\n        if (!x.omitAnchor && this.anchor) {\n            v += \"#\" + this.urlAnchor();\n        }\n        if (!x.keepSpaces) {\n            v = v.split(\" \").join(\"_\");\n        }\n        return encodeURI(v).split(\"&\").join(\"%26\").split(\"?\").join(\"%3F\").split(\"+\").join(\"%2B\");\n    };\n    Title.prototype.removeAnchor = function() {\n        return new Title(this.toString(true));\n    };\n    Title.prototype.toUrl = function() {\n        return pg.wiki.titlebase + this.urlString();\n    };\n\n    function parseParams(url) {\n        var specialDiff = pg.re.specialdiff.exec(url);\n        if (specialDiff) {\n            var split = specialDiff[1].split(\"/\");\n            if (split.length == 1) return {\n                oldid: split[0],\n                diff: \"prev\"\n            };\n            else if (split.length == 2) return {\n                oldid: split[0],\n                diff: split[1]\n            };\n        }\n        var ret = {};\n        if (url.indexOf(\"?\") == -1) {\n            return ret;\n        }\n        url = url.split(\"#\")[0];\n        var s = url.split(\"?\").slice(1).join();\n        var t = s.split(\"&\");\n        for (var i = 0; i < t.length; ++i) {\n            var z = t[i].split(\"=\");\n            z.push(null);\n            ret[z[0]] = z[1];\n        }\n        if (ret.diff && typeof ret.oldid === \"undefined\") {\n            ret.oldid = \"prev\";\n        }\n        if (ret.oldid && (ret.oldid === \"prev\" || ret.oldid === \"next\" || ret.oldid === \"cur\")) {\n            var helper = ret.diff;\n            ret.diff = ret.oldid;\n            ret.oldid = helper;\n        }\n        return ret;\n    }\n\n    function myDecodeURI(str) {\n        var ret;\n        try {\n            ret = decodeURI(str.toString());\n        } catch (summat) {\n            return str;\n        }\n        for (var i = 0; i < pg.misc.decodeExtras.length; ++i) {\n            var from = pg.misc.decodeExtras[i].from;\n            var to = pg.misc.decodeExtras[i].to;\n            ret = ret.split(from).join(to);\n        }\n        return ret;\n    }\n\n    function safeDecodeURI(str) {\n        var ret = myDecodeURI(str);\n        return ret || str;\n    }\n\n    function isDisambig(data, article) {\n        if (!getValueOf(\"popupAllDabsStubs\") && article.namespace()) {\n            return false;\n        }\n        return !article.isTalkPage() && pg.re.disambig.test(data);\n    }\n\n    function stubCount(data, article) {\n        if (!getValueOf(\"popupAllDabsStubs\") && article.namespace()) {\n            return false;\n        }\n        var sectStub = 0;\n        var realStub = 0;\n        if (pg.re.stub.test(data)) {\n            var s = data.parenSplit(pg.re.stub);\n            for (var i = 1; i < s.length; i = i + 2) {\n                if (s[i]) {\n                    ++sectStub;\n                } else {\n                    ++realStub;\n                }\n            }\n        }\n        return {\n            real: realStub,\n            sect: sectStub\n        };\n    }\n\n    function isValidImageName(str) {\n        return str.indexOf(\"{\") == -1;\n    }\n\n    function isInStrippableNamespace(article) {\n        return article.namespaceId() !== 0;\n    }\n\n    function isInMainNamespace(article) {\n        return article.namespaceId() === 0;\n    }\n\n    function anchorContainsImage(a) {\n        if (a === null) {\n            return false;\n        }\n        var kids = a.childNodes;\n        for (var i = 0; i < kids.length; ++i) {\n            if (kids[i].nodeName == \"IMG\") {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function isPopupLink(a) {\n        if (!markNopopupSpanLinks.done) {\n            markNopopupSpanLinks();\n        }\n        if (a.inNopopupSpan) {\n            return false;\n        }\n        if (a.onmousedown || a.getAttribute(\"nopopup\")) {\n            return false;\n        }\n        var h = a.href;\n        if (h === document.location.href + \"#\") {\n            return false;\n        }\n        if (!pg.re.basenames.test(h)) {\n            return false;\n        }\n        if (!pg.re.urlNoPopup.test(h)) {\n            return true;\n        }\n        return (pg.re.email.test(h) || pg.re.contribs.test(h) || pg.re.backlinks.test(h) || pg.re.specialdiff.test(h)) && h.indexOf(\"&limit=\") == -1;\n    }\n\n    function markNopopupSpanLinks() {\n        if (!getValueOf(\"popupOnlyArticleLinks\")) fixVectorMenuPopups();\n        var s = $(\".nopopups\").toArray();\n        for (var i = 0; i < s.length; ++i) {\n            var as = s[i].getElementsByTagName(\"a\");\n            for (var j = 0; j < as.length; ++j) {\n                as[j].inNopopupSpan = true;\n            }\n        }\n        markNopopupSpanLinks.done = true;\n    }\n\n    function fixVectorMenuPopups() {\n        $(\"div.vectorMenu h3:first a:first\").prop(\"inNopopupSpan\", true);\n    }\n\n    function getPageWithCaching(url, onComplete, owner) {\n        log(\"getPageWithCaching, url=\" + url);\n        var i = findInPageCache(url);\n        var d;\n        if (i > -1) {\n            d = fakeDownload(url, owner.idNumber, onComplete, pg.cache.pages[i].data, pg.cache.pages[i].lastModified, owner);\n        } else {\n            d = getPage(url, onComplete, owner);\n            if (d && owner && owner.addDownload) {\n                owner.addDownload(d);\n                d.owner = owner;\n            }\n        }\n    }\n\n    function getPage(url, onComplete, owner) {\n        log(\"getPage\");\n        var callback = function(d) {\n            if (!d.aborted) {\n                addPageToCache(d);\n                onComplete(d);\n            }\n        };\n        return startDownload(url, owner.idNumber, callback);\n    }\n\n    function findInPageCache(url) {\n        for (var i = 0; i < pg.cache.pages.length; ++i) {\n            if (url == pg.cache.pages[i].url) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    function addPageToCache(download) {\n        log(\"addPageToCache \" + download.url);\n        var page = {\n            url: download.url,\n            data: download.data,\n            lastModified: download.lastModified\n        };\n        return pg.cache.pages.push(page);\n    }\n    if (String(\"abc\".split(/(b)/)) != \"a,b,c\") {\n        String.prototype.parenSplit = function(re) {\n            re = nonGlobalRegex(re);\n            var s = this;\n            var m = re.exec(s);\n            var ret = [];\n            while (m && s) {\n                for (var i = 0; i < m.length; ++i) {\n                    if (typeof m[i] == \"undefined\") m[i] = \"\";\n                }\n                ret.push(s.substring(0, m.index));\n                ret = ret.concat(m.slice(1));\n                s = s.substring(m.index + m[0].length);\n                m = re.exec(s);\n            }\n            ret.push(s);\n            return ret;\n        };\n    } else {\n        String.prototype.parenSplit = function(re) {\n            return this.split(re);\n        };\n        String.prototype.parenSplit.isNative = true;\n    }\n\n    function nonGlobalRegex(re) {\n        var s = re.toString();\n        var flags = \"\";\n        for (var j = s.length; s.charAt(j) != \"/\"; --j) {\n            if (s.charAt(j) != \"g\") {\n                flags += s.charAt(j);\n            }\n        }\n        var t = s.substring(1, j);\n        return RegExp(t, flags);\n    }\n\n    function getJsObj(json) {\n        try {\n            var json_ret = JSON.parse(json);\n            if (json_ret.warnings) {\n                for (var w = 0; w < json_ret.warnings.length; w++) {\n                    if (json_ret.warnings[w][\"*\"]) {\n                        log(json_ret.warnings[w][\"*\"]);\n                    } else {\n                        log(json_ret.warnings[w][\"warnings\"]);\n                    }\n                }\n            } else if (json_ret.error) {\n                errlog(json_ret.error.code + \": \" + json_ret.error.info);\n            }\n            return json_ret;\n        } catch (someError) {\n            errlog(\"Something went wrong with getJsObj, json=\" + json);\n            return 1;\n        }\n    }\n\n    function anyChild(obj) {\n        for (var p in obj) {\n            return obj[p];\n        }\n        return null;\n    }\n\n    function upcaseFirst(str) {\n        if (typeof str != typeof \"\" || str === \"\") return \"\";\n        return str.charAt(0).toUpperCase() + str.substring(1);\n    }\n\n    function findInArray(arr, foo) {\n        if (!arr || !arr.length) {\n            return -1;\n        }\n        var len = arr.length;\n        for (var i = 0; i < len; ++i) {\n            if (arr[i] == foo) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    function nextOne(array, value) {\n        var i = findInArray(array, value);\n        if (i < 0) {\n            return null;\n        }\n        return array[i + 1];\n    }\n\n    function literalizeRegex(str) {\n        return mw.RegExp.escape(str);\n    }\n    String.prototype.entify = function() {\n        return this.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\").split('\"').join(\"&quot;\");\n    };\n\n    function removeNulls(val) {\n        return val !== null;\n    }\n\n    function joinPath(list) {\n        return list.filter(removeNulls).join(\"/\");\n    }\n\n    function simplePrintf(str, subs) {\n        if (!str || !subs) {\n            return str;\n        }\n        var ret = [];\n        var s = str.parenSplit(/(%s|\\$[0-9]+)/);\n        var i = 0;\n        do {\n            ret.push(s.shift());\n            if (!s.length) {\n                break;\n            }\n            var cmd = s.shift();\n            if (cmd == \"%s\") {\n                if (i < subs.length) {\n                    ret.push(subs[i]);\n                } else {\n                    ret.push(cmd);\n                }\n                ++i;\n            } else {\n                var j = parseInt(cmd.replace(\"$\", \"\"), 10) - 1;\n                if (j > -1 && j < subs.length) {\n                    ret.push(subs[j]);\n                } else {\n                    ret.push(cmd);\n                }\n            }\n        } while (s.length > 0);\n        return ret.join(\"\");\n    }\n\n    function isString(x) {\n        return typeof x === \"string\" || x instanceof String;\n    }\n\n    function isNumber(x) {\n        return typeof x === \"number\" || x instanceof Number;\n    }\n\n    function isRegExp(x) {\n        return x instanceof RegExp;\n    }\n\n    function isArray(x) {\n        return x instanceof Array;\n    }\n\n    function isObject(x) {\n        return x instanceof Object;\n    }\n\n    function isFunction(x) {\n        return !isRegExp(x) && ($.isFunction(x) || x instanceof Function);\n    }\n\n    function repeatString(s, mult) {\n        var ret = \"\";\n        for (var i = 0; i < mult; ++i) {\n            ret += s;\n        }\n        return ret;\n    }\n\n    function zeroFill(s, min) {\n        min = min || 2;\n        var t = s.toString();\n        return repeatString(\"0\", min - t.length) + t;\n    }\n\n    function map(f, o) {\n        if (isArray(o)) {\n            return map_array(f, o);\n        }\n        return map_object(f, o);\n    }\n\n    function map_array(f, o) {\n        var ret = [];\n        for (var i = 0; i < o.length; ++i) {\n            ret.push(f(o[i]));\n        }\n        return ret;\n    }\n\n    function map_object(f, o) {\n        var ret = {};\n        for (var i in o) {\n            ret[o] = f(o[i]);\n        }\n        return ret;\n    }\n    pg.escapeQuotesHTML = function(text) {\n        return text.replace(/&/g, \"&amp;\").replace(/\"/g, \"&quot;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n    };\n\n    function retargetDab(newTarget, oldTarget, friendlyCurrentArticleName, titleToEdit) {\n        log(\"retargetDab: newTarget=\" + newTarget + \" oldTarget=\" + oldTarget);\n        return changeLinkTargetLink({\n            newTarget: newTarget,\n            text: newTarget.split(\" \").join(\"&nbsp;\"),\n            hint: tprintf(\"disambigHint\", [newTarget]),\n            summary: simplePrintf(getValueOf(\"popupFixDabsSummary\"), [friendlyCurrentArticleName, newTarget]),\n            clickButton: getValueOf(\"popupDabsAutoClick\"),\n            minor: true,\n            oldTarget: oldTarget,\n            watch: getValueOf(\"popupWatchDisambiggedPages\"),\n            title: titleToEdit\n        });\n    }\n\n    function listLinks(wikitext, oldTarget, titleToEdit) {\n        var reg = RegExp(\"\\\\[\\\\[([^|]*?) *(\\\\||\\\\]\\\\])\", \"gi\");\n        var ret = [];\n        var splitted = wikitext.parenSplit(reg);\n        var omitRegex = RegExp(\"^[a-z]*:|^[Ss]pecial:|^[Ii]mage|^[Cc]ategory\");\n        var friendlyCurrentArticleName = oldTarget.toString();\n        var wikPos = getValueOf(\"popupDabWiktionary\");\n        for (var i = 1; i < splitted.length; i = i + 3) {\n            if (typeof splitted[i] == typeof \"string\" && splitted[i].length > 0 && !omitRegex.test(splitted[i])) {\n                ret.push(retargetDab(splitted[i], oldTarget, friendlyCurrentArticleName, titleToEdit));\n            }\n        }\n        ret = rmDupesFromSortedList(ret.sort());\n        if (wikPos) {\n            var wikTarget = \"wiktionary:\" + friendlyCurrentArticleName.replace(RegExp(\"^(.+)\\\\s+[(][^)]+[)]\\\\s*$\"), \"$1\");\n            var meth;\n            if (wikPos.toLowerCase() == \"first\") {\n                meth = \"unshift\";\n            } else {\n                meth = \"push\";\n            }\n            ret[meth](retargetDab(wikTarget, oldTarget, friendlyCurrentArticleName, titleToEdit));\n        }\n        ret.push(changeLinkTargetLink({\n            newTarget: null,\n            text: popupString(\"remove this link\").split(\" \").join(\"&nbsp;\"),\n            hint: popupString(\"remove all links to this disambig page from this article\"),\n            clickButton: getValueOf(\"popupDabsAutoClick\"),\n            oldTarget: oldTarget,\n            summary: simplePrintf(getValueOf(\"popupRmDabLinkSummary\"), [friendlyCurrentArticleName]),\n            watch: getValueOf(\"popupWatchDisambiggedPages\"),\n            title: titleToEdit\n        }));\n        return ret;\n    }\n\n    function rmDupesFromSortedList(list) {\n        var ret = [];\n        for (var i = 0; i < list.length; ++i) {\n            if (ret.length === 0 || list[i] != ret[ret.length - 1]) {\n                ret.push(list[i]);\n            }\n        }\n        return ret;\n    }\n\n    function makeFixDab(data, navpop) {\n        var titleToEdit = navpop.parentPopup && navpop.parentPopup.article.toString();\n        var list = listLinks(data, navpop.originalArticle, titleToEdit);\n        if (list.length === 0) {\n            log(\"listLinks returned empty list\");\n            return null;\n        }\n        var html = \"<hr />\" + popupString(\"Click to disambiguate this link to:\") + \"<br>\";\n        html += list.join(\", \");\n        return html;\n    }\n\n    function makeFixDabs(wikiText, navpop) {\n        if (getValueOf(\"popupFixDabs\") && isDisambig(wikiText, navpop.article) && Title.fromURL(location.href).namespaceId() != pg.nsSpecialId && navpop.article.talkPage()) {\n            setPopupHTML(makeFixDab(wikiText, navpop), \"popupFixDab\", navpop.idNumber);\n        }\n    }\n\n    function popupRedlinkHTML(article) {\n        return changeLinkTargetLink({\n            newTarget: null,\n            text: popupString(\"remove this link\").split(\" \").join(\"&nbsp;\"),\n            hint: popupString(\"remove all links to this page from this article\"),\n            clickButton: getValueOf(\"popupRedlinkAutoClick\"),\n            oldTarget: article.toString(),\n            summary: simplePrintf(getValueOf(\"popupRedlinkSummary\"), [article.toString()])\n        });\n    }\n\n    function setPopupHTML(str, elementId, popupId, onSuccess, append) {\n        if (typeof popupId === \"undefined\") {\n            popupId = pg.idNumber;\n        }\n        var popupElement = document.getElementById(elementId + popupId);\n        if (popupElement) {\n            if (!append) {\n                popupElement.innerHTML = \"\";\n            }\n            if (isString(str)) {\n                popupElement.innerHTML += str;\n            } else {\n                popupElement.appendChild(str);\n            }\n            if (onSuccess) {\n                onSuccess();\n            }\n            setTimeout(checkPopupPosition, 100);\n            return true;\n        } else {\n            setTimeout(function() {\n                setPopupHTML(str, elementId, popupId, onSuccess);\n            }, 600);\n        }\n        return null;\n    }\n\n    function setPopupTrailer(str, id) {\n        return setPopupHTML(str, \"popupData\", id);\n    }\n\n    function fillEmptySpans(args) {\n        var redir = true;\n        var rcid;\n        if (typeof args != \"object\" || typeof args.redir == \"undefined\" || !args.redir) {\n            redir = false;\n        }\n        var a = args.navpopup.parentAnchor;\n        var article, hint = null,\n            oldid = null,\n            params = {};\n        if (redir && typeof args.redirTarget == typeof {}) {\n            article = args.redirTarget;\n        } else {\n            article = new Title().fromAnchor(a);\n            hint = a.originalTitle || article.hintValue();\n            params = parseParams(a.href);\n            oldid = getValueOf(\"popupHistoricalLinks\") ? params.oldid : null;\n            rcid = params.rcid;\n        }\n        var x = {\n            article: article,\n            hint: hint,\n            oldid: oldid,\n            rcid: rcid,\n            navpop: args.navpopup,\n            params: params\n        };\n        var structure = pg.structures[getValueOf(\"popupStructure\")];\n        if (typeof structure != \"object\") {\n            setPopupHTML(\"popupError\", \"Unknown structure (this should never happen): \" + pg.option.popupStructure, args.navpopup.idNumber);\n            return;\n        }\n        var spans = flatten(pg.misc.layout);\n        var numspans = spans.length;\n        var redirs = pg.misc.redirSpans;\n        for (var i = 0; i < numspans; ++i) {\n            var found = redirs && redirs.indexOf(spans[i]) !== -1;\n            if (found && !redir || !found && redir) {\n                continue;\n            }\n            var structurefn = structure[spans[i]];\n            var setfn = setPopupHTML;\n            if (getValueOf(\"popupActiveNavlinks\") && (spans[i].indexOf(\"popupTopLinks\") === 0 || spans[i].indexOf(\"popupRedirTopLinks\") === 0)) {\n                setfn = setPopupTipsAndHTML;\n            }\n            switch (typeof structurefn) {\n                case \"function\":\n                    log(\"running \" + spans[i] + \"({article:\" + x.article + \", hint:\" + x.hint + \", oldid: \" + x.oldid + \"})\");\n                    setfn(structurefn(x), spans[i], args.navpopup.idNumber);\n                    break;\n\n                case \"string\":\n                    setfn(structurefn, spans[i], args.navpopup.idNumber);\n                    break;\n\n                default:\n                    errlog(\"unknown thing with label \" + spans[i] + \" (span index was \" + i + \")\");\n                    break;\n            }\n        }\n    }\n\n    function flatten(list, start) {\n        var ret = [];\n        if (typeof start == \"undefined\") {\n            start = 0;\n        }\n        for (var i = start; i < list.length; ++i) {\n            if (typeof list[i] == typeof []) {\n                return ret.concat(flatten(list[i])).concat(flatten(list, i + 1));\n            } else {\n                ret.push(list[i]);\n            }\n        }\n        return ret;\n    }\n\n    function popupHTML(a) {\n        getValueOf(\"popupStructure\");\n        var structure = pg.structures[pg.option.popupStructure];\n        if (typeof structure != \"object\") {\n            pg.option.popupStructure = pg.optionDefault.popupStructure;\n            return popupHTML(a);\n        }\n        if (typeof structure.popupLayout != \"function\") {\n            return \"Bad layout\";\n        }\n        pg.misc.layout = structure.popupLayout();\n        if ($.isFunction(structure.popupRedirSpans)) {\n            pg.misc.redirSpans = structure.popupRedirSpans();\n        } else {\n            pg.misc.redirSpans = [];\n        }\n        return makeEmptySpans(pg.misc.layout, a.navpopup);\n    }\n\n    function makeEmptySpans(list, navpop) {\n        var ret = \"\";\n        for (var i = 0; i < list.length; ++i) {\n            if (typeof list[i] == typeof \"\") {\n                ret += emptySpanHTML(list[i], navpop.idNumber, \"div\");\n            } else if (typeof list[i] == typeof [] && list[i].length > 0) {\n                ret = ret.parenSplit(RegExp(\"(</[^>]*?>$)\")).join(makeEmptySpans(list[i], navpop));\n            } else if (typeof list[i] == typeof {} && list[i].nodeType) {\n                ret += emptySpanHTML(list[i].name, navpop.idNumber, list[i].nodeType);\n            }\n        }\n        return ret;\n    }\n\n    function emptySpanHTML(name, id, tag, classname) {\n        tag = tag || \"span\";\n        if (!classname) {\n            classname = emptySpanHTML.classAliases[name];\n        }\n        classname = classname || name;\n        if (name == getValueOf(\"popupDragHandle\")) {\n            classname += \" popupDragHandle\";\n        }\n        return simplePrintf('<%s id=\"%s\" class=\"%s\"></%s>', [tag, name + id, classname, tag]);\n    }\n    emptySpanHTML.classAliases = {\n        popupSecondPreview: \"popupPreview\"\n    };\n\n    function imageHTML(article, idNumber) {\n        return simplePrintf('<a id=\"popupImageLink$1\">' + '<img align=\"right\" valign=\"top\" id=\"popupImg$1\" style=\"display: none;\"></img>' + \"</a>\", [idNumber]);\n    }\n\n    function popTipsSoonFn(id, when, popData) {\n        if (!when) {\n            when = 250;\n        }\n        var popTips = function() {\n            setupTooltips(document.getElementById(id), false, true, popData);\n        };\n        return function() {\n            setTimeout(popTips, when, popData);\n        };\n    }\n\n    function setPopupTipsAndHTML(html, divname, idnumber, popData) {\n        setPopupHTML(html, divname, idnumber, getValueOf(\"popupSubpopups\") ? popTipsSoonFn(divname + idnumber, null, popData) : null);\n    }\n\n    function fuzzyCursorOffMenus(x, y, fuzz, parent) {\n        if (!parent) {\n            return null;\n        }\n        var uls = parent.getElementsByTagName(\"ul\");\n        for (var i = 0; i < uls.length; ++i) {\n            if (uls[i].className == \"popup_menu\") {\n                if (uls[i].offsetWidth > 0) return false;\n            }\n        }\n        return true;\n    }\n\n    function checkPopupPosition() {\n        if (pg.current.link && pg.current.link.navpopup) pg.current.link.navpopup.limitHorizontalPosition();\n    }\n\n    function mouseOutWikiLink() {\n        var a = this;\n        removeModifierKeyHandler(a);\n        if (a.navpopup === null || typeof a.navpopup === \"undefined\") return;\n        if (!a.navpopup.isVisible()) {\n            a.navpopup.banish();\n            return;\n        }\n        restoreTitle(a);\n        Navpopup.tracker.addHook(posCheckerHook(a.navpopup));\n    }\n\n    function posCheckerHook(navpop) {\n        return function() {\n            if (!navpop.isVisible()) {\n                return true;\n            }\n            if (Navpopup.tracker.dirty) {\n                return false;\n            }\n            var x = Navpopup.tracker.x,\n                y = Navpopup.tracker.y;\n            var mouseOverNavpop = navpop.isWithin(x, y, navpop.fuzz, navpop.mainDiv) || !fuzzyCursorOffMenus(x, y, navpop.fuzz, navpop.mainDiv);\n            var t = getValueOf(\"popupHideDelay\");\n            if (t) {\n                t = t * 1e3;\n            }\n            if (!t) {\n                if (!mouseOverNavpop) {\n                    if (navpop.parentAnchor) {\n                        restoreTitle(navpop.parentAnchor);\n                    }\n                    navpop.banish();\n                    return true;\n                }\n                return false;\n            }\n            var d = +new Date();\n            if (!navpop.mouseLeavingTime) {\n                navpop.mouseLeavingTime = d;\n                return false;\n            }\n            if (mouseOverNavpop) {\n                navpop.mouseLeavingTime = null;\n                return false;\n            }\n            if (d - navpop.mouseLeavingTime > t) {\n                navpop.mouseLeavingTime = null;\n                navpop.banish();\n                return true;\n            }\n            return false;\n        };\n    }\n\n    function runStopPopupTimer(navpop) {\n        if (!navpop.stopPopupTimer) {\n            navpop.stopPopupTimer = setInterval(posCheckerHook(navpop), 500);\n            navpop.addHook(function() {\n                clearInterval(navpop.stopPopupTimer);\n            }, \"hide\", \"before\");\n        }\n    }\n\n    function Previewmaker(wikiText, baseUrl, owner) {\n        this.originalData = wikiText;\n        this.baseUrl = baseUrl;\n        this.owner = owner;\n        this.maxCharacters = getValueOf(\"popupMaxPreviewCharacters\");\n        this.maxSentences = getValueOf(\"popupMaxPreviewSentences\");\n        this.setData();\n    }\n    Previewmaker.prototype.setData = function() {\n        var maxSize = Math.max(1e4, 2 * this.maxCharacters);\n        this.data = this.originalData.substring(0, maxSize);\n    };\n    Previewmaker.prototype.killComments = function() {\n        this.data = this.data.replace(RegExp(\"^<!--[^$]*?-->\\\\n|\\\\n<!--[^$]*?-->(?=\\\\n)|<!--[^$]*?-->\", \"g\"), \"\");\n    };\n    Previewmaker.prototype.killDivs = function() {\n        this.data = this.data.replace(RegExp(\"< *div[^>]* *>[\\\\s\\\\S]*?< */ *div *>\", \"gi\"), \"\");\n    };\n    Previewmaker.prototype.killGalleries = function() {\n        this.data = this.data.replace(RegExp(\"< *gallery[^>]* *>[\\\\s\\\\S]*?< */ *gallery *>\", \"gi\"), \"\");\n    };\n    Previewmaker.prototype.kill = function(opening, closing, subopening, subclosing, repl) {\n        var oldk = this.data;\n        var k = this.killStuff(this.data, opening, closing, subopening, subclosing, repl);\n        while (k.length < oldk.length) {\n            oldk = k;\n            k = this.killStuff(k, opening, closing, subopening, subclosing, repl);\n        }\n        this.data = k;\n    };\n    Previewmaker.prototype.killStuff = function(txt, opening, closing, subopening, subclosing, repl) {\n        var op = this.makeRegexp(opening);\n        var cl = this.makeRegexp(closing, \"^\");\n        var sb = subopening ? this.makeRegexp(subopening, \"^\") : null;\n        var sc = subclosing ? this.makeRegexp(subclosing, \"^\") : cl;\n        if (!op || !cl) {\n            alert(\"Navigation Popups error: op or cl is null! something is wrong.\");\n            return;\n        }\n        if (!op.test(txt)) {\n            return txt;\n        }\n        var ret = \"\";\n        var opResult = op.exec(txt);\n        ret = txt.substring(0, opResult.index);\n        txt = txt.substring(opResult.index + opResult[0].length);\n        var depth = 1;\n        while (txt.length > 0) {\n            var removal = 0;\n            if (depth == 1 && cl.test(txt)) {\n                depth--;\n                removal = cl.exec(txt)[0].length;\n            } else if (depth > 1 && sc.test(txt)) {\n                depth--;\n                removal = sc.exec(txt)[0].length;\n            } else if (sb && sb.test(txt)) {\n                depth++;\n                removal = sb.exec(txt)[0].length;\n            }\n            if (!removal) {\n                removal = 1;\n            }\n            txt = txt.substring(removal);\n            if (depth === 0) {\n                break;\n            }\n        }\n        return ret + (repl || \"\") + txt;\n    };\n    Previewmaker.prototype.makeRegexp = function(x, prefix, suffix) {\n        prefix = prefix || \"\";\n        suffix = suffix || \"\";\n        var reStr = \"\";\n        var flags = \"\";\n        if (isString(x)) {\n            reStr = prefix + literalizeRegex(x) + suffix;\n        } else if (isRegExp(x)) {\n            var s = x.toString().substring(1);\n            var sp = s.split(\"/\");\n            flags = sp[sp.length - 1];\n            sp[sp.length - 1] = \"\";\n            s = sp.join(\"/\");\n            s = s.substring(0, s.length - 1);\n            reStr = prefix + s + suffix;\n        } else {\n            log(\"makeRegexp failed\");\n        }\n        log(\"makeRegexp: got reStr=\" + reStr + \", flags=\" + flags);\n        return RegExp(reStr, flags);\n    };\n    Previewmaker.prototype.killBoxTemplates = function() {\n        this.kill(RegExp(\"[{][{][^{}\\\\s|]*?(float|box)[_ ](begin|start)\", \"i\"), /[}][}]\\s*/, \"{{\");\n        this.kill(RegExp(\"[{][{][^{}\\\\s|]*?(infobox|elementbox|frame)[_ ]\", \"i\"), /[}][}]\\s*/, \"{{\");\n    };\n    Previewmaker.prototype.killTemplates = function() {\n        this.kill(\"{{\", \"}}\", \"{\", \"}\", \" \");\n    };\n    Previewmaker.prototype.killTables = function() {\n        this.kill(\"{|\", /[|]}\\s*/, \"{|\");\n        this.kill(/<table.*?>/i, /<\\/table.*?>/i, /<table.*?>/i);\n        this.data = this.data.replace(RegExp(\"^[|].*$\", \"mg\"), \"\");\n    };\n    Previewmaker.prototype.killImages = function() {\n        var forbiddenNamespaceAliases = [];\n        jQuery.each(mw.config.get(\"wgNamespaceIds\"), function(_localizedNamespaceLc, _namespaceId) {\n            if (_namespaceId != pg.nsImageId && _namespaceId != pg.nsCategoryId) return;\n            forbiddenNamespaceAliases.push(_localizedNamespaceLc.split(\" \").join(\"[ _]\"));\n        });\n        this.kill(RegExp(\"[[][[]\\\\s*(\" + forbiddenNamespaceAliases.join(\"|\") + \")\\\\s*:\", \"i\"), /\\]\\]\\s*/, \"[\", \"]\");\n    };\n    Previewmaker.prototype.killHTML = function() {\n        this.kill(/<ref\\b[^\\/>]*?>/i, /<\\/ref>/i);\n        this.data = this.data.replace(RegExp(\"(^|\\\\n) *<.*\", \"g\"), \"\\n\");\n        var splitted = this.data.parenSplit(/(<[\\w\\W]*?(?:>|$|(?=<)))/);\n        var len = splitted.length;\n        for (var i = 1; i < len; i = i + 2) {\n            switch (splitted[i]) {\n                case \"<nowiki>\":\n                case \"</nowiki>\":\n                case \"<blockquote>\":\n                case \"</blockquote>\":\n                    break;\n\n                default:\n                    splitted[i] = \"\";\n            }\n        }\n        this.data = splitted.join(\"\");\n    };\n    Previewmaker.prototype.killChunks = function() {\n        var italicChunkRegex = new RegExp(\"((^|\\\\n)\\\\s*:*\\\\s*''[^']([^']|'''|'[^']){20}(.|\\\\n[^\\\\n])*''[.!?\\\\s]*\\\\n)+\", \"g\");\n        this.data = this.data.replace(italicChunkRegex, \"\\n\");\n    };\n    Previewmaker.prototype.mopup = function() {\n        this.data = this.data.replace(RegExp(\"^-{4,}\", \"mg\"), \"\");\n        this.data = this.data.replace(RegExp(\"(^|\\\\n) *:[^\\\\n]*\", \"g\"), \"\");\n        this.data = this.data.replace(RegExp(\"^__[A-Z_]*__ *$\", \"gmi\"), \"\");\n    };\n    Previewmaker.prototype.firstBit = function() {\n        var d = this.data;\n        if (getValueOf(\"popupPreviewCutHeadings\")) {\n            this.data = this.data.replace(RegExp(\"\\\\s*(==+[^=]*==+)\\\\s*\", \"g\"), \"\\n\\n$1 \");\n            this.data = this.data.replace(RegExp(\"([:;]) *\\\\n{2,}\", \"g\"), \"$1\\n\");\n            this.data = this.data.replace(RegExp(\"^[\\\\s\\\\n]*\"), \"\");\n            var stuff = RegExp(\"^([^\\\\n]|\\\\n[^\\\\n\\\\s])*\").exec(this.data);\n            if (stuff) {\n                d = stuff[0];\n            }\n            if (!getValueOf(\"popupPreviewFirstParOnly\")) {\n                d = this.data;\n            }\n            d = d.replace(RegExp(\"(==+[^=]*==+)\\\\s*\", \"g\"), \"$1\\n\\n\");\n        }\n        d = d.parenSplit(RegExp('([!?.]+[\"' + \"'\" + \"]*\\\\s)\", \"g\"));\n        d[0] = d[0].replace(RegExp(\"^\\\\s*\"), \"\");\n        var notSentenceEnds = RegExp(\"([^.][a-z][.] *[a-z]|etc|sic|Dr|Mr|Mrs|Ms|St|no|op|cit|\\\\[[^\\\\]]*|\\\\s[A-Zvclm])$\", \"i\");\n        d = this.fixSentenceEnds(d, notSentenceEnds);\n        this.fullLength = d.join(\"\").length;\n        var n = this.maxSentences;\n        var dd = this.firstSentences(d, n);\n        do {\n            dd = this.firstSentences(d, n);\n            --n;\n        } while (dd.length > this.maxCharacters && n !== 0);\n        this.data = dd;\n    };\n    Previewmaker.prototype.fixSentenceEnds = function(strs, reg) {\n        for (var i = 0; i < strs.length - 2; ++i) {\n            if (reg.test(strs[i])) {\n                var a = [];\n                for (var j = 0; j < strs.length; ++j) {\n                    if (j < i) a[j] = strs[j];\n                    if (j == i) a[i] = strs[i] + strs[i + 1] + strs[i + 2];\n                    if (j > i + 2) a[j - 2] = strs[j];\n                }\n                return this.fixSentenceEnds(a, reg);\n            }\n        }\n        return strs;\n    };\n    Previewmaker.prototype.firstSentences = function(strs, howmany) {\n        var t = strs.slice(0, 2 * howmany);\n        return t.join(\"\");\n    };\n    Previewmaker.prototype.killBadWhitespace = function() {\n        this.data = this.data.replace(RegExp(\"^ *'+ *$\", \"gm\"), \"\");\n    };\n    Previewmaker.prototype.makePreview = function() {\n        if (this.owner.article.namespaceId() != pg.nsTemplateId && this.owner.article.namespaceId() != pg.nsImageId) {\n            this.killComments();\n            this.killDivs();\n            this.killGalleries();\n            this.killBoxTemplates();\n            if (getValueOf(\"popupPreviewKillTemplates\")) {\n                this.killTemplates();\n            } else {\n                this.killMultilineTemplates();\n            }\n            this.killTables();\n            this.killImages();\n            this.killHTML();\n            this.killChunks();\n            this.mopup();\n            this.firstBit();\n            this.killBadWhitespace();\n        } else {\n            this.killHTML();\n        }\n        this.html = wiki2html(this.data, this.baseUrl);\n        this.fixHTML();\n        this.stripLongTemplates();\n    };\n    Previewmaker.prototype.esWiki2HtmlPart = function(data) {\n        var reLinks = /(?:\\[\\[([^|\\]]*)(?:\\|([^|\\]]*))*]]([a-z]*))/gi;\n        reLinks.lastIndex = 0;\n        var match;\n        var result = \"\";\n        var postfixIndex = 0;\n        while (match = reLinks.exec(data)) {\n            result += pg.escapeQuotesHTML(data.substring(postfixIndex, match.index)) + '<a href=\"' + Insta.conf.paths.articles + pg.escapeQuotesHTML(match[1]) + '\">' + pg.escapeQuotesHTML((match[2] ? match[2] : match[1]) + match[3]) + \"</a>\";\n            postfixIndex = reLinks.lastIndex;\n        }\n        result += pg.escapeQuotesHTML(data.substring(postfixIndex));\n        return result;\n    };\n    Previewmaker.prototype.editSummaryPreview = function() {\n        var reAes = /\\/\\* *(.*?) *\\*\\//g;\n        reAes.lastIndex = 0;\n        var match;\n        match = reAes.exec(this.data);\n        if (match) {\n            var prefix = this.data.substring(0, match.index - 1);\n            var section = match[1];\n            var postfix = this.data.substring(reAes.lastIndex);\n            var start = \"<span class='autocomment'>\";\n            var end = \"</span>\";\n            if (prefix.length > 0) start = this.esWiki2HtmlPart(prefix) + \" \" + start + \"- \";\n            if (postfix.length > 0) end = \": \" + end + this.esWiki2HtmlPart(postfix);\n            var t = new Title().fromURL(this.baseUrl);\n            t.anchorFromUtf(section);\n            var sectionLink = Insta.conf.paths.articles + pg.escapeQuotesHTML(t.toString(true)) + \"#\" + pg.escapeQuotesHTML(t.anchor);\n            return start + '<a href=\"' + sectionLink + '\">&rarr;</a> ' + pg.escapeQuotesHTML(section) + end;\n        }\n        return this.esWiki2HtmlPart(this.data);\n    };\n\n    function previewSteps(txt) {\n        try {\n            txt = txt || document.editform.wpTextbox1.value;\n        } catch (err) {\n            if (pg.cache.pages.length > 0) {\n                txt = pg.cache.pages[pg.cache.pages.length - 1].data;\n            } else {\n                alert(\"provide text or use an edit page\");\n            }\n        }\n        txt = txt.substring(0, 1e4);\n        var base = pg.wiki.articlebase + Title.fromURL(document.location.href).urlString();\n        var p = new Previewmaker(txt, base, pg.current.link.navpopup);\n        if (this.owner.article.namespaceId() != pg.nsTemplateId) {\n            p.killComments();\n            if (!confirm(\"done killComments(). Continue?\\n---\\n\" + p.data)) {\n                return;\n            }\n            p.killDivs();\n            if (!confirm(\"done killDivs(). Continue?\\n---\\n\" + p.data)) {\n                return;\n            }\n            p.killGalleries();\n            if (!confirm(\"done killGalleries(). Continue?\\n---\\n\" + p.data)) {\n                return;\n            }\n            p.killBoxTemplates();\n            if (!confirm(\"done killBoxTemplates(). Continue?\\n---\\n\" + p.data)) {\n                return;\n            }\n            if (getValueOf(\"popupPreviewKillTemplates\")) {\n                p.killTemplates();\n                if (!confirm(\"done killTemplates(). Continue?\\n---\\n\" + p.data)) {\n                    return;\n                }\n            } else {\n                p.killMultilineTemplates();\n                if (!confirm(\"done killMultilineTemplates(). Continue?\\n---\\n\" + p.data)) {\n                    return;\n                }\n            }\n            p.killTables();\n            if (!confirm(\"done killTables(). Continue?\\n---\\n\" + p.data)) {\n                return;\n            }\n            p.killImages();\n            if (!confirm(\"done killImages(). Continue?\\n---\\n\" + p.data)) {\n                return;\n            }\n            p.killHTML();\n            if (!confirm(\"done killHTML(). Continue?\\n---\\n\" + p.data)) {\n                return;\n            }\n            p.killChunks();\n            if (!confirm(\"done killChunks(). Continue?\\n---\\n\" + p.data)) {\n                return;\n            }\n            p.mopup();\n            if (!confirm(\"done mopup(). Continue?\\n---\\n\" + p.data)) {\n                return;\n            }\n            p.firstBit();\n            if (!confirm(\"done firstBit(). Continue?\\n---\\n\" + p.data)) {\n                return;\n            }\n            p.killBadWhitespace();\n            if (!confirm(\"done killBadWhitespace(). Continue?\\n---\\n\" + p.data)) {\n                return;\n            }\n        }\n        p.html = wiki2html(p.data, base);\n        p.fixHTML();\n        if (!confirm(\"done fixHTML(). Continue?\\n---\\n\" + p.html)) {\n            return;\n        }\n        p.stripLongTemplates();\n        if (!confirm(\"done stripLongTemplates(). Continue?\\n---\\n\" + p.html)) {\n            return;\n        }\n        alert(\"finished preview - end result follows.\\n---\\n\" + p.html);\n    }\n    Previewmaker.prototype.fixHTML = function() {\n        if (!this.html) return;\n        var ret = this.html;\n        ret = ret.replace(RegExp('(<a href=\"' + pg.wiki.articlePath + '/[^\"]*)[?](.*?\")', \"g\"), \"$1%3F$2\");\n        ret = ret.replace(RegExp(\"(<a href='\" + pg.wiki.articlePath + \"/[^']*)[?](.*?')\", \"g\"), \"$1%3F$2\");\n        this.html = ret;\n    };\n    Previewmaker.prototype.showPreview = function() {\n        this.makePreview();\n        if (typeof this.html != typeof \"\") return;\n        if (RegExp(\"^\\\\s*$\").test(this.html)) return;\n        setPopupHTML(\"<hr />\", \"popupPrePreviewSep\", this.owner.idNumber);\n        setPopupTipsAndHTML(this.html, \"popupPreview\", this.owner.idNumber, {\n            owner: this.owner\n        });\n        var more = this.fullLength > this.data.length ? this.moreLink() : \"\";\n        setPopupHTML(more, \"popupPreviewMore\", this.owner.idNumber);\n    };\n    Previewmaker.prototype.moreLink = function() {\n        var a = document.createElement(\"a\");\n        a.className = \"popupMoreLink\";\n        a.innerHTML = popupString(\"more...\");\n        var savedThis = this;\n        a.onclick = function() {\n            savedThis.maxCharacters += 2e3;\n            savedThis.maxSentences += 20;\n            savedThis.setData();\n            savedThis.showPreview();\n        };\n        return a;\n    };\n    Previewmaker.prototype.stripLongTemplates = function() {\n        this.html = this.html.replace(RegExp(\"^.{0,1000}[{][{][^}]*?(<(p|br)( /)?>\\\\s*){2,}([^{}]*?[}][}])?\", \"gi\"), \"\");\n        this.html = this.html.split(\"\\n\").join(\" \");\n        this.html = this.html.replace(RegExp(\"[{][{][^}]*<pre>[^}]*[}][}]\", \"gi\"), \"\");\n    };\n    Previewmaker.prototype.killMultilineTemplates = function() {\n        this.kill(\"{{{\", \"}}}\");\n        this.kill(RegExp(\"\\\\s*[{][{][^{}]*\\\\n\"), \"}}\", \"{{\");\n    };\n\n    function loadAPIPreview(queryType, article, navpop) {\n        var art = new Title(article).urlString();\n        var url = pg.wiki.apiwikibase + \"?format=json&formatversion=2&action=query&\";\n        var htmlGenerator = function() {\n            alert(\"invalid html generator\");\n        };\n        var usernameart = \"\";\n        switch (queryType) {\n            case \"history\":\n                url += \"titles=\" + art + \"&prop=revisions&rvlimit=\" + getValueOf(\"popupHistoryPreviewLimit\");\n                htmlGenerator = APIhistoryPreviewHTML;\n                break;\n\n            case \"category\":\n                url += \"list=categorymembers&cmtitle=\" + art;\n                htmlGenerator = APIcategoryPreviewHTML;\n                break;\n\n            case \"userinfo\":\n                var username = new Title(article).userName();\n                usernameart = encodeURIComponent(username);\n                if (pg.re.ipUser.test(username)) {\n                    url += \"list=blocks&bkprop=range&bkip=\" + usernameart;\n                } else {\n                    url += \"list=users|usercontribs&usprop=blockinfo|groups|editcount|registration|gender&ususers=\" + usernameart + \"&meta=globaluserinfo&guiprop=groups|unattached&guiuser=\" + usernameart + \"&uclimit=1&ucprop=timestamp&ucuser=\" + usernameart;\n                }\n                htmlGenerator = APIuserInfoPreviewHTML;\n                break;\n\n            case \"contribs\":\n                usernameart = encodeURIComponent(new Title(article).userName());\n                url += \"list=usercontribs&ucuser=\" + usernameart + \"&uclimit=\" + getValueOf(\"popupContribsPreviewLimit\");\n                htmlGenerator = APIcontribsPreviewHTML;\n                break;\n\n            case \"imagepagepreview\":\n                var trail = \"\";\n                if (getValueOf(\"popupImageLinks\")) {\n                    trail = \"&list=imageusage&iutitle=\" + art;\n                }\n                url += \"titles=\" + art + \"&prop=revisions|imageinfo&rvprop=content\" + trail;\n                htmlGenerator = APIimagepagePreviewHTML;\n                break;\n\n            case \"backlinks\":\n                url += \"list=backlinks&bltitle=\" + art;\n                htmlGenerator = APIbacklinksPreviewHTML;\n                break;\n\n            case \"revision\":\n                if (article.oldid) {\n                    url += \"revids=\" + article.oldid;\n                } else {\n                    url += \"titles=\" + article.removeAnchor().urlString();\n                }\n                url += \"&prop=revisions|pageprops|info|images|categories&rvprop=ids|timestamp|flags|comment|user|content&cllimit=max&imlimit=max\";\n                htmlGenerator = APIrevisionPreviewHTML;\n                break;\n        }\n        pendingNavpopTask(navpop);\n        var callback = function(d) {\n            log(\"callback of API functions was hit\");\n            showAPIPreview(queryType, htmlGenerator(article, d, navpop), navpop.idNumber, navpop, d);\n        };\n        var go = function() {\n            getPageWithCaching(url, callback, navpop);\n            return true;\n        };\n        if (navpop.visible || !getValueOf(\"popupLazyDownloads\")) {\n            go();\n        } else {\n            navpop.addHook(go, \"unhide\", \"before\", \"DOWNLOAD_\" + queryType + \"_QUERY_DATA\");\n        }\n    }\n\n    function linkList(list) {\n        list.sort(function(x, y) {\n            return x == y ? 0 : x < y ? -1 : 1;\n        });\n        var buf = [];\n        for (var i = 0; i < list.length; ++i) {\n            buf.push(wikiLink({\n                article: new Title(list[i]),\n                text: list[i].split(\" \").join(\"&nbsp;\"),\n                action: \"view\"\n            }));\n        }\n        return buf.join(\", \");\n    }\n\n    function getTimeOffset() {\n        var tz = mw.user.options.get(\"timecorrection\");\n        if (tz) {\n            if (tz.indexOf(\"|\") > -1) {\n                return parseInt(tz.split(\"|\")[1], 10);\n            } else if (tz.indexOf(\":\") > -1) {\n                return parseInt(tz, 10) * 60 + parseInt(tz.split(\":\")[1], 10);\n            }\n        }\n        return 0;\n    }\n\n    function editPreviewTable(article, h, reallyContribs, timeOffset) {\n        var html = [\"<table>\"];\n        var day = null;\n        var curart = article;\n        var page = null;\n        var makeFirstColumnLinks;\n        if (reallyContribs) {\n            makeFirstColumnLinks = function(currentRevision) {\n                var result = \"(\";\n                result += '<a href=\"' + pg.wiki.titlebase + new Title(currentRevision.title).urlString() + \"&diff=prev\" + \"&oldid=\" + currentRevision.revid + '\">' + popupString(\"diff\") + \"</a>\";\n                result += \"&nbsp;|&nbsp;\";\n                result += '<a href=\"' + pg.wiki.titlebase + new Title(currentRevision.title).urlString() + '&action=history\">' + popupString(\"hist\") + \"</a>\";\n                result += \")\";\n                return result;\n            };\n        } else {\n            var firstRevid = h[0].revid;\n            makeFirstColumnLinks = function(currentRevision) {\n                var result = \"(\";\n                result += '<a href=\"' + pg.wiki.titlebase + new Title(curart).urlString() + \"&diff=\" + firstRevid + \"&oldid=\" + currentRevision.revid + '\">' + popupString(\"cur\") + \"</a>\";\n                result += \"&nbsp;|&nbsp;\";\n                result += '<a href=\"' + pg.wiki.titlebase + new Title(curart).urlString() + \"&diff=prev&oldid=\" + currentRevision.revid + '\">' + popupString(\"last\") + \"</a>\";\n                result += \")\";\n                return result;\n            };\n        }\n        for (var i = 0; i < h.length; ++i) {\n            if (reallyContribs) {\n                page = h[i].title;\n                curart = new Title(page);\n            }\n            var minor = h[i].minor ? \"<b>m </b>\" : \"\";\n            var editDate = adjustDate(getDateFromTimestamp(h[i].timestamp), timeOffset);\n            var thisDay = dayFormat(editDate);\n            var thisTime = timeFormat(editDate);\n            if (thisDay == day) {\n                thisDay = \"\";\n            } else {\n                day = thisDay;\n            }\n            if (thisDay) {\n                html.push('<tr><td colspan=3><span class=\"popup_history_date\">' + thisDay + \"</span></td></tr>\");\n            }\n            html.push('<tr class=\"popup_history_row_' + (i % 2 ? \"odd\" : \"even\") + '\">');\n            html.push(\"<td>\" + makeFirstColumnLinks(h[i]) + \"</td>\");\n            html.push(\"<td>\" + '<a href=\"' + pg.wiki.titlebase + new Title(curart).urlString() + \"&oldid=\" + h[i].revid + '\">' + thisTime + \"</a></td>\");\n            var col3url = \"\",\n                col3txt = \"\";\n            if (!reallyContribs) {\n                var user = h[i].user;\n                if (!h[i].userhidden) {\n                    if (pg.re.ipUser.test(user)) {\n                        col3url = pg.wiki.titlebase + mw.config.get(\"wgFormattedNamespaces\")[pg.nsSpecialId] + \":Contributions&target=\" + new Title(user).urlString();\n                    } else {\n                        col3url = pg.wiki.titlebase + mw.config.get(\"wgFormattedNamespaces\")[pg.nsUserId] + \":\" + new Title(user).urlString();\n                    }\n                    col3txt = pg.escapeQuotesHTML(user);\n                } else {\n                    col3url = getValueOf(\"popupRevDelUrl\");\n                    col3txt = pg.escapeQuotesHTML(popupString(\"revdel\"));\n                }\n            } else {\n                col3url = pg.wiki.titlebase + curart.urlString();\n                col3txt = pg.escapeQuotesHTML(page);\n            }\n            html.push(\"<td>\" + (reallyContribs ? minor : \"\") + '<a href=\"' + col3url + '\">' + col3txt + \"</a></td>\");\n            var comment = \"\";\n            var c = h[i].comment || h[i].content;\n            if (c) {\n                comment = new Previewmaker(c, new Title(curart).toUrl()).editSummaryPreview();\n            } else if (h[i].commenthidden) {\n                comment = popupString(\"revdel\");\n            }\n            html.push(\"<td>\" + (!reallyContribs ? minor : \"\") + comment + \"</td>\");\n            html.push(\"</tr>\");\n            html = [html.join(\"\")];\n        }\n        html.push(\"</table>\");\n        return html.join(\"\");\n    }\n\n    function getDateFromTimestamp(t) {\n        var s = t.split(/[^0-9]/);\n        switch (s.length) {\n            case 0:\n                return null;\n\n            case 1:\n                return new Date(s[0]);\n\n            case 2:\n                return new Date(s[0], s[1] - 1);\n\n            case 3:\n                return new Date(s[0], s[1] - 1, s[2]);\n\n            case 4:\n                return new Date(s[0], s[1] - 1, s[2], s[3]);\n\n            case 5:\n                return new Date(s[0], s[1] - 1, s[2], s[3], s[4]);\n\n            case 6:\n                return new Date(s[0], s[1] - 1, s[2], s[3], s[4], s[5]);\n\n            default:\n                return new Date(s[0], s[1] - 1, s[2], s[3], s[4], s[5], s[6]);\n        }\n    }\n\n    function adjustDate(d, offset) {\n        var o = offset * 60 * 1e3;\n        return new Date(+d + o);\n    }\n\n    function dayFormat(editDate, utc) {\n        if (utc) {\n            return map(zeroFill, [editDate.getUTCFullYear(), editDate.getUTCMonth() + 1, editDate.getUTCDate()]).join(\"-\");\n        }\n        return map(zeroFill, [editDate.getFullYear(), editDate.getMonth() + 1, editDate.getDate()]).join(\"-\");\n    }\n\n    function timeFormat(editDate, utc) {\n        if (utc) {\n            return map(zeroFill, [editDate.getUTCHours(), editDate.getUTCMinutes(), editDate.getUTCSeconds()]).join(\":\");\n        }\n        return map(zeroFill, [editDate.getHours(), editDate.getMinutes(), editDate.getSeconds()]).join(\":\");\n    }\n\n    function showAPIPreview(queryType, html, id, navpop, download) {\n        var target = \"popupPreview\";\n        completedNavpopTask(navpop);\n        switch (queryType) {\n            case \"imagelinks\":\n            case \"category\":\n                target = \"popupPostPreview\";\n                break;\n\n            case \"userinfo\":\n                target = \"popupUserData\";\n                break;\n\n            case \"revision\":\n                insertPreview(download);\n                return;\n        }\n        setPopupTipsAndHTML(html, target, id);\n    }\n\n    function APIrevisionPreviewHTML(article, download) {\n        try {\n            var jsObj = getJsObj(download.data);\n            var page = anyChild(jsObj.query.pages);\n            if (page.missing) {\n                download.owner = null;\n                return;\n            }\n            var content = page && page.revisions && page.revisions[0].contentmodel === \"wikitext\" ? page.revisions[0].content : null;\n            if (typeof content === \"string\") {\n                download.data = content;\n                download.lastModified = new Date(page.revisions[0].timestamp);\n            }\n        } catch (someError) {\n            return \"Revision preview failed :(\";\n        }\n    }\n\n    function APIbacklinksPreviewHTML(article, download) {\n        try {\n            var jsObj = getJsObj(download.data);\n            var list = jsObj.query.backlinks;\n            var html = [];\n            if (!list) {\n                return popupString(\"No backlinks found\");\n            }\n            for (var i = 0; i < list.length; i++) {\n                var t = new Title(list[i].title);\n                html.push('<a href=\"' + pg.wiki.titlebase + t.urlString() + '\">' + t + \"</a>\");\n            }\n            html = html.join(\", \");\n            if (jsObj[\"continue\"] && jsObj[\"continue\"].blcontinue) {\n                html += popupString(\" and more\");\n            }\n            return html;\n        } catch (someError) {\n            return \"backlinksPreviewHTML went wonky\";\n        }\n    }\n    pg.fn.APIsharedImagePagePreviewHTML = function APIsharedImagePagePreviewHTML(obj) {\n        log(\"APIsharedImagePagePreviewHTML\");\n        var popupid = obj.requestid;\n        if (obj.query && obj.query.pages) {\n            var page = anyChild(obj.query.pages);\n            var content = page && page.revisions && page.revisions[0].contentmodel === \"wikitext\" ? page.revisions[0].content : null;\n            if (typeof content === \"string\") {\n                var p = new Previewmaker(content, pg.current.link.navpopup.article, pg.current.link.navpopup);\n                p.makePreview();\n                setPopupHTML(p.html, \"popupSecondPreview\", popupid);\n            }\n        }\n    };\n\n    function APIimagepagePreviewHTML(article, download, navpop) {\n        try {\n            var jsObj = getJsObj(download.data);\n            var page = anyChild(jsObj.query.pages);\n            var content = page && page.revisions && page.revisions[0].contentmodel === \"wikitext\" ? page.revisions[0].content : null;\n            var ret = \"\";\n            var alt = \"\";\n            try {\n                alt = navpop.parentAnchor.childNodes[0].alt;\n            } catch (e) {}\n            if (alt) {\n                ret = ret + \"<hr /><b>\" + popupString(\"Alt text:\") + \"</b> \" + pg.escapeQuotesHTML(alt);\n            }\n            if (typeof content === \"string\") {\n                var p = prepPreviewmaker(content, article, navpop);\n                p.makePreview();\n                if (p.html) {\n                    ret += \"<hr />\" + p.html;\n                }\n                if (getValueOf(\"popupSummaryData\")) {\n                    var info = getPageInfo(content, download);\n                    log(info);\n                    setPopupTrailer(info, navpop.idNumber);\n                }\n            }\n            if (page && page.imagerepository == \"shared\") {\n                var art = new Title(article);\n                var encart = encodeURIComponent(\"File:\" + art.stripNamespace());\n                var shared_url = pg.wiki.apicommonsbase + \"?format=json&formatversion=2\" + \"&callback=pg.fn.APIsharedImagePagePreviewHTML\" + \"&requestid=\" + navpop.idNumber + \"&action=query&prop=revisions&rvprop=content&titles=\" + encart;\n                ret = ret + \"<hr />\" + popupString(\"Image from Commons\") + ': <a href=\"' + pg.wiki.commonsbase + \"?title=\" + encart + '\">' + popupString(\"Description page\") + \"</a>\";\n                mw.loader.load(shared_url);\n            }\n            showAPIPreview(\"imagelinks\", APIimagelinksPreviewHTML(article, download), navpop.idNumber, download);\n            return ret;\n        } catch (someError) {\n            return \"API imagepage preview failed :(\";\n        }\n    }\n\n    function APIimagelinksPreviewHTML(article, download) {\n        try {\n            var jsobj = getJsObj(download.data);\n            var list = jsobj.query.imageusage;\n            if (list) {\n                var ret = [];\n                for (var i = 0; i < list.length; i++) {\n                    ret.push(list[i].title);\n                }\n                if (ret.length === 0) {\n                    return popupString(\"No image links found\");\n                }\n                return \"<h2>\" + popupString(\"File links\") + \"</h2>\" + linkList(ret);\n            } else {\n                return popupString(\"No image links found\");\n            }\n        } catch (someError) {\n            return \"Image links preview generation failed :(\";\n        }\n    }\n\n    function APIcategoryPreviewHTML(article, download) {\n        try {\n            var jsobj = getJsObj(download.data);\n            var list = jsobj.query.categorymembers;\n            var ret = [];\n            for (var p = 0; p < list.length; p++) {\n                ret.push(list[p].title);\n            }\n            if (ret.length === 0) {\n                return popupString(\"Empty category\");\n            }\n            ret = \"<h2>\" + tprintf(\"Category members (%s shown)\", [ret.length]) + \"</h2>\" + linkList(ret);\n            if (jsobj[\"continue\"] && jsobj[\"continue\"].cmcontinue) {\n                ret += popupString(\" and more\");\n            }\n            return ret;\n        } catch (someError) {\n            return \"Category preview failed :(\";\n        }\n    }\n\n    function APIuserInfoPreviewHTML(article, download) {\n        var ret = [];\n        var queryobj = {};\n        try {\n            queryobj = getJsObj(download.data).query;\n        } catch (someError) {\n            return \"Userinfo preview failed :(\";\n        }\n        var user = anyChild(queryobj.users);\n        if (user) {\n            var globaluserinfo = queryobj.globaluserinfo;\n            if (user.invalid === \"\") {\n                ret.push(popupString(\"Invalid user\"));\n            } else if (user.missing === \"\") {\n                ret.push(popupString(\"Not a registered username\"));\n            }\n            if (user.blockedby) ret.push(\"<b>\" + popupString(\"BLOCKED\") + \"</b>\");\n            if (globaluserinfo && (\"locked\" in globaluserinfo || \"hidden\" in globaluserinfo)) {\n                var lockedSulAccountIsAttachedToThis = true;\n                for (var i = 0; globaluserinfo.unattached && i < globaluserinfo.unattached.length; i++) {\n                    if (globaluserinfo.unattached[i].wiki === mw.config.get(\"wgDBname\")) {\n                        lockedSulAccountIsAttachedToThis = false;\n                        break;\n                    }\n                }\n                if (lockedSulAccountIsAttachedToThis) {\n                    if (\"locked\" in globaluserinfo) ret.push(\"<b><i>\" + popupString(\"LOCKED\") + \"</i></b>\");\n                    if (\"hidden\" in globaluserinfo) ret.push(\"<b><i>\" + popupString(\"HIDDEN\") + \"</i></b>\");\n                }\n            }\n            if (getValueOf(\"popupShowGender\") && user.gender) {\n                switch (user.gender) {\n                    case \"male\":\n                        ret.push(popupString(\"\u2642\"));\n                        break;\n\n                    case \"female\":\n                        ret.push(popupString(\"\u2640\"));\n                        break;\n                }\n            }\n            if (user.groups) {\n                for (var j = 0; j < user.groups.length; j++) {\n                    var currentGroup = user.groups[j];\n                    if ([\"*\", \"user\", \"autoconfirmed\", \"extendedconfirmed\"].indexOf(currentGroup) === -1) {\n                        ret.push(pg.escapeQuotesHTML(user.groups[j]));\n                    }\n                }\n            }\n            if (globaluserinfo && globaluserinfo.groups) {\n                for (var k = 0; k < globaluserinfo.groups.length; k++) {\n                    ret.push(\"<i>\" + pg.escapeQuotesHTML(globaluserinfo.groups[k]) + \"</i>\");\n                }\n            }\n            if (user.registration) ret.push(pg.escapeQuotesHTML((user.editcount ? user.editcount : \"0\") + popupString(\" edits since: \") + (user.registration ? dayFormat(getDateFromTimestamp(user.registration)) : \"\")));\n        }\n        if (queryobj.usercontribs && queryobj.usercontribs.length) {\n            ret.push(popupString(\"last edit on \") + dayFormat(getDateFromTimestamp(queryobj.usercontribs[0].timestamp)));\n        }\n        if (queryobj.blocks) {\n            ret.push(popupString(\"IP user\"));\n            for (var l = 0; l < queryobj.blocks.length; l++) {\n                ret.push(\"<b>\" + popupString(queryobj.blocks[l].rangestart === queryobj.blocks[l].rangeend ? \"BLOCKED\" : \"RANGEBLOCKED\") + \"</b>\");\n            }\n        }\n        ret = \"<hr />\" + ret.join(\", \");\n        return ret;\n    }\n\n    function APIcontribsPreviewHTML(article, download, navpop) {\n        return APIhistoryPreviewHTML(article, download, navpop, true);\n    }\n\n    function APIhistoryPreviewHTML(article, download, navpop, reallyContribs) {\n        try {\n            var jsobj = getJsObj(download.data);\n            var edits = [];\n            if (reallyContribs) {\n                edits = jsobj.query.usercontribs;\n            } else {\n                edits = anyChild(jsobj.query.pages).revisions;\n            }\n            var ret = editPreviewTable(article, edits, reallyContribs, getTimeOffset());\n            return ret;\n        } catch (someError) {\n            return \"History preview failed :-(\";\n        }\n    }\n\n    function setupDebugging() {\n        if (window.popupDebug) {\n            window.log = function(x) {\n                window.console.log(x);\n            };\n            window.errlog = function(x) {\n                window.console.error(x);\n            };\n            log(\"Initializing logger\");\n        } else {\n            window.log = function() {};\n            window.errlog = function() {};\n        }\n    }\n\n    function loadImage(image, navpop) {\n        if (typeof image.stripNamespace != \"function\") {\n            alert(\"loadImages bad\");\n        }\n        if (!getValueOf(\"popupImages\")) return;\n        if (!isValidImageName(image)) return false;\n        var art = image.urlString();\n        var url = pg.wiki.apiwikibase + \"?format=json&formatversion=2&action=query\";\n        url += \"&prop=imageinfo&iiprop=url|mime&iiurlwidth=\" + getValueOf(\"popupImageSizeLarge\");\n        url += \"&titles=\" + art;\n        pendingNavpopTask(navpop);\n        var callback = function(d) {\n            popupsInsertImage(navpop.idNumber, navpop, d);\n        };\n        var go = function() {\n            getPageWithCaching(url, callback, navpop);\n            return true;\n        };\n        if (navpop.visible || !getValueOf(\"popupLazyDownloads\")) {\n            go();\n        } else {\n            navpop.addHook(go, \"unhide\", \"after\", \"DOWNLOAD_IMAGE_QUERY_DATA\");\n        }\n    }\n\n    function popupsInsertImage(id, navpop, download) {\n        log(\"popupsInsertImage\");\n        var imageinfo;\n        try {\n            var jsObj = getJsObj(download.data);\n            var imagepage = anyChild(jsObj.query.pages);\n            if (typeof imagepage.imageinfo === \"undefined\") return;\n            imageinfo = imagepage.imageinfo[0];\n        } catch (someError) {\n            log(\"popupsInsertImage failed :(\");\n            return;\n        }\n        var popupImage = document.getElementById(\"popupImg\" + id);\n        if (!popupImage) {\n            log(\"could not find insertion point for image\");\n            return;\n        }\n        popupImage.width = getValueOf(\"popupImageSize\");\n        popupImage.style.display = \"inline\";\n        if (imageinfo.thumburl) popupImage.src = imageinfo.thumburl;\n        else if (imageinfo.mime.indexOf(\"image\") === 0) {\n            popupImage.src = imageinfo.url;\n            log(\"a thumb could not be found, using original image\");\n        } else log(\"fullsize imagethumb, but not sure if it's an image\");\n        var a = document.getElementById(\"popupImageLink\" + id);\n        if (a === null) {\n            return null;\n        }\n        switch (getValueOf(\"popupThumbAction\")) {\n            case \"imagepage\":\n                if (pg.current.article.namespaceId() != pg.nsImageId) {\n                    a.href = imageinfo.descriptionurl;\n                    popTipsSoonFn(\"popupImage\" + id)();\n                    break;\n                }\n\n            case \"sizetoggle\":\n                a.onclick = toggleSize;\n                a.title = popupString(\"Toggle image size\");\n                return;\n\n            case \"linkfull\":\n                a.href = imageinfo.url;\n                a.title = popupString(\"Open full-size image\");\n                return;\n        }\n    }\n\n    function toggleSize() {\n        var imgContainer = this;\n        if (!imgContainer) {\n            alert(\"imgContainer is null :/\");\n            return;\n        }\n        var img = imgContainer.firstChild;\n        if (!img) {\n            alert(\"img is null :/\");\n            return;\n        }\n        if (!img.style.width || img.style.width === \"\") {\n            img.style.width = \"100%\";\n        } else {\n            img.style.width = \"\";\n        }\n    }\n\n    function getValidImageFromWikiText(wikiText) {\n        var matched = null;\n        var match;\n        var t = removeMatchesUnless(wikiText, RegExp(\"(<!--[\\\\s\\\\S]*?-->)\"), 1, RegExp(\"^<!--[^[]*popup\", \"i\"));\n        while (match = pg.re.image.exec(t)) {\n            var m = match[2] || match[6];\n            if (isValidImageName(m)) {\n                matched = m;\n                break;\n            }\n        }\n        pg.re.image.lastIndex = 0;\n        if (!matched) {\n            return null;\n        }\n        return mw.config.get(\"wgFormattedNamespaces\")[pg.nsImageId] + \":\" + upcaseFirst(matched);\n    }\n\n    function removeMatchesUnless(str, re1, parencount, re2) {\n        var split = str.parenSplit(re1);\n        var c = parencount + 1;\n        for (var i = 0; i < split.length; ++i) {\n            if (i % c === 0 || re2.test(split[i])) {\n                continue;\n            }\n            split[i] = \"\";\n        }\n        return split.join(\"\");\n    }\n\n    function setNamespaces() {\n        pg.nsSpecialId = -1;\n        pg.nsMainspaceId = 0;\n        pg.nsImageId = 6;\n        pg.nsUserId = 2;\n        pg.nsUsertalkId = 3;\n        pg.nsCategoryId = 14;\n        pg.nsTemplateId = 10;\n    }\n\n    function setRedirs() {\n        var r = \"redirect\";\n        var R = \"REDIRECT\";\n        var redirLists = {\n            ar: [R, \"\u062a\u062d\u0648\u064a\u0644\"],\n            be: [r, \"\u043f\u0435\u0440\u0430\u043d\u0430\u043a\u0456\u0440\u0430\u0432\u0430\u043d\u044c\u043d\u0435\"],\n            bg: [r, \"\u043f\u0440\u0435\u043d\u0430\u0441\u043e\u0447\u0432\u0430\u043d\u0435\", \"\u0432\u0438\u0436\"],\n            bs: [r, \"Preusmjeri\", \"preusmjeri\", \"PREUSMJERI\"],\n            cs: [R, \"P\u0158ESM\u011aRUJ\"],\n            cy: [r, \"ail-cyfeirio\"],\n            de: [R, \"WEITERLEITUNG\"],\n            el: [R, \"\u0391\u039d\u0391\u039a\u0391\u03a4\u0395\u03a5\u0398\u03a5\u039d\u03a3\u0397\"],\n            eo: [R, \"ALIDIREKTU\", \"ALIDIREKTI\"],\n            es: [R, \"REDIRECCI\u00d3N\"],\n            et: [r, \"suuna\"],\n            ga: [r, \"athsheoladh\"],\n            gl: [r, \"REDIRECCI\u00d3N\", \"REDIRECIONAMENTO\"],\n            he: [R, \"\u05d4\u05e4\u05e0\u05d9\u05d4\"],\n            hu: [R, \"\u00c1TIR\u00c1NY\u00cdT\u00c1S\"],\n            is: [r, \"tilv\u00edsun\", \"TILV\u00cdSUN\"],\n            it: [R, \"RINVIA\", \"Rinvia\"],\n            ja: [R, \"\u8ee2\u9001\"],\n            mk: [r, \"\u043f\u0440\u0435\u043d\u0430\u0441\u043e\u0447\u0443\u0432\u0430\u045a\u0435\", \"\u0432\u0438\u0434\u0438\"],\n            nds: [r, \"wiederleiden\"],\n            nl: [R, \"DOORVERWIJZING\"],\n            nn: [r, \"omdiriger\"],\n            pl: [R, \"PATRZ\", \"PRZEKIERUJ\", \"TAM\"],\n            pt: [R, \"redir\"],\n            ru: [R, \"\u041f\u0415\u0420\u0415\u041d\u0410\u041f\u0420\u0410\u0412\u041b\u0415\u041d\u0418\u0415\", \"\u041f\u0415\u0420\u0415\u041d\u0410\u041f\u0420\"],\n            sk: [r, \"presmeruj\"],\n            sr: [r, \"\u041f\u0440\u0435\u0443\u0441\u043c\u0435\u0440\u0438\", \"\u043f\u0440\u0435\u0443\u0441\u043c\u0435\u0440\u0438\", \"\u041f\u0420\u0415\u0423\u0421\u041c\u0415\u0420\u0418\", \"Preusmeri\", \"preusmeri\", \"PREUSMERI\"],\n            tt: [R, \"y\u00fcn\u00e4lt\u00fc\", \"\u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435\", \"\u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\"],\n            uk: [R, \"\u041f\u0415\u0420\u0415\u041d\u0410\u041f\u0420\u0410\u0412\u041b\u0415\u041d\u041d\u042f\", \"\u041f\u0415\u0420\u0415\u041d\u0410\u041f\u0420\"],\n            vi: [r, \"\u0111\u1ed5i\"],\n            zh: [R, \"\u91cd\u5b9a\u5411\"]\n        };\n        var redirList = redirLists[pg.wiki.lang] || [r, R];\n        pg.re.redirect = RegExp(\"^\\\\s*[#](\" + redirList.join(\"|\") + \").*?\\\\[{2}([^\\\\|\\\\]]*)(|[^\\\\]]*)?\\\\]{2}\\\\s*(.*)\", \"i\");\n    }\n\n    function setInterwiki() {\n        if (pg.wiki.wikimedia) {\n            pg.wiki.interwiki = \"aa|ab|ace|af|ak|als|am|an|ang|ar|arc|arz|as|ast|av|ay|az|ba|bar|bat-smg|bcl|be|be-x-old|bg|bh|bi|bjn|bm|bn|bo|bpy|br|bs|bug|bxr|ca|cbk-zam|cdo|ce|ceb|ch|cho|chr|chy|ckb|co|cr|crh|cs|csb|cu|cv|cy|da|de|diq|dsb|dv|dz|ee|el|eml|en|eo|es|et|eu|ext|fa|ff|fi|fiu-vro|fj|fo|fr|frp|frr|fur|fy|ga|gag|gan|gd|gl|glk|gn|got|gu|gv|ha|hak|haw|he|hi|hif|ho|hr|hsb|ht|hu|hy|hz|ia|id|ie|ig|ii|ik|ilo|io|is|it|iu|ja|jbo|jv|ka|kaa|kab|kbd|kg|ki|kj|kk|kl|km|kn|ko|koi|kr|krc|ks|ksh|ku|kv|kw|ky|la|lad|lb|lbe|lg|li|lij|lmo|ln|lo|lt|ltg|lv|map-bms|mdf|mg|mh|mhr|mi|mk|ml|mn|mo|mr|mrj|ms|mt|mus|mwl|my|myv|mzn|na|nah|nap|nds|nds-nl|ne|new|ng|nl|nn|no|nov|nrm|nv|ny|oc|om|or|os|pa|pag|pam|pap|pcd|pdc|pfl|pi|pih|pl|pms|pnb|pnt|ps|pt|qu|rm|rmy|rn|ro|roa-rup|roa-tara|ru|rue|rw|sa|sah|sc|scn|sco|sd|se|sg|sh|si|simple|sk|sl|sm|sn|so|sq|sr|srn|ss|st|stq|su|sv|sw|szl|ta|te|tet|tg|th|ti|tk|tl|tn|to|tpi|tr|ts|tt|tum|tw|ty|udm|ug|uk|ur|uz|ve|vec|vi|vls|vo|wa|war|wo|wuu|xal|xh|yi|yo|za|zea|zh|zh-classical|zh-min-nan|zh-yue|zu\";\n            pg.re.interwiki = RegExp(\"^\" + pg.wiki.interwiki + \":\");\n        } else {\n            pg.wiki.interwiki = null;\n            pg.re.interwiki = RegExp(\"^$\");\n        }\n    }\n\n    function nsRe(namespaceId) {\n        var imageNamespaceVariants = [];\n        jQuery.each(mw.config.get(\"wgNamespaceIds\"), function(_localizedNamespaceLc, _namespaceId) {\n            if (_namespaceId != namespaceId) return;\n            _localizedNamespaceLc = upcaseFirst(_localizedNamespaceLc);\n            imageNamespaceVariants.push(mw.RegExp.escape(_localizedNamespaceLc).split(\" \").join(\"[ _]\"));\n            imageNamespaceVariants.push(mw.RegExp.escape(encodeURI(_localizedNamespaceLc)));\n        });\n        return \"(?:\" + imageNamespaceVariants.join(\"|\") + \")\";\n    }\n\n    function nsReImage() {\n        return nsRe(pg.nsImageId);\n    }\n\n    function getEditboxSelection() {\n        var editbox;\n        try {\n            editbox = document.editform.wpTextbox1;\n        } catch (dang) {\n            return;\n        }\n        if (document.selection) {\n            return document.selection.createRange().text;\n        }\n        var selStart = editbox.selectionStart;\n        var selEnd = editbox.selectionEnd;\n        return editbox.value.substring(selStart, selEnd);\n    }\n\n    function doSelectionPopup() {\n        var sel = getEditboxSelection();\n        var open = sel.indexOf(\"[[\");\n        var pipe = sel.indexOf(\"|\");\n        var close = sel.indexOf(\"]]\");\n        if (open == -1 || pipe == -1 && close == -1) {\n            return;\n        }\n        if (pipe != -1 && open > pipe || close != -1 && open > close) {\n            return;\n        }\n        if (getValueOf(\"popupOnEditSelection\") == \"boxpreview\") {\n            return doSeparateSelectionPopup(sel);\n        }\n        var article = new Title(sel.substring(open + 2, pipe < 0 ? close : pipe)).urlString();\n        if (close > 0 && sel.substring(close + 2).indexOf(\"[[\") >= 0) {\n            return;\n        }\n        var a = document.createElement(\"a\");\n        a.href = pg.wiki.titlebase + article;\n        mouseOverWikiLink2(a);\n        if (a.navpopup) {\n            a.navpopup.addHook(function() {\n                runStopPopupTimer(a.navpopup);\n            }, \"unhide\", \"after\");\n        }\n    }\n\n    function doSeparateSelectionPopup(str) {\n        var div = document.getElementById(\"selectionPreview\");\n        if (!div) {\n            div = document.createElement(\"div\");\n            div.id = \"selectionPreview\";\n            try {\n                var box = document.editform.wpTextbox1;\n                box.parentNode.insertBefore(div, box);\n            } catch (error) {\n                return;\n            }\n        }\n        div.innerHTML = wiki2html(str);\n        div.ranSetupTooltipsAlready = false;\n        popTipsSoonFn(\"selectionPreview\")();\n    }\n\n    function Mousetracker() {\n        this.loopDelay = 400;\n        this.timer = null;\n        this.active = false;\n        this.dirty = true;\n        this.hooks = [];\n    }\n    Mousetracker.prototype.addHook = function(f) {\n        this.hooks.push(f);\n    };\n    Mousetracker.prototype.runHooks = function() {\n        if (!this.hooks || !this.hooks.length) {\n            return;\n        }\n        var remove = false;\n        var removeObj = {};\n        var x = this.x,\n            y = this.y,\n            len = this.hooks.length;\n        for (var i = 0; i < len; ++i) {\n            if (this.hooks[i](x, y) === true) {\n                remove = true;\n                removeObj[i] = true;\n            }\n        }\n        if (remove) {\n            this.removeHooks(removeObj);\n        }\n    };\n    Mousetracker.prototype.removeHooks = function(removeObj) {\n        var newHooks = [];\n        var len = this.hooks.length;\n        for (var i = 0; i < len; ++i) {\n            if (!removeObj[i]) {\n                newHooks.push(this.hooks[i]);\n            }\n        }\n        this.hooks = newHooks;\n    };\n    Mousetracker.prototype.track = function(e) {\n        e = e || window.event;\n        var x, y;\n        if (e) {\n            if (e.pageX) {\n                x = e.pageX;\n                y = e.pageY;\n            } else if (typeof e.clientX != \"undefined\") {\n                var left, top, docElt = document.documentElement;\n                if (docElt) {\n                    left = docElt.scrollLeft;\n                }\n                left = left || document.body.scrollLeft || document.scrollLeft || 0;\n                if (docElt) {\n                    top = docElt.scrollTop;\n                }\n                top = top || document.body.scrollTop || document.scrollTop || 0;\n                x = e.clientX + left;\n                y = e.clientY + top;\n            } else {\n                return;\n            }\n            this.setPosition(x, y);\n        }\n    };\n    Mousetracker.prototype.setPosition = function(x, y) {\n        this.x = x;\n        this.y = y;\n        if (this.dirty || this.hooks.length === 0) {\n            this.dirty = false;\n            return;\n        }\n        if (typeof this.lastHook_x != \"number\") {\n            this.lastHook_x = -100;\n            this.lastHook_y = -100;\n        }\n        var diff = (this.lastHook_x - x) * (this.lastHook_y - y);\n        diff = diff >= 0 ? diff : -diff;\n        if (diff > 1) {\n            this.lastHook_x = x;\n            this.lastHook_y = y;\n            if (this.dirty) {\n                this.dirty = false;\n            } else {\n                this.runHooks();\n            }\n        }\n    };\n    Mousetracker.prototype.enable = function() {\n        if (this.active) {\n            return;\n        }\n        this.active = true;\n        this.savedHandler = document.onmousemove;\n        var savedThis = this;\n        document.onmousemove = function(e) {\n            savedThis.track.apply(savedThis, [e]);\n        };\n        if (this.loopDelay) {\n            this.timer = setInterval(function() {\n                savedThis.runHooks();\n            }, this.loopDelay);\n        }\n    };\n    Mousetracker.prototype.disable = function() {\n        if (!this.active) {\n            return;\n        }\n        if ($.isFunction(this.savedHandler)) {\n            document.onmousemove = this.savedHandler;\n        } else {\n            delete document.onmousemove;\n        }\n        if (this.timer) {\n            clearInterval(this.timer);\n        }\n        this.active = false;\n    };\n\n    function Navpopup() {\n        this.uid = Navpopup.uid++;\n        this.visible = false;\n        this.noshow = false;\n        this.hooks = {\n            create: [],\n            unhide: [],\n            hide: []\n        };\n        this.hookIds = {};\n        this.downloads = [];\n        this.pending = null;\n        this.fuzz = 5;\n        this.constrained = true;\n        this.width = 0;\n        this.height = 0;\n        this.mainDiv = null;\n        this.createMainDiv();\n    }\n    Navpopup.uid = 0;\n    Navpopup.prototype.isVisible = function() {\n        return this.visible;\n    };\n    Navpopup.prototype.reposition = function(x, y, noLimitHor) {\n        log(\"reposition(\" + x + \",\" + y + \",\" + noLimitHor + \")\");\n        if (typeof x != \"undefined\" && x !== null) {\n            this.left = x;\n        }\n        if (typeof y != \"undefined\" && y !== null) {\n            this.top = y;\n        }\n        if (typeof this.left != \"undefined\" && typeof this.top != \"undefined\") {\n            this.mainDiv.style.left = this.left + \"px\";\n            this.mainDiv.style.top = this.top + \"px\";\n        }\n        if (!noLimitHor) {\n            this.limitHorizontalPosition();\n        }\n    };\n    Navpopup.prototype.limitHorizontalPosition = function() {\n        if (!this.constrained || this.tooWide) {\n            return;\n        }\n        this.updateDimensions();\n        var x = this.left;\n        var w = this.width;\n        var cWidth = document.body.clientWidth;\n        if (x + w >= cWidth || x > 0 && this.maxWidth && this.width < this.maxWidth && this.height > this.width && x > cWidth - this.maxWidth) {\n            this.mainDiv.style.left = \"-10000px\";\n            this.mainDiv.style.width = this.maxWidth + \"px\";\n            var naturalWidth = parseInt(this.mainDiv.offsetWidth, 10);\n            var newLeft = cWidth - naturalWidth - 1;\n            if (newLeft < 0) {\n                newLeft = 0;\n                this.tooWide = true;\n            }\n            log(\"limitHorizontalPosition: moving to (\" + newLeft + \",\" + this.top + \");\" + \" naturalWidth=\" + naturalWidth + \", clientWidth=\" + cWidth);\n            this.reposition(newLeft, null, true);\n        }\n    };\n    Navpopup.highest = 1e3;\n    Navpopup.prototype.raise = function() {\n        this.mainDiv.style.zIndex = Navpopup.highest + 1;\n        ++Navpopup.highest;\n    };\n    Navpopup.prototype.show = function() {\n        if (this.noshow) {\n            return;\n        }\n        this.reposition();\n        this.raise();\n        this.unhide();\n    };\n    Navpopup.prototype.showSoonIfStable = function(time) {\n        log(\"showSoonIfStable, time=\" + time);\n        if (this.visible) {\n            return;\n        }\n        this.noshow = false;\n        this.stable_x = -1e4;\n        this.stable_y = -1e4;\n        var stableShow = function() {\n            log(\"stableShow called\");\n            var new_x = Navpopup.tracker.x,\n                new_y = Navpopup.tracker.y;\n            var dx = savedThis.stable_x - new_x,\n                dy = savedThis.stable_y - new_y;\n            var fuzz2 = 0;\n            if (dx * dx <= fuzz2 && dy * dy <= fuzz2) {\n                log(\"mouse is stable\");\n                clearInterval(savedThis.showSoonStableTimer);\n                savedThis.reposition.apply(savedThis, [new_x + 2, new_y + 2]);\n                savedThis.show.apply(savedThis, []);\n                savedThis.limitHorizontalPosition.apply(savedThis, []);\n                return;\n            }\n            savedThis.stable_x = new_x;\n            savedThis.stable_y = new_y;\n        };\n        var savedThis = this;\n        this.showSoonStableTimer = setInterval(stableShow, time / 2);\n    };\n    Navpopup.prototype.banish = function() {\n        log(\"banish called\");\n        this.noshow = true;\n        if (this.showSoonStableTimer) {\n            log(\"clearing showSoonStableTimer\");\n            clearInterval(this.showSoonStableTimer);\n        }\n        this.hide();\n    };\n    Navpopup.prototype.runHooks = function(key, when) {\n        if (!this.hooks[key]) {\n            return;\n        }\n        var keyHooks = this.hooks[key];\n        var len = keyHooks.length;\n        for (var i = 0; i < len; ++i) {\n            if (keyHooks[i] && keyHooks[i].when == when) {\n                if (keyHooks[i].hook.apply(this, [])) {\n                    if (keyHooks[i].hookId) {\n                        delete this.hookIds[keyHooks[i].hookId];\n                    }\n                    keyHooks[i] = null;\n                }\n            }\n        }\n    };\n    Navpopup.prototype.addHook = function(hook, key, when, uid) {\n        when = when || \"after\";\n        if (!this.hooks[key]) {\n            return;\n        }\n        var hookId = null;\n        if (uid) {\n            hookId = [key, when, uid].join(\"|\");\n            if (this.hookIds[hookId]) {\n                return;\n            }\n            this.hookIds[hookId] = true;\n        }\n        this.hooks[key].push({\n            hook: hook,\n            when: when,\n            hookId: hookId\n        });\n    };\n    Navpopup.prototype.createMainDiv = function() {\n        if (this.mainDiv) {\n            return;\n        }\n        this.runHooks(\"create\", \"before\");\n        var mainDiv = document.createElement(\"div\");\n        var savedThis = this;\n        mainDiv.onclick = function(e) {\n            savedThis.onclickHandler(e);\n        };\n        mainDiv.className = this.className ? this.className : \"navpopup_maindiv\";\n        mainDiv.id = mainDiv.className + this.uid;\n        mainDiv.style.position = \"absolute\";\n        mainDiv.style.minWidth = \"350px\";\n        mainDiv.style.display = \"none\";\n        mainDiv.className = \"navpopup\";\n        mainDiv.navpopup = this;\n        this.mainDiv = mainDiv;\n        document.body.appendChild(mainDiv);\n        this.runHooks(\"create\", \"after\");\n    };\n    Navpopup.prototype.onclickHandler = function() {\n        this.raise();\n    };\n    Navpopup.prototype.makeDraggable = function(handleName) {\n        if (!this.mainDiv) {\n            this.createMainDiv();\n        }\n        var drag = new Drag();\n        if (!handleName) {\n            drag.startCondition = function(e) {\n                try {\n                    if (!e.shiftKey) {\n                        return false;\n                    }\n                } catch (err) {\n                    return false;\n                }\n                return true;\n            };\n        }\n        var dragHandle;\n        if (handleName) dragHandle = document.getElementById(handleName);\n        if (!dragHandle) dragHandle = this.mainDiv;\n        var np = this;\n        drag.endHook = function(x, y) {\n            Navpopup.tracker.dirty = true;\n            np.reposition(x, y);\n        };\n        drag.init(dragHandle, this.mainDiv);\n    };\n    Navpopup.prototype.hide = function() {\n        this.runHooks(\"hide\", \"before\");\n        this.abortDownloads();\n        if (typeof this.visible != \"undefined\" && this.visible) {\n            this.mainDiv.style.display = \"none\";\n            this.visible = false;\n        }\n        this.runHooks(\"hide\", \"after\");\n    };\n    Navpopup.prototype.unhide = function() {\n        this.runHooks(\"unhide\", \"before\");\n        if (typeof this.visible != \"undefined\" && !this.visible) {\n            this.mainDiv.style.display = \"inline\";\n            this.visible = true;\n        }\n        this.runHooks(\"unhide\", \"after\");\n    };\n    Navpopup.prototype.setInnerHTML = function(html) {\n        this.mainDiv.innerHTML = html;\n    };\n    Navpopup.prototype.updateDimensions = function() {\n        this.width = parseInt(this.mainDiv.offsetWidth, 10);\n        this.height = parseInt(this.mainDiv.offsetHeight, 10);\n    };\n    Navpopup.prototype.isWithin = function(x, y) {\n        if (!this.visible) {\n            return false;\n        }\n        this.updateDimensions();\n        var fuzz = this.fuzz || 0;\n        return x + fuzz >= this.left && x - fuzz <= this.left + this.width && y + fuzz >= this.top && y - fuzz <= this.top + this.height;\n    };\n    Navpopup.prototype.addDownload = function(download) {\n        if (!download) {\n            return;\n        }\n        this.downloads.push(download);\n    };\n    Navpopup.prototype.abortDownloads = function() {\n        for (var i = 0; i < this.downloads.length; ++i) {\n            var d = this.downloads[i];\n            if (d && d.abort) {\n                d.abort();\n            }\n        }\n        this.downloads = [];\n    };\n    Navpopup.tracker = new Mousetracker();\n\n    function delFmt(x) {\n        if (!x.length) {\n            return \"\";\n        }\n        return \"<del class='popupDiff'>\" + x.join(\"\") + \"</del>\";\n    }\n\n    function insFmt(x) {\n        if (!x.length) {\n            return \"\";\n        }\n        return \"<ins class='popupDiff'>\" + x.join(\"\") + \"</ins>\";\n    }\n\n    function countCrossings(a, b, i, eject) {\n        if (!b[i].row && b[i].row !== 0) {\n            return -1;\n        }\n        var count = 0;\n        for (var j = 0; j < a.length; ++j) {\n            if (!a[j].row && a[j].row !== 0) {\n                continue;\n            }\n            if ((j - b[i].row) * (i - a[j].row) > 0) {\n                if (eject) {\n                    return true;\n                }\n                count++;\n            }\n        }\n        return count;\n    }\n\n    function shortenDiffString(str, context) {\n        var re = RegExp(\"(<del[\\\\s\\\\S]*?</del>|<ins[\\\\s\\\\S]*?</ins>)\");\n        var splitted = str.parenSplit(re);\n        var ret = [\"\"];\n        for (var i = 0; i < splitted.length; i += 2) {\n            if (splitted[i].length < 2 * context) {\n                ret[ret.length - 1] += splitted[i];\n                if (i + 1 < splitted.length) {\n                    ret[ret.length - 1] += splitted[i + 1];\n                }\n                continue;\n            } else {\n                if (i > 0) {\n                    ret[ret.length - 1] += splitted[i].substring(0, context);\n                }\n                if (i + 1 < splitted.length) {\n                    ret.push(splitted[i].substring(splitted[i].length - context) + splitted[i + 1]);\n                }\n            }\n        }\n        while (ret.length > 0 && !ret[0]) {\n            ret = ret.slice(1);\n        }\n        return ret;\n    }\n\n    function diffString(o, n, simpleSplit) {\n        var splitRe = RegExp(\"([[]{2}|[\\\\]]{2}|[{]{2,3}|[}]{2,3}|[|]|=|<|>|[*:]+|\\\\s|\\\\b)\");\n        var out, i, oSplitted, nSplitted;\n        if (simpleSplit) {\n            oSplitted = o.split(/\\b/);\n            nSplitted = n.split(/\\b/);\n        } else {\n            oSplitted = o.parenSplit(splitRe);\n            nSplitted = n.parenSplit(splitRe);\n        }\n        for (i = 0; i < oSplitted.length; ++i) {\n            oSplitted[i] = oSplitted[i].entify();\n        }\n        for (i = 0; i < nSplitted.length; ++i) {\n            nSplitted[i] = nSplitted[i].entify();\n        }\n        out = diff(oSplitted, nSplitted);\n        var str = \"\";\n        var acc = [];\n        var maxOutputPair = 0;\n        for (i = 0; i < out.n.length; ++i) {\n            if (out.n[i].paired) {\n                if (maxOutputPair > out.n[i].row) {\n                    out.o[out.n[i].row] = out.o[out.n[i].row].text;\n                    out.n[i] = out.n[i].text;\n                }\n                if (maxOutputPair < out.n[i].row) {\n                    maxOutputPair = out.n[i].row;\n                }\n            }\n        }\n        for (i = 0; i < out.o.length && !out.o[i].paired; ++i) {\n            acc.push(out.o[i]);\n        }\n        str += delFmt(acc);\n        acc = [];\n        for (i = 0; i < out.n.length; ++i) {\n            while (i < out.n.length && !out.n[i].paired) {\n                acc.push(out.n[i++]);\n            }\n            str += insFmt(acc);\n            acc = [];\n            if (i < out.n.length) {\n                str += out.n[i].text;\n                var m = out.n[i].row + 1;\n                while (m < out.o.length && !out.o[m].paired) {\n                    acc.push(out.o[m++]);\n                }\n                str += delFmt(acc);\n                acc = [];\n            }\n        }\n        return str;\n    }\n    var jsReservedProperties = RegExp(\"^(constructor|prototype|__((define|lookup)[GS]etter)__\" + \"|eval|hasOwnProperty|propertyIsEnumerable\" + \"|to(Source|String|LocaleString)|(un)?watch|valueOf)$\");\n\n    function diffBugAlert(word) {\n        if (!diffBugAlert.list[word]) {\n            diffBugAlert.list[word] = 1;\n            alert(\"Bad word: \" + word + \"\\n\\nPlease report this bug.\");\n        }\n    }\n    diffBugAlert.list = {};\n\n    function makeDiffHashtable(src) {\n        var ret = {};\n        for (var i = 0; i < src.length; i++) {\n            if (jsReservedProperties.test(src[i])) {\n                src[i] += \"<!-- -->\";\n            }\n            if (!ret[src[i]]) {\n                ret[src[i]] = [];\n            }\n            try {\n                ret[src[i]].push(i);\n            } catch (err) {\n                diffBugAlert(src[i]);\n            }\n        }\n        return ret;\n    }\n\n    function diff(o, n) {\n        var ns = makeDiffHashtable(n);\n        var os = makeDiffHashtable(o);\n        var i;\n        for (i in ns) {\n            if (ns[i].length == 1 && os[i] && os[i].length == 1) {\n                n[ns[i][0]] = {\n                    text: n[ns[i][0]],\n                    row: os[i][0],\n                    paired: true\n                };\n                o[os[i][0]] = {\n                    text: o[os[i][0]],\n                    row: ns[i][0],\n                    paired: true\n                };\n            }\n        }\n        for (i = 0; i < n.length - 1; i++) {\n            if (n[i].paired && !n[i + 1].paired && n[i].row + 1 < o.length && !o[n[i].row + 1].paired && n[i + 1] == o[n[i].row + 1]) {\n                n[i + 1] = {\n                    text: n[i + 1],\n                    row: n[i].row + 1,\n                    paired: true\n                };\n                o[n[i].row + 1] = {\n                    text: o[n[i].row + 1],\n                    row: i + 1,\n                    paired: true\n                };\n            }\n        }\n        for (i = n.length - 1; i > 0; i--) {\n            if (n[i].paired && !n[i - 1].paired && n[i].row > 0 && !o[n[i].row - 1].paired && n[i - 1] == o[n[i].row - 1]) {\n                n[i - 1] = {\n                    text: n[i - 1],\n                    row: n[i].row - 1,\n                    paired: true\n                };\n                o[n[i].row - 1] = {\n                    text: o[n[i].row - 1],\n                    row: i - 1,\n                    paired: true\n                };\n            }\n        }\n        return {\n            o: o,\n            n: n\n        };\n    }\n\n    function setSiteInfo() {\n        if (window.popupLocalDebug) {\n            pg.wiki.hostname = \"en.wikipedia.org\";\n        } else {\n            pg.wiki.hostname = location.hostname;\n        }\n        pg.wiki.wikimedia = RegExp(\"(wiki([pm]edia|source|books|news|quote|versity)|wiktionary|mediawiki)[.]org\").test(pg.wiki.hostname);\n        pg.wiki.wikia = RegExp(\"[.]wikia[.]com$\", \"i\").test(pg.wiki.hostname);\n        pg.wiki.isLocal = RegExp(\"^localhost\").test(pg.wiki.hostname);\n        pg.wiki.commons = pg.wiki.wikimedia && pg.wiki.hostname != \"commons.wikimedia.org\" ? \"commons.wikimedia.org\" : null;\n        pg.wiki.lang = mw.config.get(\"wgContentLanguage\");\n        var port = location.port ? \":\" + location.port : \"\";\n        pg.wiki.sitebase = pg.wiki.hostname + port;\n    }\n\n    function setUserInfo() {\n        var api = new mw.Api({\n            ajax: {\n                headers: {\n                    \"Api-User-Agent\": pg.misc.userAgent\n                }\n            }\n        });\n        var params = {\n            action: \"query\",\n            list: \"users\",\n            ususers: mw.config.get(\"wgUserName\"),\n            usprop: \"rights\"\n        };\n        pg.user.canReview = false;\n        if (getValueOf(\"popupReview\")) {\n            api.get(params).done(function(data) {\n                var rights = data.query.users[0].rights;\n                pg.user.canReview = rights.indexOf(\"review\") !== -1;\n            });\n        }\n    }\n\n    function setTitleBase() {\n        var protocol = window.popupLocalDebug ? \"http:\" : location.protocol;\n        pg.wiki.articlePath = mw.config.get(\"wgArticlePath\").replace(/\\/\\$1/, \"\");\n        pg.wiki.botInterfacePath = mw.config.get(\"wgScript\");\n        pg.wiki.APIPath = mw.config.get(\"wgScriptPath\") + \"/api.php\";\n        var titletail = pg.wiki.botInterfacePath + \"?title=\";\n        pg.wiki.titlebase = protocol + \"//\" + pg.wiki.sitebase + titletail;\n        pg.wiki.wikibase = protocol + \"//\" + pg.wiki.sitebase + pg.wiki.botInterfacePath;\n        pg.wiki.apiwikibase = protocol + \"//\" + pg.wiki.sitebase + pg.wiki.APIPath;\n        pg.wiki.articlebase = protocol + \"//\" + pg.wiki.sitebase + pg.wiki.articlePath;\n        pg.wiki.commonsbase = protocol + \"//\" + pg.wiki.commons + pg.wiki.botInterfacePath;\n        pg.wiki.apicommonsbase = protocol + \"//\" + pg.wiki.commons + pg.wiki.APIPath;\n        pg.re.basenames = RegExp(\"^(\" + map(literalizeRegex, [pg.wiki.titlebase, pg.wiki.articlebase]).join(\"|\") + \")\");\n    }\n\n    function setMainRegex() {\n        var reStart = \"[^:]*://\";\n        var preTitles = literalizeRegex(mw.config.get(\"wgScriptPath\")) + \"/(?:index[.]php|wiki[.]phtml)[?]title=\";\n        preTitles += \"|\" + literalizeRegex(pg.wiki.articlePath + \"/\");\n        var reEnd = \"(\" + preTitles + \")([^&?#]*)[^#]*(?:#(.+))?\";\n        pg.re.main = RegExp(reStart + literalizeRegex(pg.wiki.sitebase) + reEnd);\n    }\n\n    function setRegexps() {\n        setMainRegex();\n        var sp = nsRe(pg.nsSpecialId);\n        pg.re.urlNoPopup = RegExp(\"((title=|/)\" + sp + \"(?:%3A|:)|section=[0-9]|^#$)\");\n        pg.re.contribs = RegExp(\"(title=|/)\" + sp + \"(?:%3A|:)Contributions\" + \"(&target=|/|/\" + nsRe(pg.nsUserId) + \":)(.*)\");\n        pg.re.email = RegExp(\"(title=|/)\" + sp + \"(?:%3A|:)EmailUser\" + \"(&target=|/|/(?:\" + nsRe(pg.nsUserId) + \":)?)(.*)\");\n        pg.re.backlinks = RegExp(\"(title=|/)\" + sp + \"(?:%3A|:)WhatLinksHere\" + \"(&target=|/)([^&]*)\");\n        pg.re.specialdiff = RegExp(\"/\" + sp + \"(?:%3A|:)Diff/([^?#]*)\");\n        var im = nsReImage();\n        pg.re.image = RegExp(\"(^|\\\\[\\\\[)\" + im + \": *([^|\\\\]]*[^|\\\\] ])\" + \"([^0-9\\\\]]*([0-9]+) *px)?|(?:\\\\n *[|]?|[|]) *\" + \"(\" + getValueOf(\"popupImageVarsRegexp\") + \")\" + \" *= *(?:\\\\[\\\\[ *)?(?:\" + im + \":)?\" + \"([^|]*?)(?:\\\\]\\\\])? *[|]? *\\\\n\", \"img\");\n        pg.re.imageBracketCount = 6;\n        pg.re.category = RegExp(\"\\\\[\\\\[\" + nsRe(pg.nsCategoryId) + \": *([^|\\\\]]*[^|\\\\] ]) *\", \"i\");\n        pg.re.categoryBracketCount = 1;\n        pg.re.ipUser = RegExp(\"^\" + \"(?::(?::|(?::[0-9A-Fa-f]{1,4}){1,7})|[0-9A-Fa-f]{1,4}(?::[0-9A-Fa-f]{1,4}){0,6}::|[0-9A-Fa-f]{1,4}(?::[0-9A-Fa-f]{1,4}){7})\" + \"|(((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\\\.){3}\" + \"(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9]))$\");\n        pg.re.stub = RegExp(getValueOf(\"popupStubRegexp\"), \"im\");\n        pg.re.disambig = RegExp(getValueOf(\"popupDabRegexp\"), \"im\");\n        pg.re.oldid = RegExp(\"[?&]oldid=([^&]*)\");\n        pg.re.diff = RegExp(\"[?&]diff=([^&]*)\");\n    }\n\n    function setupCache() {\n        pg.cache.pages = [];\n    }\n\n    function setMisc() {\n        pg.current.link = null;\n        pg.current.links = [];\n        pg.current.linksHash = {};\n        setupCache();\n        pg.timer.checkPopupPosition = null;\n        pg.counter.loop = 0;\n        pg.idNumber = 0;\n        pg.misc.decodeExtras = [{\n            from: \"%2C\",\n            to: \",\"\n        }, {\n            from: \"_\",\n            to: \" \"\n        }, {\n            from: \"%24\",\n            to: \"$\"\n        }, {\n            from: \"%26\",\n            to: \"&\"\n        }];\n        pg.misc.userAgent = \"Navigation popups/1.0 (\" + mw.config.get(\"wgServerName\") + \")\";\n    }\n\n    function setupPopups(callback) {\n        if (setupPopups.completed) {\n            if ($.isFunction(callback)) {\n                callback();\n            }\n            return;\n        }\n        mw.loader.using([\"mediawiki.util\", \"mediawiki.user\", \"user.options\", \"mediawiki.RegExp\"]).then(function() {\n            setupDebugging();\n            setSiteInfo();\n            setTitleBase();\n            setOptions();\n            setUserInfo();\n            setNamespaces();\n            setInterwiki();\n            setRegexps();\n            setRedirs();\n            setMisc();\n            setupLivePreview();\n            setupTooltips();\n            log(\"In setupPopups(), just called setupTooltips()\");\n            Navpopup.tracker.enable();\n            setupPopups.completed = true;\n            if ($.isFunction(callback)) {\n                callback();\n            }\n        });\n    }\n\n    function defaultNavlinkSpec() {\n        var str = \"\";\n        str += \"<b><<mainlink|shortcut= >></b>\";\n        if (getValueOf(\"popupLastEditLink\")) {\n            str += \"*<<lastEdit|shortcut=/>>|<<lastContrib>>|<<sinceMe>>if(oldid){|<<oldEdit>>|<<diffCur>>}\";\n        }\n        str += \"if(user){<br><<contribs|shortcut=c>>*<<userlog|shortcut=L|log>>\";\n        str += \"if(ipuser){*<<arin>>}if(wikimedia){*<<count|shortcut=#>>}\";\n        str += \"if(ipuser){}else{*<<email|shortcut=E>>}if(admin){*<<block|shortcut=b>>|<<blocklog|log>>}}\";\n        var editstr = \"<<edit|shortcut=e>>\";\n        var editOldidStr = \"if(oldid){<<editOld|shortcut=e>>|<<revert|shortcut=v|rv>>|<<edit|cur>>}else{\" + editstr + \"}\";\n        var historystr = \"<<history|shortcut=h>>|<<editors|shortcut=E|>>\";\n        var watchstr = \"<<unwatch|unwatchShort>>|<<watch|shortcut=w|watchThingy>>\";\n        str += \"<br>if(talk){\" + editOldidStr + \"|<<new|shortcut=+>>\" + \"*\" + historystr + \"*\" + watchstr + \"*\" + \"<b><<article|shortcut=a>></b>|<<editArticle|edit>>\" + \"}else{\" + editOldidStr + \"*\" + historystr + \"*\" + watchstr + \"*\" + \"<b><<talk|shortcut=t>></b>|<<editTalk|edit>>|<<newTalk|shortcut=+|new>>}\";\n        str += \"<br><<whatLinksHere|shortcut=l>>*<<relatedChanges|shortcut=r>>*<<move|shortcut=m>>\";\n        str += \"if(admin){<br><<unprotect|unprotectShort>>|<<protect|shortcut=p>>|<<protectlog|log>>*\" + \"<<undelete|undeleteShort>>|<<delete|shortcut=d>>|<<deletelog|log>>}\";\n        return str;\n    }\n\n    function navLinksHTML(article, hint, params) {\n        var str = '<span class=\"popupNavLinks\">' + defaultNavlinkSpec() + \"</span>\";\n        return navlinkStringToHTML(str, article, params);\n    }\n\n    function expandConditionalNavlinkString(s, article, z, recursionCount) {\n        var oldid = z.oldid,\n            rcid = z.rcid,\n            diff = z.diff;\n        if (typeof recursionCount != typeof 0) {\n            recursionCount = 0;\n        }\n        var conditionalSplitRegex = RegExp(\"(;?\\\\s*if\\\\s*\\\\(\\\\s*([\\\\w]*)\\\\s*\\\\)\\\\s*\\\\{([^{}]*)\\\\}(\\\\s*else\\\\s*\\\\{([^{}]*?)\\\\}|))\", \"i\");\n        var splitted = s.parenSplit(conditionalSplitRegex);\n        var numParens = 5;\n        var ret = splitted[0];\n        for (var i = 1; i < splitted.length; i = i + numParens + 1) {\n            var testString = splitted[i + 2 - 1];\n            var trueString = splitted[i + 3 - 1];\n            var falseString = splitted[i + 5 - 1];\n            if (typeof falseString == \"undefined\" || !falseString) {\n                falseString = \"\";\n            }\n            var testResult = null;\n            switch (testString) {\n                case \"user\":\n                    testResult = article.userName() ? true : false;\n                    break;\n\n                case \"talk\":\n                    testResult = article.talkPage() ? false : true;\n                    break;\n\n                case \"admin\":\n                    testResult = getValueOf(\"popupAdminLinks\") ? true : false;\n                    break;\n\n                case \"oldid\":\n                    testResult = typeof oldid != \"undefined\" && oldid ? true : false;\n                    break;\n\n                case \"rcid\":\n                    testResult = typeof rcid != \"undefined\" && rcid ? true : false;\n                    break;\n\n                case \"ipuser\":\n                    testResult = article.isIpUser() ? true : false;\n                    break;\n\n                case \"mainspace_en\":\n                    testResult = isInMainNamespace(article) && pg.wiki.hostname == \"en.wikipedia.org\";\n                    break;\n\n                case \"wikimedia\":\n                    testResult = pg.wiki.wikimedia ? true : false;\n                    break;\n\n                case \"diff\":\n                    testResult = typeof diff != \"undefined\" && diff ? true : false;\n                    break;\n            }\n            switch (testResult) {\n                case null:\n                    ret += splitted[i];\n                    break;\n\n                case true:\n                    ret += trueString;\n                    break;\n\n                case false:\n                    ret += falseString;\n                    break;\n            }\n            ret += splitted[i + numParens];\n        }\n        if (conditionalSplitRegex.test(ret) && recursionCount < 10) {\n            return expandConditionalNavlinkString(ret, article, z, recursionCount + 1);\n        }\n        return ret;\n    }\n\n    function navlinkStringToArray(s, article, params) {\n        s = expandConditionalNavlinkString(s, article, params);\n        var splitted = s.parenSplit(RegExp(\"<<(.*?)>>\"));\n        var ret = [];\n        for (var i = 0; i < splitted.length; ++i) {\n            if (i % 2) {\n                var t = new navlinkTag();\n                var ss = splitted[i].split(\"|\");\n                t.id = ss[0];\n                for (var j = 1; j < ss.length; ++j) {\n                    var sss = ss[j].split(\"=\");\n                    if (sss.length > 1) {\n                        t[sss[0]] = sss[1];\n                    } else {\n                        t.text = popupString(sss[0]);\n                    }\n                }\n                t.article = article;\n                var oldid = params.oldid,\n                    rcid = params.rcid,\n                    diff = params.diff;\n                if (typeof oldid !== \"undefined\" && oldid !== null) {\n                    t.oldid = oldid;\n                }\n                if (typeof rcid !== \"undefined\" && rcid !== null) {\n                    t.rcid = rcid;\n                }\n                if (typeof diff !== \"undefined\" && diff !== null) {\n                    t.diff = diff;\n                }\n                if (!t.text && t.id !== \"mainlink\") {\n                    t.text = popupString(t.id);\n                }\n                ret.push(t);\n            } else {\n                ret.push(splitted[i]);\n            }\n        }\n        return ret;\n    }\n\n    function navlinkSubstituteHTML(s) {\n        return s.split(\"*\").join(getValueOf(\"popupNavLinkSeparator\")).split(\"<menurow>\").join('<li class=\"popup_menu_row\">').split(\"</menurow>\").join(\"</li>\").split(\"<menu>\").join('<ul class=\"popup_menu\">').split(\"</menu>\").join(\"</ul>\");\n    }\n\n    function navlinkDepth(magic, s) {\n        return s.split(\"<\" + magic + \">\").length - s.split(\"</\" + magic + \">\").length;\n    }\n\n    function navlinkStringToHTML(s, article, params) {\n        var p = navlinkStringToArray(s, article, params);\n        var html = \"\";\n        var menudepth = 0;\n        var menurowdepth = 0;\n        for (var i = 0; i < p.length; ++i) {\n            if (typeof p[i] == typeof \"\") {\n                html += navlinkSubstituteHTML(p[i]);\n                menudepth += navlinkDepth(\"menu\", p[i]);\n                menurowdepth += navlinkDepth(\"menurow\", p[i]);\n            } else if (typeof p[i].type != \"undefined\" && p[i].type == \"navlinkTag\") {\n                if (menudepth > 0 && menurowdepth === 0) {\n                    html += '<li class=\"popup_menu_item\">' + p[i].html() + \"</li>\";\n                } else {\n                    html += p[i].html();\n                }\n            }\n        }\n        return html;\n    }\n\n    function navlinkTag() {\n        this.type = \"navlinkTag\";\n    }\n    navlinkTag.prototype.html = function() {\n        this.getNewWin();\n        this.getPrintFunction();\n        var html = \"\";\n        var opening, closing;\n        var tagType = \"span\";\n        if (!tagType) {\n            opening = \"\";\n            closing = \"\";\n        } else {\n            opening = \"<\" + tagType + ' class=\"popup_' + this.id + '\">';\n            closing = \"</\" + tagType + \">\";\n        }\n        if (typeof this.print != \"function\") {\n            errlog(\"Oh dear - invalid print function for a navlinkTag, id=\" + this.id);\n        } else {\n            html = this.print(this);\n            if (typeof html != typeof \"\") {\n                html = \"\";\n            } else if (typeof this.shortcut != \"undefined\") html = addPopupShortcut(html, this.shortcut);\n        }\n        return opening + html + closing;\n    };\n    navlinkTag.prototype.getNewWin = function() {\n        getValueOf(\"popupLinksNewWindow\");\n        if (typeof pg.option.popupLinksNewWindow[this.id] === \"undefined\") {\n            this.newWin = null;\n        }\n        this.newWin = pg.option.popupLinksNewWindow[this.id];\n    };\n    navlinkTag.prototype.getPrintFunction = function() {\n        if (typeof this.id != typeof \"\" || typeof this.article != typeof {}) {\n            return;\n        }\n        this.noPopup = 1;\n        switch (this.id) {\n            case \"contribs\":\n            case \"history\":\n            case \"whatLinksHere\":\n            case \"userPage\":\n            case \"monobook\":\n            case \"userTalk\":\n            case \"talk\":\n            case \"article\":\n            case \"lastEdit\":\n                this.noPopup = null;\n        }\n        switch (this.id) {\n            case \"email\":\n            case \"contribs\":\n            case \"block\":\n            case \"unblock\":\n            case \"userlog\":\n            case \"userSpace\":\n            case \"deletedContribs\":\n                this.article = this.article.userName();\n        }\n        switch (this.id) {\n            case \"userTalk\":\n            case \"newUserTalk\":\n            case \"editUserTalk\":\n            case \"userPage\":\n            case \"monobook\":\n            case \"editMonobook\":\n            case \"blocklog\":\n                this.article = this.article.userName(true);\n\n            case \"pagelog\":\n            case \"deletelog\":\n            case \"protectlog\":\n                delete this.oldid;\n        }\n        if (this.id == \"editMonobook\" || this.id == \"monobook\") {\n            this.article.append(\"/monobook.js\");\n        }\n        if (this.id != \"mainlink\") {\n            this.article = this.article.removeAnchor();\n        }\n        switch (this.id) {\n            case \"undelete\":\n                this.print = specialLink;\n                this.specialpage = \"Undelete\";\n                this.sep = \"/\";\n                break;\n\n            case \"whatLinksHere\":\n                this.print = specialLink;\n                this.specialpage = \"Whatlinkshere\";\n                break;\n\n            case \"relatedChanges\":\n                this.print = specialLink;\n                this.specialpage = \"Recentchangeslinked\";\n                break;\n\n            case \"move\":\n                this.print = specialLink;\n                this.specialpage = \"Movepage\";\n                break;\n\n            case \"contribs\":\n                this.print = specialLink;\n                this.specialpage = \"Contributions\";\n                break;\n\n            case \"deletedContribs\":\n                this.print = specialLink;\n                this.specialpage = \"Deletedcontributions\";\n                break;\n\n            case \"email\":\n                this.print = specialLink;\n                this.specialpage = \"EmailUser\";\n                this.sep = \"/\";\n                break;\n\n            case \"block\":\n                this.print = specialLink;\n                this.specialpage = \"Blockip\";\n                this.sep = \"&ip=\";\n                break;\n\n            case \"unblock\":\n                this.print = specialLink;\n                this.specialpage = \"Ipblocklist\";\n                this.sep = \"&action=unblock&ip=\";\n                break;\n\n            case \"userlog\":\n                this.print = specialLink;\n                this.specialpage = \"Log\";\n                this.sep = \"&user=\";\n                break;\n\n            case \"blocklog\":\n                this.print = specialLink;\n                this.specialpage = \"Log\";\n                this.sep = \"&type=block&page=\";\n                break;\n\n            case \"pagelog\":\n                this.print = specialLink;\n                this.specialpage = \"Log\";\n                this.sep = \"&page=\";\n                break;\n\n            case \"protectlog\":\n                this.print = specialLink;\n                this.specialpage = \"Log\";\n                this.sep = \"&type=protect&page=\";\n                break;\n\n            case \"deletelog\":\n                this.print = specialLink;\n                this.specialpage = \"Log\";\n                this.sep = \"&type=delete&page=\";\n                break;\n\n            case \"userSpace\":\n                this.print = specialLink;\n                this.specialpage = \"PrefixIndex\";\n                this.sep = \"&namespace=2&prefix=\";\n                break;\n\n            case \"search\":\n                this.print = specialLink;\n                this.specialpage = \"Search\";\n                this.sep = \"&fulltext=Search&search=\";\n                break;\n\n            case \"thank\":\n                this.print = specialLink;\n                this.specialpage = \"Thanks\";\n                this.sep = \"/\";\n                this.article.value = this.diff;\n                break;\n\n            case \"unwatch\":\n            case \"watch\":\n                this.print = magicWatchLink;\n                this.action = this.id + \"&autowatchlist=1&autoimpl=\" + popupString(\"autoedit_version\") + \"&actoken=\" + autoClickToken();\n                break;\n\n            case \"history\":\n            case \"historyfeed\":\n            case \"unprotect\":\n            case \"protect\":\n                this.print = wikiLink;\n                this.action = this.id;\n                break;\n\n            case \"delete\":\n                this.print = wikiLink;\n                this.action = \"delete\";\n                if (this.article.namespaceId() == pg.nsImageId) {\n                    var img = this.article.stripNamespace();\n                    this.action += \"&image=\" + img;\n                }\n                break;\n\n            case \"markpatrolled\":\n            case \"edit\":\n                delete this.oldid;\n\n            case \"view\":\n            case \"purge\":\n            case \"render\":\n                this.print = wikiLink;\n                this.action = this.id;\n                break;\n\n            case \"raw\":\n                this.print = wikiLink;\n                this.action = \"raw\";\n                break;\n\n            case \"new\":\n                this.print = wikiLink;\n                this.action = \"edit&section=new\";\n                break;\n\n            case \"mainlink\":\n                if (typeof this.text == \"undefined\") {\n                    this.text = this.article.toString().entify();\n                }\n                if (getValueOf(\"popupSimplifyMainLink\") && isInStrippableNamespace(this.article)) {\n                    var s = this.text.split(\"/\");\n                    this.text = s[s.length - 1];\n                    if (this.text === \"\" && s.length > 1) {\n                        this.text = s[s.length - 2];\n                    }\n                }\n                this.print = titledWikiLink;\n                if (typeof this.title === \"undefined\" && pg.current.link && typeof pg.current.link.href !== \"undefined\") {\n                    this.title = safeDecodeURI(pg.current.link.originalTitle ? pg.current.link.originalTitle : this.article);\n                    if (typeof this.oldid !== \"undefined\" && this.oldid) {\n                        this.title = tprintf(\"Revision %s of %s\", [this.oldid, this.title]);\n                    }\n                }\n                this.action = \"view\";\n                break;\n\n            case \"userPage\":\n            case \"article\":\n            case \"monobook\":\n            case \"editMonobook\":\n            case \"editArticle\":\n                delete this.oldid;\n                this.article = this.article.articleFromTalkOrArticle();\n                this.print = wikiLink;\n                if (this.id.indexOf(\"edit\") === 0) {\n                    this.action = \"edit\";\n                } else {\n                    this.action = \"view\";\n                }\n                break;\n\n            case \"userTalk\":\n            case \"talk\":\n                this.article = this.article.talkPage();\n                delete this.oldid;\n                this.print = wikiLink;\n                this.action = \"view\";\n                break;\n\n            case \"arin\":\n                this.print = arinLink;\n                break;\n\n            case \"count\":\n                this.print = editCounterLink;\n                break;\n\n            case \"google\":\n                this.print = googleLink;\n                break;\n\n            case \"editors\":\n                this.print = editorListLink;\n                break;\n\n            case \"globalsearch\":\n                this.print = globalSearchLink;\n                break;\n\n            case \"lastEdit\":\n                this.print = titledDiffLink;\n                this.title = popupString(\"Show the last edit\");\n                this.from = \"prev\";\n                this.to = \"cur\";\n                break;\n\n            case \"oldEdit\":\n                this.print = titledDiffLink;\n                this.title = popupString(\"Show the edit made to get revision\") + \" \" + this.oldid;\n                this.from = \"prev\";\n                this.to = this.oldid;\n                break;\n\n            case \"editOld\":\n                this.print = wikiLink;\n                this.action = \"edit\";\n                break;\n\n            case \"undo\":\n                this.print = wikiLink;\n                this.action = \"edit&undo=\";\n                break;\n\n            case \"revert\":\n                this.print = wikiLink;\n                this.action = \"revert\";\n                break;\n\n            case \"nullEdit\":\n                this.print = wikiLink;\n                this.action = \"nullEdit\";\n                break;\n\n            case \"diffCur\":\n                this.print = titledDiffLink;\n                this.title = tprintf(\"Show changes since revision %s\", [this.oldid]);\n                this.from = this.oldid;\n                this.to = \"cur\";\n                break;\n\n            case \"editUserTalk\":\n            case \"editTalk\":\n                delete this.oldid;\n                this.article = this.article.talkPage();\n                this.action = \"edit\";\n                this.print = wikiLink;\n                break;\n\n            case \"newUserTalk\":\n            case \"newTalk\":\n                this.article = this.article.talkPage();\n                this.action = \"edit&section=new\";\n                this.print = wikiLink;\n                break;\n\n            case \"lastContrib\":\n            case \"sinceMe\":\n                this.print = magicHistoryLink;\n                break;\n\n            case \"togglePreviews\":\n                this.text = popupString(pg.option.simplePopups ? \"enable previews\" : \"disable previews\");\n\n            case \"disablePopups\":\n            case \"purgePopups\":\n                this.print = popupMenuLink;\n                break;\n\n            default:\n                this.print = function() {\n                    return \"Unknown navlink type: \" + this.id + \"\";\n                };\n        }\n    };\n\n    function popupHandleKeypress(evt) {\n        var keyCode = window.event ? window.event.keyCode : evt.keyCode ? evt.keyCode : evt.which;\n        if (!keyCode || !pg.current.link || !pg.current.link.navpopup) {\n            return;\n        }\n        if (keyCode == 27) {\n            killPopup();\n            return false;\n        }\n        var letter = String.fromCharCode(keyCode);\n        var links = pg.current.link.navpopup.mainDiv.getElementsByTagName(\"A\");\n        var startLink = 0;\n        var i, j;\n        if (popupHandleKeypress.lastPopupLinkSelected) {\n            for (i = 0; i < links.length; ++i) {\n                if (links[i] == popupHandleKeypress.lastPopupLinkSelected) {\n                    startLink = i;\n                }\n            }\n        }\n        for (j = 0; j < links.length; ++j) {\n            i = (startLink + j + 1) % links.length;\n            if (links[i].getAttribute(\"popupkey\") == letter) {\n                if (evt && evt.preventDefault) evt.preventDefault();\n                links[i].focus();\n                popupHandleKeypress.lastPopupLinkSelected = links[i];\n                return false;\n            }\n        }\n        if (document.oldPopupOnkeypress) {\n            return document.oldPopupOnkeypress(evt);\n        }\n        return true;\n    }\n\n    function addPopupShortcuts() {\n        if (document.onkeypress != popupHandleKeypress) {\n            document.oldPopupOnkeypress = document.onkeypress;\n        }\n        document.onkeypress = popupHandleKeypress;\n    }\n\n    function rmPopupShortcuts() {\n        popupHandleKeypress.lastPopupLinkSelected = null;\n        try {\n            if (document.oldPopupOnkeypress && document.oldPopupOnkeypress == popupHandleKeypress) {\n                document.onkeypress = null;\n                return;\n            }\n            document.onkeypress = document.oldPopupOnkeypress;\n        } catch (nasties) {}\n    }\n\n    function addLinkProperty(html, property) {\n        var i = html.indexOf(\">\");\n        if (i < 0) {\n            return html;\n        }\n        return html.substring(0, i) + \" \" + property + html.substring(i);\n    }\n\n    function addPopupShortcut(html, key) {\n        if (!getValueOf(\"popupShortcutKeys\")) {\n            return html;\n        }\n        var ret = addLinkProperty(html, 'popupkey=\"' + key + '\"');\n        if (key == \" \") {\n            key = popupString(\"spacebar\");\n        }\n        return ret.replace(RegExp('^(.*?)(title=\")(.*?)(\".*)$', \"i\"), \"$1$2$3 [\" + key + \"]$4\");\n    }\n\n    function loadDiff(article, oldid, diff, navpop) {\n        navpop.diffData = {\n            oldRev: {},\n            newRev: {}\n        };\n        mw.loader.using(\"mediawiki.api\").then(function() {\n            var api = new mw.Api({\n                ajax: {\n                    headers: {\n                        \"Api-User-Agent\": pg.misc.userAgent\n                    }\n                }\n            });\n            var params = {\n                action: \"compare\",\n                prop: \"ids|title\"\n            };\n            if (article.title) {\n                params.fromtitle = article.title;\n            }\n            switch (diff) {\n                case \"cur\":\n                    switch (oldid) {\n                        case null:\n                        case \"\":\n                        case \"prev\":\n                            params.torelative = \"prev\";\n                            break;\n\n                        default:\n                            params.fromrev = oldid;\n                            params.torelative = \"cur\";\n                            break;\n                    }\n                    break;\n\n                case \"prev\":\n                    if (oldid) {\n                        params.fromrev = oldid;\n                    } else {\n                        params.fromtitle;\n                    }\n                    params.torelative = \"prev\";\n                    break;\n\n                case \"next\":\n                    params.fromrev = oldid || 0;\n                    params.torelative = \"next\";\n                    break;\n\n                default:\n                    params.fromrev = oldid || 0;\n                    params.torev = diff || 0;\n                    break;\n            }\n            api.get(params).then(function(data) {\n                navpop.diffData.oldRev.revid = data.compare.fromrevid;\n                navpop.diffData.newRev.revid = data.compare.torevid;\n                addReviewLink(navpop, \"popupMiscTools\");\n                var go = function() {\n                    pendingNavpopTask(navpop);\n                    var url = pg.wiki.apiwikibase + \"?format=json&formatversion=2&action=query&\";\n                    url += \"revids=\" + navpop.diffData.oldRev.revid + \"|\" + navpop.diffData.newRev.revid;\n                    url += \"&prop=revisions&rvprop=ids|timestamp|content\";\n                    getPageWithCaching(url, doneDiff, navpop);\n                    return true;\n                };\n                if (navpop.visible || !getValueOf(\"popupLazyDownloads\")) {\n                    go();\n                } else {\n                    navpop.addHook(go, \"unhide\", \"before\", \"DOWNLOAD_DIFFS\");\n                }\n            });\n        });\n    }\n\n    function addReviewLink(navpop, target) {\n        if (!pg.user.canReview) return;\n        if (navpop.diffData.newRev.revid <= navpop.diffData.oldRev.revid) return;\n        var api = new mw.Api({\n            ajax: {\n                headers: {\n                    \"Api-User-Agent\": pg.misc.userAgent\n                }\n            }\n        });\n        var params = {\n            action: \"query\",\n            prop: \"info|flagged\",\n            revids: navpop.diffData.oldRev.revid,\n            formatversion: 2\n        };\n        api.get(params).then(function(data) {\n            var stable_revid = data.query.pages[0].flagged && data.query.pages[0].flagged.stable_revid || 0;\n            if (stable_revid == navpop.diffData.oldRev.revid) {\n                var a = document.createElement(\"a\");\n                a.innerHTML = popupString(\"mark patrolled\");\n                a.title = popupString(\"markpatrolledHint\");\n                a.onclick = function() {\n                    var params = {\n                        action: \"review\",\n                        revid: navpop.diffData.newRev.revid,\n                        comment: tprintf(\"defaultpopupReviewedSummary\", [navpop.diffData.oldRev.revid, navpop.diffData.newRev.revid])\n                    };\n                    api.postWithToken(\"csrf\", params).done(function() {\n                        a.style.display = \"none\";\n                    }).fail(function() {\n                        alert(popupString(\"Could not marked this edit as patrolled\"));\n                    });\n                };\n                setPopupHTML(a, target, navpop.idNumber, null, true);\n            }\n        });\n    }\n\n    function doneDiff(download) {\n        if (!download.owner || !download.owner.diffData) {\n            return;\n        }\n        var navpop = download.owner;\n        completedNavpopTask(navpop);\n        var pages, revisions = [];\n        try {\n            pages = getJsObj(download.data).query.pages;\n            for (var i = 0; i < pages.length; i++) {\n                revisions = revisions.concat(pages[i].revisions);\n            }\n            for (i = 0; i < revisions.length; i++) {\n                if (revisions[i].revid == navpop.diffData.oldRev.revid) {\n                    navpop.diffData.oldRev.revision = revisions[i];\n                } else if (revisions[i].revid == navpop.diffData.newRev.revid) {\n                    navpop.diffData.newRev.revision = revisions[i];\n                }\n            }\n        } catch (someError) {\n            errlog(\"Could not get diff\");\n        }\n        insertDiff(navpop);\n    }\n\n    function rmBoringLines(a, b, context) {\n        if (typeof context == \"undefined\") {\n            context = 2;\n        }\n        var aa = [],\n            aaa = [];\n        var bb = [],\n            bbb = [];\n        var i, j;\n        for (i = 0; i < a.length; ++i) {\n            if (!a[i].paired) {\n                aa[i] = 1;\n            } else if (countCrossings(b, a, i, true)) {\n                aa[i] = 1;\n                bb[a[i].row] = 1;\n            }\n        }\n        for (i = 0; i < b.length; ++i) {\n            if (bb[i] == 1) {\n                continue;\n            }\n            if (!b[i].paired) {\n                bb[i] = 1;\n            }\n        }\n        for (i = 0; i < b.length; ++i) {\n            if (bb[i] == 1) {\n                for (j = Math.max(0, i - context); j < Math.min(b.length, i + context); ++j) {\n                    if (!bb[j]) {\n                        bb[j] = 1;\n                        aa[b[j].row] = .5;\n                    }\n                }\n            }\n        }\n        for (i = 0; i < a.length; ++i) {\n            if (aa[i] == 1) {\n                for (j = Math.max(0, i - context); j < Math.min(a.length, i + context); ++j) {\n                    if (!aa[j]) {\n                        aa[j] = 1;\n                        bb[a[j].row] = .5;\n                    }\n                }\n            }\n        }\n        for (i = 0; i < bb.length; ++i) {\n            if (bb[i] > 0) {\n                if (b[i].paired) {\n                    bbb.push(b[i].text);\n                } else {\n                    bbb.push(b[i]);\n                }\n            }\n        }\n        for (i = 0; i < aa.length; ++i) {\n            if (aa[i] > 0) {\n                if (a[i].paired) {\n                    aaa.push(a[i].text);\n                } else {\n                    aaa.push(a[i]);\n                }\n            }\n        }\n        return {\n            a: aaa,\n            b: bbb\n        };\n    }\n\n    function stripOuterCommonLines(a, b, context) {\n        var i = 0;\n        while (i < a.length && i < b.length && a[i] == b[i]) {\n            ++i;\n        }\n        var j = a.length - 1;\n        var k = b.length - 1;\n        while (j >= 0 && k >= 0 && a[j] == b[k]) {\n            --j;\n            --k;\n        }\n        return {\n            a: a.slice(Math.max(0, i - 1 - context), Math.min(a.length + 1, j + context + 1)),\n            b: b.slice(Math.max(0, i - 1 - context), Math.min(b.length + 1, k + context + 1))\n        };\n    }\n\n    function insertDiff(navpop) {\n        var oldlines = navpop.diffData.oldRev.revision.content.split(\"\\n\");\n        var newlines = navpop.diffData.newRev.revision.content.split(\"\\n\");\n        var inner = stripOuterCommonLines(oldlines, newlines, getValueOf(\"popupDiffContextLines\"));\n        oldlines = inner.a;\n        newlines = inner.b;\n        var truncated = false;\n        getValueOf(\"popupDiffMaxLines\");\n        if (oldlines.length > pg.option.popupDiffMaxLines || newlines.length > pg.option.popupDiffMaxLines) {\n            truncated = true;\n            inner = stripOuterCommonLines(oldlines.slice(0, pg.option.popupDiffMaxLines), newlines.slice(0, pg.option.popupDiffMaxLines), pg.option.popupDiffContextLines);\n            oldlines = inner.a;\n            newlines = inner.b;\n        }\n        var lineDiff = diff(oldlines, newlines);\n        var lines2 = rmBoringLines(lineDiff.o, lineDiff.n);\n        var oldlines2 = lines2.a;\n        var newlines2 = lines2.b;\n        var simpleSplit = !String.prototype.parenSplit.isNative;\n        var html = \"<hr />\";\n        if (getValueOf(\"popupDiffDates\")) {\n            html += diffDatesTable(navpop);\n            html += \"<hr />\";\n        }\n        html += shortenDiffString(diffString(oldlines2.join(\"\\n\"), newlines2.join(\"\\n\"), simpleSplit), getValueOf(\"popupDiffContextCharacters\")).join(\"<hr />\");\n        setPopupTipsAndHTML(html.split(\"\\n\").join(\"<br>\") + (truncated ? \"<hr /><b>\" + popupString(\"Diff truncated for performance reasons\") + \"</b>\" : \"\"), \"popupPreview\", navpop.idNumber);\n    }\n\n    function diffDatesTable(navpop) {\n        var html = '<table class=\"popup_diff_dates\">';\n        html += diffDatesTableRow(navpop.diffData.newRev.revision, tprintf(\"New revision\"));\n        html += diffDatesTableRow(navpop.diffData.oldRev.revision, tprintf(\"Old revision\"));\n        html += \"</table>\";\n        return html;\n    }\n\n    function diffDatesTableRow(revision, label) {\n        var txt = \"\";\n        var lastModifiedDate = new Date(revision.timestamp);\n        var datePrint = getValueOf(\"popupDiffDatePrinter\");\n        if (typeof lastModifiedDate[datePrint] == \"function\") {\n            var d2 = adjustDate(lastModifiedDate, getTimeOffset());\n            txt = dayFormat(d2, true) + \" \" + timeFormat(d2, true);\n        } else {\n            txt = tprintf(\"Invalid %s %s\", [\"popupDiffDatePrinter\", datePrint]);\n        }\n        var revlink = generalLink({\n            url: mw.config.get(\"wgScript\") + \"?oldid=\" + revision.revid,\n            text: label,\n            title: label\n        });\n        return simplePrintf(\"<tr><td>%s</td><td>%s</td></tr>\", [revlink, txt]);\n    }\n\n    function titledDiffLink(l) {\n        return titledWikiLink({\n            article: l.article,\n            action: l.to + \"&oldid=\" + l.from,\n            newWin: l.newWin,\n            noPopup: l.noPopup,\n            text: l.text,\n            title: l.title,\n            actionName: \"diff\"\n        });\n    }\n\n    function wikiLink(l) {\n        if (!(typeof l.article == typeof {} && typeof l.action == typeof \"\" && typeof l.text == typeof \"\")) return null;\n        if (typeof l.oldid == \"undefined\") {\n            l.oldid = null;\n        }\n        var savedOldid = l.oldid;\n        if (!/^(edit|view|revert|render)$|^raw/.test(l.action)) {\n            l.oldid = null;\n        }\n        var hint = popupString(l.action + \"Hint\");\n        var oldidData = [l.oldid, safeDecodeURI(l.article)];\n        var revisionString = tprintf(\"revision %s of %s\", oldidData);\n        log(\"revisionString=\" + revisionString);\n        switch (l.action) {\n            case \"edit&section=new\":\n                hint = popupString(\"newSectionHint\");\n                break;\n\n            case \"edit&undo=\":\n                if (l.diff && l.diff != \"prev\" && savedOldid) {\n                    l.action += l.diff + \"&undoafter=\" + savedOldid;\n                } else if (savedOldid) {\n                    l.action += savedOldid;\n                }\n                hint = popupString(\"undoHint\");\n                break;\n\n            case \"raw&ctype=text/css\":\n                hint = popupString(\"rawHint\");\n                break;\n\n            case \"revert\":\n                var p = parseParams(pg.current.link.href);\n                l.action = \"edit&autoclick=wpSave&actoken=\" + autoClickToken() + \"&autoimpl=\" + popupString(\"autoedit_version\") + \"&autosummary=\" + revertSummary(l.oldid, p.diff);\n                if (p.diff == \"prev\") {\n                    l.action += \"&direction=prev\";\n                    revisionString = tprintf(\"the revision prior to revision %s of %s\", oldidData);\n                }\n                if (getValueOf(\"popupRevertSummaryPrompt\")) {\n                    l.action += \"&autosummaryprompt=true\";\n                }\n                if (getValueOf(\"popupMinorReverts\")) {\n                    l.action += \"&autominor=true\";\n                }\n                log(\"revisionString is now \" + revisionString);\n                break;\n\n            case \"nullEdit\":\n                l.action = \"edit&autoclick=wpSave&actoken=\" + autoClickToken() + \"&autoimpl=\" + popupString(\"autoedit_version\") + \"&autosummary=null\";\n                break;\n\n            case \"historyfeed\":\n                l.action = \"history&feed=rss\";\n                break;\n\n            case \"markpatrolled\":\n                l.action = \"markpatrolled&rcid=\" + l.rcid;\n        }\n        if (hint) {\n            if (l.oldid) {\n                hint = simplePrintf(hint, [revisionString]);\n            } else {\n                hint = simplePrintf(hint, [safeDecodeURI(l.article)]);\n            }\n        } else {\n            hint = safeDecodeURI(l.article + \"&action=\" + l.action) + l.oldid ? \"&oldid=\" + l.oldid : \"\";\n        }\n        return titledWikiLink({\n            article: l.article,\n            action: l.action,\n            text: l.text,\n            newWin: l.newWin,\n            title: hint,\n            oldid: l.oldid,\n            noPopup: l.noPopup,\n            onclick: l.onclick\n        });\n    }\n\n    function revertSummary(oldid, diff) {\n        var ret = \"\";\n        if (diff == \"prev\") {\n            ret = getValueOf(\"popupQueriedRevertToPreviousSummary\");\n        } else {\n            ret = getValueOf(\"popupQueriedRevertSummary\");\n        }\n        return ret + \"&autorv=\" + oldid;\n    }\n\n    function titledWikiLink(l) {\n        if (typeof l.article == \"undefined\" || typeof l.action == \"undefined\") {\n            errlog(\"got undefined article or action in titledWikiLink\");\n            return null;\n        }\n        var base = pg.wiki.titlebase + l.article.urlString();\n        var url = base;\n        if (typeof l.actionName == \"undefined\" || !l.actionName) {\n            l.actionName = \"action\";\n        }\n        if (l.action != \"view\") {\n            url = base + \"&\" + l.actionName + \"=\" + l.action;\n        }\n        if (typeof l.oldid != \"undefined\" && l.oldid) {\n            url += \"&oldid=\" + l.oldid;\n        }\n        var cssClass = pg.misc.defaultNavlinkClassname;\n        if (typeof l.className != \"undefined\" && l.className) {\n            cssClass = l.className;\n        }\n        return generalNavLink({\n            url: url,\n            newWin: l.newWin,\n            title: typeof l.title != \"undefined\" ? l.title : null,\n            text: typeof l.text != \"undefined\" ? l.text : null,\n            className: cssClass,\n            noPopup: l.noPopup,\n            onclick: l.onclick\n        });\n    }\n    pg.fn.getLastContrib = function getLastContrib(wikipage, newWin) {\n        getHistoryInfo(wikipage, function(x) {\n            processLastContribInfo(x, {\n                page: wikipage,\n                newWin: newWin\n            });\n        });\n    };\n\n    function processLastContribInfo(info, stuff) {\n        if (!info.edits || !info.edits.length) {\n            alert(\"Popups: an odd thing happened. Please retry.\");\n            return;\n        }\n        if (!info.firstNewEditor) {\n            alert(tprintf(\"Only found one editor: %s made %s edits\", [info.edits[0].editor, info.edits.length]));\n            return;\n        }\n        var newUrl = pg.wiki.titlebase + new Title(stuff.page).urlString() + \"&diff=cur&oldid=\" + info.firstNewEditor.oldid;\n        displayUrl(newUrl, stuff.newWin);\n    }\n    pg.fn.getDiffSinceMyEdit = function getDiffSinceMyEdit(wikipage, newWin) {\n        getHistoryInfo(wikipage, function(x) {\n            processDiffSinceMyEdit(x, {\n                page: wikipage,\n                newWin: newWin\n            });\n        });\n    };\n\n    function processDiffSinceMyEdit(info, stuff) {\n        if (!info.edits || !info.edits.length) {\n            alert(\"Popups: something fishy happened. Please try again.\");\n            return;\n        }\n        var friendlyName = stuff.page.split(\"_\").join(\" \");\n        if (!info.myLastEdit) {\n            alert(tprintf(\"Couldn't find an edit by %s\\nin the last %s edits to\\n%s\", [info.userName, getValueOf(\"popupHistoryLimit\"), friendlyName]));\n            return;\n        }\n        if (info.myLastEdit.index === 0) {\n            alert(tprintf(\"%s seems to be the last editor to the page %s\", [info.userName, friendlyName]));\n            return;\n        }\n        var newUrl = pg.wiki.titlebase + new Title(stuff.page).urlString() + \"&diff=cur&oldid=\" + info.myLastEdit.oldid;\n        displayUrl(newUrl, stuff.newWin);\n    }\n\n    function displayUrl(url, newWin) {\n        if (newWin) {\n            window.open(url);\n        } else {\n            document.location = url;\n        }\n    }\n    pg.fn.purgePopups = function purgePopups() {\n        processAllPopups(true);\n        setupCache();\n        pg.option = {};\n        abortAllDownloads();\n    };\n\n    function processAllPopups(nullify, banish) {\n        for (var i = 0; pg.current.links && i < pg.current.links.length; ++i) {\n            if (!pg.current.links[i].navpopup) {\n                continue;\n            }\n            if (nullify || banish) pg.current.links[i].navpopup.banish();\n            pg.current.links[i].simpleNoMore = false;\n            if (nullify) pg.current.links[i].navpopup = null;\n        }\n    }\n    pg.fn.disablePopups = function disablePopups() {\n        processAllPopups(false, true);\n        setupTooltips(null, true);\n    };\n    pg.fn.togglePreviews = function togglePreviews() {\n        processAllPopups(true, true);\n        pg.option.simplePopups = !pg.option.simplePopups;\n        abortAllDownloads();\n    };\n\n    function magicWatchLink(l) {\n        l.onclick = simplePrintf(\"pg.fn.modifyWatchlist('%s','%s');return false;\", [l.article.toString(true).split(\"\\\\\").join(\"\\\\\\\\\").split(\"'\").join(\"\\\\'\"), this.id]);\n        return wikiLink(l);\n    }\n    pg.fn.modifyWatchlist = function modifyWatchlist(title, action) {\n        var reqData = {\n            action: \"watch\",\n            formatversion: 2,\n            titles: title,\n            uselang: mw.config.get(\"wgUserLanguage\")\n        };\n        if (action === \"unwatch\") reqData.unwatch = true;\n        var api = new mw.Api({\n            ajax: {\n                headers: {\n                    \"Api-User-Agent\": pg.misc.userAgent\n                }\n            }\n        });\n        var mwTitle = mw.Title.newFromText(title);\n        var messageName;\n        if (mwTitle && mwTitle.getNamespaceId() > 0 && mwTitle.getNamespaceId() % 2 === 1) {\n            messageName = action === \"watch\" ? \"addedwatchtext-talk\" : \"removedwatchtext-talk\";\n        } else {\n            messageName = action === \"watch\" ? \"addedwatchtext\" : \"removedwatchtext\";\n        }\n        $.when(api.postWithToken(\"watch\", reqData), mw.loader.using([\"mediawiki.api.messages\", \"mediawiki.jqueryMsg\"]).then(function() {\n            return api.loadMessagesIfMissing([messageName]);\n        })).done(function() {\n            mw.notify(mw.message(messageName, title).parseDom());\n        });\n    };\n\n    function magicHistoryLink(l) {\n        var jsUrl = \"\",\n            title = \"\",\n            onClick = \"\";\n        switch (l.id) {\n            case \"lastContrib\":\n                onClick = simplePrintf(\"pg.fn.getLastContrib('%s',%s)\", [l.article.toString(true).split(\"\\\\\").join(\"\\\\\\\\\").split(\"'\").join(\"\\\\'\"), l.newWin]);\n                title = popupString(\"lastContribHint\");\n                break;\n\n            case \"sinceMe\":\n                onClick = simplePrintf(\"pg.fn.getDiffSinceMyEdit('%s',%s)\", [l.article.toString(true).split(\"\\\\\").join(\"\\\\\\\\\").split(\"'\").join(\"\\\\'\"), l.newWin]);\n                title = popupString(\"sinceMeHint\");\n                break;\n        }\n        jsUrl = \"javascript:\" + onClick;\n        onClick += \";return false;\";\n        return generalNavLink({\n            url: jsUrl,\n            newWin: false,\n            title: title,\n            text: l.text,\n            noPopup: l.noPopup,\n            onclick: onClick\n        });\n    }\n\n    function popupMenuLink(l) {\n        var jsUrl = simplePrintf(\"javascript:pg.fn.%s()\", [l.id]);\n        var title = popupString(simplePrintf(\"%sHint\", [l.id]));\n        var onClick = simplePrintf(\"pg.fn.%s();return false;\", [l.id]);\n        return generalNavLink({\n            url: jsUrl,\n            newWin: false,\n            title: title,\n            text: l.text,\n            noPopup: l.noPopup,\n            onclick: onClick\n        });\n    }\n\n    function specialLink(l) {\n        if (typeof l.specialpage == \"undefined\" || !l.specialpage) return null;\n        var base = pg.wiki.titlebase + mw.config.get(\"wgFormattedNamespaces\")[pg.nsSpecialId] + \":\" + l.specialpage;\n        if (typeof l.sep == \"undefined\" || l.sep === null) l.sep = \"&target=\";\n        var article = l.article.urlString({\n            keepSpaces: l.specialpage == \"Search\"\n        });\n        var hint = popupString(l.specialpage + \"Hint\");\n        switch (l.specialpage) {\n            case \"Log\":\n                switch (l.sep) {\n                    case \"&user=\":\n                        hint = popupString(\"userLogHint\");\n                        break;\n\n                    case \"&type=block&page=\":\n                        hint = popupString(\"blockLogHint\");\n                        break;\n\n                    case \"&page=\":\n                        hint = popupString(\"pageLogHint\");\n                        break;\n\n                    case \"&type=protect&page=\":\n                        hint = popupString(\"protectLogHint\");\n                        break;\n\n                    case \"&type=delete&page=\":\n                        hint = popupString(\"deleteLogHint\");\n                        break;\n\n                    default:\n                        log(\"Unknown log type, sep=\" + l.sep);\n                        hint = \"Missing hint (FIXME)\";\n                }\n                break;\n\n            case \"PrefixIndex\":\n                article += \"/\";\n                break;\n        }\n        if (hint) hint = simplePrintf(hint, [safeDecodeURI(l.article)]);\n        else hint = safeDecodeURI(l.specialpage + \":\" + l.article);\n        var url = base + l.sep + article;\n        return generalNavLink({\n            url: url,\n            title: hint,\n            text: l.text,\n            newWin: l.newWin,\n            noPopup: l.noPopup\n        });\n    }\n\n    function generalLink(l) {\n        if (typeof l.url == \"undefined\") return null;\n        var url = l.url.split('\"').join(\"%22\");\n        var ret = '<a href=\"' + url + '\"';\n        if (typeof l.title != \"undefined\" && l.title) {\n            ret += ' title=\"' + pg.escapeQuotesHTML(l.title) + '\"';\n        }\n        if (typeof l.onclick != \"undefined\" && l.onclick) {\n            ret += ' onclick=\"' + pg.escapeQuotesHTML(l.onclick) + '\"';\n        }\n        if (l.noPopup) {\n            ret += \" noPopup=1\";\n        }\n        var newWin;\n        if (typeof l.newWin == \"undefined\" || l.newWin === null) {\n            newWin = getValueOf(\"popupNewWindows\");\n        } else {\n            newWin = l.newWin;\n        }\n        if (newWin) {\n            ret += ' target=\"_blank\"';\n        }\n        if (typeof l.className != \"undefined\" && l.className) {\n            ret += ' class=\"' + l.className + '\"';\n        }\n        ret += \">\";\n        if (typeof l.text == typeof \"\") {\n            ret += l.text;\n        }\n        ret += \"</a>\";\n        return ret;\n    }\n\n    function appendParamsToLink(linkstr, params) {\n        var sp = linkstr.parenSplit(RegExp('(href=\"[^\"]+?)\"', \"i\"));\n        if (sp.length < 2) return null;\n        var ret = sp.shift() + sp.shift();\n        ret += \"&\" + params + '\"';\n        ret += sp.join(\"\");\n        return ret;\n    }\n\n    function changeLinkTargetLink(x) {\n        if (x.newTarget) {\n            log(\"changeLinkTargetLink: newTarget=\" + x.newTarget);\n        }\n        if (x.oldTarget !== decodeURIComponent(x.oldTarget)) {\n            log(\"This might be an input problem: \" + x.oldTarget);\n        }\n        var cA = literalizeRegex(x.oldTarget);\n        var chs = cA.charAt(0).toUpperCase();\n        chs = \"[\" + chs + chs.toLowerCase() + \"]\";\n        var currentArticleRegexBit = chs + cA.substring(1);\n        currentArticleRegexBit = currentArticleRegexBit.split(RegExp(\"(?:[_ ]+|%20)\", \"g\")).join(\"(?:[_ ]+|%20)\").split(\"\\\\(\").join(\"(?:%28|\\\\()\").split(\"\\\\)\").join(\"(?:%29|\\\\))\");\n        currentArticleRegexBit = \"\\\\s*(\" + currentArticleRegexBit + \"(?:#[^\\\\[\\\\|]*)?)\\\\s*\";\n        var title = x.title || mw.config.get(\"wgPageName\").split(\"_\").join(\" \");\n        var lk = titledWikiLink({\n            article: new Title(title),\n            newWin: x.newWin,\n            action: \"edit\",\n            text: x.text,\n            title: x.hint,\n            className: \"popup_change_title_link\"\n        });\n        var cmd = \"\";\n        if (x.newTarget) {\n            var t = x.newTarget;\n            var s = literalizeRegex(x.newTarget);\n            cmd += \"s~\\\\[\\\\[\" + currentArticleRegexBit + \"\\\\]\\\\]~[[\" + t + \"|$1]]~g;\";\n            cmd += \"s~\\\\[\\\\[\" + currentArticleRegexBit + \"[|]~[[\" + t + \"|~g;\";\n            cmd += \"s~\\\\[\\\\[\" + s + \"\\\\|\" + s + \"\\\\]\\\\]~[[\" + t + \"]]~g\";\n        } else {\n            cmd += \"s~\\\\[\\\\[\" + currentArticleRegexBit + \"\\\\]\\\\]~$1~g;\";\n            cmd += \"s~\\\\[\\\\[\" + currentArticleRegexBit + \"[|](.*?)\\\\]\\\\]~$2~g\";\n        }\n        cmd = \"autoedit=\" + encodeURIComponent(cmd);\n        cmd += \"&autoclick=\" + encodeURIComponent(x.clickButton) + \"&actoken=\" + encodeURIComponent(autoClickToken());\n        cmd += x.minor === null ? \"\" : \"&autominor=\" + encodeURIComponent(x.minor);\n        cmd += x.watch === null ? \"\" : \"&autowatch=\" + encodeURIComponent(x.watch);\n        cmd += \"&autosummary=\" + encodeURIComponent(x.summary);\n        cmd += \"&autoimpl=\" + encodeURIComponent(popupString(\"autoedit_version\"));\n        return appendParamsToLink(lk, cmd);\n    }\n\n    function redirLink(redirMatch, article) {\n        var ret = \"\";\n        if (getValueOf(\"popupAppendRedirNavLinks\") && getValueOf(\"popupNavLinks\")) {\n            ret += \"<hr />\";\n            if (getValueOf(\"popupFixRedirs\") && typeof autoEdit != \"undefined\" && autoEdit) {\n                log(\"redirLink: newTarget=\" + redirMatch);\n                ret += addPopupShortcut(changeLinkTargetLink({\n                    newTarget: redirMatch,\n                    text: popupString(\"Redirects\"),\n                    hint: popupString(\"Fix this redirect\"),\n                    summary: simplePrintf(getValueOf(\"popupFixRedirsSummary\"), [article.toString(), redirMatch]),\n                    oldTarget: article.toString(),\n                    clickButton: getValueOf(\"popupRedirAutoClick\"),\n                    minor: true,\n                    watch: getValueOf(\"popupWatchRedirredPages\")\n                }), \"R\");\n                ret += popupString(\" to \");\n            } else ret += popupString(\"Redirects\") + popupString(\" to \");\n            return ret;\n        } else return \"<br> \" + popupString(\"Redirects\") + popupString(\" to \") + titledWikiLink({\n            article: new Title().fromWikiText(redirMatch),\n            action: \"view\",\n            text: safeDecodeURI(redirMatch),\n            title: popupString(\"Bypass redirect\")\n        });\n    }\n\n    function arinLink(l) {\n        if (!saneLinkCheck(l)) {\n            return null;\n        }\n        if (!l.article.isIpUser() || !pg.wiki.wikimedia) return null;\n        var uN = l.article.userName();\n        return generalNavLink({\n            url: \"http://ws.arin.net/cgi-bin/whois.pl?queryinput=\" + encodeURIComponent(uN),\n            newWin: l.newWin,\n            title: tprintf(\"Look up %s in ARIN whois database\", [uN]),\n            text: l.text,\n            noPopup: 1\n        });\n    }\n\n    function toolDbName(cookieStyle) {\n        var ret = mw.config.get(\"wgDBname\");\n        if (!cookieStyle) {\n            ret += \"_p\";\n        }\n        return ret;\n    }\n\n    function saneLinkCheck(l) {\n        if (typeof l.article != typeof {} || typeof l.text != typeof \"\") {\n            return false;\n        }\n        return true;\n    }\n\n    function editCounterLink(l) {\n        if (!saneLinkCheck(l)) return null;\n        if (!pg.wiki.wikimedia) return null;\n        var uN = l.article.userName();\n        var tool = getValueOf(\"popupEditCounterTool\");\n        var url;\n        var defaultToolUrl = \"//tools.wmflabs.org/supercount/index.php?user=$1&project=$2.$3\";\n        switch (tool) {\n            case \"custom\":\n                url = simplePrintf(getValueOf(\"popupEditCounterUrl\"), [encodeURIComponent(uN), toolDbName()]);\n                break;\n\n            case \"soxred\":\n            case \"kate\":\n            case \"interiot\":\n            case \"supercount\":\n            default:\n                var theWiki = pg.wiki.hostname.split(\".\");\n                url = simplePrintf(defaultToolUrl, [encodeURIComponent(uN), theWiki[0], theWiki[1]]);\n        }\n        return generalNavLink({\n            url: url,\n            title: tprintf(\"editCounterLinkHint\", [uN]),\n            newWin: l.newWin,\n            text: l.text,\n            noPopup: 1\n        });\n    }\n\n    function globalSearchLink(l) {\n        if (!saneLinkCheck(l)) return null;\n        var base = \"http://vs.aka-online.de/cgi-bin/globalwpsearch.pl?timeout=120&search=\";\n        var article = l.article.urlString({\n            keepSpaces: true\n        });\n        return generalNavLink({\n            url: base + article,\n            newWin: l.newWin,\n            title: tprintf(\"globalSearchHint\", [safeDecodeURI(l.article)]),\n            text: l.text,\n            noPopup: 1\n        });\n    }\n\n    function googleLink(l) {\n        if (!saneLinkCheck(l)) return null;\n        var base = \"https://www.google.com/search?q=\";\n        var article = l.article.urlString({\n            keepSpaces: true\n        });\n        return generalNavLink({\n            url: base + \"%22\" + article + \"%22\",\n            newWin: l.newWin,\n            title: tprintf(\"googleSearchHint\", [safeDecodeURI(l.article)]),\n            text: l.text,\n            noPopup: 1\n        });\n    }\n\n    function editorListLink(l) {\n        if (!saneLinkCheck(l)) return null;\n        var article = l.article.articleFromTalkPage() || l.article;\n        var url = \"https://xtools.wmflabs.org/articleinfo/\" + encodeURI(pg.wiki.hostname) + \"/\" + article.urlString() + \"?uselang=\" + mw.config.get(\"wgUserLanguage\");\n        return generalNavLink({\n            url: url,\n            title: tprintf(\"editorListHint\", [article]),\n            newWin: l.newWin,\n            text: l.text,\n            noPopup: 1\n        });\n    }\n\n    function generalNavLink(l) {\n        l.className = l.className === null ? \"popupNavLink\" : l.className;\n        return generalLink(l);\n    }\n\n    function getHistoryInfo(wikipage, whatNext) {\n        log(\"getHistoryInfo\");\n        getHistory(wikipage, whatNext ? function(d) {\n            whatNext(processHistory(d));\n        } : processHistory);\n    }\n\n    function getHistory(wikipage, onComplete) {\n        log(\"getHistory\");\n        var url = pg.wiki.apiwikibase + \"?format=json&formatversion=2&action=query&prop=revisions&titles=\" + new Title(wikipage).urlString() + \"&rvlimit=\" + getValueOf(\"popupHistoryLimit\");\n        log(\"getHistory: url=\" + url);\n        return startDownload(url, pg.idNumber + \"history\", onComplete);\n    }\n\n    function processHistory(download) {\n        var jsobj = getJsObj(download.data);\n        try {\n            var revisions = anyChild(jsobj.query.pages).revisions;\n            var edits = [];\n            for (var i = 0; i < revisions.length; ++i) {\n                edits.push({\n                    oldid: revisions[i].revid,\n                    editor: revisions[i].user\n                });\n            }\n            log(\"processed \" + edits.length + \" edits\");\n            return finishProcessHistory(edits, mw.config.get(\"wgUserName\"));\n        } catch (someError) {\n            log(\"Something went wrong with JSON business\");\n            return finishProcessHistory([]);\n        }\n    }\n\n    function finishProcessHistory(edits, userName) {\n        var histInfo = {};\n        histInfo.edits = edits;\n        histInfo.userName = userName;\n        for (var i = 0; i < edits.length; ++i) {\n            if (typeof histInfo.myLastEdit === \"undefined\" && userName && edits[i].editor == userName) {\n                histInfo.myLastEdit = {\n                    index: i,\n                    oldid: edits[i].oldid,\n                    previd: i === 0 ? null : edits[i - 1].oldid\n                };\n            }\n            if (typeof histInfo.firstNewEditor === \"undefined\" && edits[i].editor != edits[0].editor) {\n                histInfo.firstNewEditor = {\n                    index: i,\n                    oldid: edits[i].oldid,\n                    previd: i === 0 ? null : edits[i - 1].oldid\n                };\n            }\n        }\n        return histInfo;\n    }\n\n    function defaultize(x) {\n        if (pg.option[x] === null || typeof pg.option[x] == \"undefined\") {\n            if (typeof window[x] != \"undefined\") pg.option[x] = window[x];\n            else pg.option[x] = pg.optionDefault[x];\n        }\n    }\n\n    function newOption(x, def) {\n        pg.optionDefault[x] = def;\n    }\n\n    function setDefault(x, def) {\n        return newOption(x, def);\n    }\n\n    function getValueOf(varName) {\n        defaultize(varName);\n        return pg.option[varName];\n    }\n\n    function useDefaultOptions() {\n        for (var p in pg.optionDefault) {\n            pg.option[p] = pg.optionDefault[p];\n            if (typeof window[p] != \"undefined\") {\n                delete window[p];\n            }\n        }\n    }\n\n    function setOptions() {\n        var userIsSysop = false;\n        if (mw.config.get(\"wgUserGroups\")) {\n            for (var g = 0; g < mw.config.get(\"wgUserGroups\").length; ++g) {\n                if (mw.config.get(\"wgUserGroups\")[g] == \"sysop\") userIsSysop = true;\n            }\n        }\n        newOption(\"popupDelay\", .5);\n        newOption(\"popupHideDelay\", .5);\n        newOption(\"simplePopups\", false);\n        newOption(\"popupStructure\", \"shortmenus\");\n        newOption(\"popupActionsMenu\", true);\n        newOption(\"popupSetupMenu\", true);\n        newOption(\"popupAdminLinks\", userIsSysop);\n        newOption(\"popupShortcutKeys\", false);\n        newOption(\"popupHistoricalLinks\", true);\n        newOption(\"popupOnlyArticleLinks\", true);\n        newOption(\"removeTitles\", true);\n        newOption(\"popupMaxWidth\", 350);\n        newOption(\"popupSimplifyMainLink\", true);\n        newOption(\"popupAppendRedirNavLinks\", true);\n        newOption(\"popupTocLinks\", false);\n        newOption(\"popupSubpopups\", true);\n        newOption(\"popupDragHandle\", false);\n        newOption(\"popupLazyPreviews\", true);\n        newOption(\"popupLazyDownloads\", true);\n        newOption(\"popupAllDabsStubs\", false);\n        newOption(\"popupDebugging\", false);\n        newOption(\"popupActiveNavlinks\", true);\n        newOption(\"popupModifier\", false);\n        newOption(\"popupModifierAction\", \"enable\");\n        newOption(\"popupDraggable\", true);\n        newOption(\"popupReview\", false);\n        newOption(\"popupImages\", true);\n        newOption(\"imagePopupsForImages\", true);\n        newOption(\"popupNeverGetThumbs\", false);\n        newOption(\"popupThumbAction\", \"imagepage\");\n        newOption(\"popupImageSize\", 60);\n        newOption(\"popupImageSizeLarge\", 200);\n        newOption(\"popupFixRedirs\", false);\n        newOption(\"popupRedirAutoClick\", \"wpDiff\");\n        newOption(\"popupFixDabs\", false);\n        newOption(\"popupDabsAutoClick\", \"wpDiff\");\n        newOption(\"popupRevertSummaryPrompt\", false);\n        newOption(\"popupMinorReverts\", false);\n        newOption(\"popupRedlinkRemoval\", false);\n        newOption(\"popupRedlinkAutoClick\", \"wpDiff\");\n        newOption(\"popupWatchDisambiggedPages\", null);\n        newOption(\"popupWatchRedirredPages\", null);\n        newOption(\"popupDabWiktionary\", \"last\");\n        newOption(\"popupNavLinks\", true);\n        newOption(\"popupNavLinkSeparator\", \" &sdot; \");\n        newOption(\"popupLastEditLink\", true);\n        newOption(\"popupEditCounterTool\", \"supercount\");\n        newOption(\"popupEditCounterUrl\", \"\");\n        newOption(\"popupPreviews\", true);\n        newOption(\"popupSummaryData\", true);\n        newOption(\"popupMaxPreviewSentences\", 5);\n        newOption(\"popupMaxPreviewCharacters\", 600);\n        newOption(\"popupLastModified\", true);\n        newOption(\"popupPreviewKillTemplates\", true);\n        newOption(\"popupPreviewRawTemplates\", true);\n        newOption(\"popupPreviewFirstParOnly\", true);\n        newOption(\"popupPreviewCutHeadings\", true);\n        newOption(\"popupPreviewButton\", false);\n        newOption(\"popupPreviewButtonEvent\", \"click\");\n        newOption(\"popupPreviewDiffs\", true);\n        newOption(\"popupDiffMaxLines\", 100);\n        newOption(\"popupDiffContextLines\", 2);\n        newOption(\"popupDiffContextCharacters\", 40);\n        newOption(\"popupDiffDates\", true);\n        newOption(\"popupDiffDatePrinter\", \"toLocaleString\");\n        newOption(\"popupReviewedSummary\", popupString(\"defaultpopupReviewedSummary\"));\n        newOption(\"popupFixDabsSummary\", popupString(\"defaultpopupFixDabsSummary\"));\n        newOption(\"popupExtendedRevertSummary\", popupString(\"defaultpopupExtendedRevertSummary\"));\n        newOption(\"popupRevertSummary\", popupString(\"defaultpopupRevertSummary\"));\n        newOption(\"popupRevertToPreviousSummary\", popupString(\"defaultpopupRevertToPreviousSummary\"));\n        newOption(\"popupQueriedRevertSummary\", popupString(\"defaultpopupQueriedRevertSummary\"));\n        newOption(\"popupQueriedRevertToPreviousSummary\", popupString(\"defaultpopupQueriedRevertToPreviousSummary\"));\n        newOption(\"popupFixRedirsSummary\", popupString(\"defaultpopupFixRedirsSummary\"));\n        newOption(\"popupRedlinkSummary\", popupString(\"defaultpopupRedlinkSummary\"));\n        newOption(\"popupRmDabLinkSummary\", popupString(\"defaultpopupRmDabLinkSummary\"));\n        newOption(\"popupHistoryLimit\", 50);\n        newOption(\"popupFilters\", [popupFilterStubDetect, popupFilterDisambigDetect, popupFilterPageSize, popupFilterCountLinks, popupFilterCountImages, popupFilterCountCategories, popupFilterLastModified]);\n        newOption(\"extraPopupFilters\", []);\n        newOption(\"popupOnEditSelection\", \"cursor\");\n        newOption(\"popupPreviewHistory\", true);\n        newOption(\"popupImageLinks\", true);\n        newOption(\"popupCategoryMembers\", true);\n        newOption(\"popupUserInfo\", true);\n        newOption(\"popupHistoryPreviewLimit\", 25);\n        newOption(\"popupContribsPreviewLimit\", 25);\n        newOption(\"popupRevDelUrl\", \"//en.wikipedia.org/wiki/Wikipedia:Revision_deletion\");\n        newOption(\"popupShowGender\", true);\n        newOption(\"popupNewWindows\", false);\n        newOption(\"popupLinksNewWindow\", {\n            lastContrib: true,\n            sinceMe: true\n        });\n        newOption(\"popupDabRegexp\", \"(\\\\{\\\\{\\\\s*disambig(?!uation needed)|disambig(uation|)\\\\s*\\\\}\\\\}|disamb\\\\s*\\\\}\\\\}|dab\\\\s*\\\\}\\\\})|\\\\{\\\\{\\\\s*(((geo|hn|road?|school|number)dis)|[234][lc][acw]|(road|ship)index)(\\\\s*[|][^}]*)?\\\\s*[}][}]|is a .*disambiguation.*page\");\n        newOption(\"popupAnchorRegexp\", \"anchors?\");\n        newOption(\"popupStubRegexp\", \"(sect)?stub[}][}]|This .*-related article is a .*stub\");\n        newOption(\"popupImageVarsRegexp\", \"image|image_(?:file|skyline|name|flag|seal)|cover|badge|logo\");\n    }\n    pg.string = {\n        article: \"article\",\n        category: \"category\",\n        categories: \"categories\",\n        image: \"image\",\n        images: \"images\",\n        stub: \"stub\",\n        \"section stub\": \"section stub\",\n        \"Empty page\": \"Empty page\",\n        kB: \"kB\",\n        bytes: \"bytes\",\n        day: \"day\",\n        days: \"days\",\n        hour: \"hour\",\n        hours: \"hours\",\n        minute: \"minute\",\n        minutes: \"minutes\",\n        second: \"second\",\n        seconds: \"seconds\",\n        week: \"week\",\n        weeks: \"weeks\",\n        search: \"search\",\n        SearchHint: \"Find English Wikipedia articles containing %s\",\n        web: \"web\",\n        global: \"global\",\n        globalSearchHint: \"Search across Wikipedias in different languages for %s\",\n        googleSearchHint: \"Google for %s\",\n        actions: \"actions\",\n        popupsMenu: \"popups\",\n        togglePreviewsHint: \"Toggle preview generation in popups on this page\",\n        \"enable previews\": \"enable previews\",\n        \"disable previews\": \"disable previews\",\n        \"toggle previews\": \"toggle previews\",\n        \"show preview\": \"show preview\",\n        reset: \"reset\",\n        \"more...\": \"more...\",\n        disable: \"disable popups\",\n        disablePopupsHint: \"Disable popups on this page. Reload page to re-enable.\",\n        historyfeedHint: \"RSS feed of recent changes to this page\",\n        purgePopupsHint: \"Reset popups, clearing all cached popup data.\",\n        PopupsHint: \"Reset popups, clearing all cached popup data.\",\n        spacebar: \"space\",\n        view: \"view\",\n        \"view article\": \"view article\",\n        viewHint: \"Go to %s\",\n        talk: \"talk\",\n        \"talk page\": \"talk page\",\n        \"this&nbsp;revision\": \"this&nbsp;revision\",\n        \"revision %s of %s\": \"revision %s of %s\",\n        \"Revision %s of %s\": \"Revision %s of %s\",\n        \"the revision prior to revision %s of %s\": \"the revision prior to revision %s of %s\",\n        \"Toggle image size\": \"Click to toggle image size\",\n        del: \"del\",\n        \"delete\": \"delete\",\n        deleteHint: \"Delete %s\",\n        undeleteShort: \"un\",\n        UndeleteHint: \"Show the deletion history for %s\",\n        protect: \"protect\",\n        protectHint: \"Restrict editing rights to %s\",\n        unprotectShort: \"un\",\n        unprotectHint: \"Allow %s to be edited by anyone again\",\n        \"send thanks\": \"send thanks\",\n        ThanksHint: \"Send a thank you notification to this user\",\n        move: \"move\",\n        \"move page\": \"move page\",\n        MovepageHint: \"Change the title of %s\",\n        edit: \"edit\",\n        \"edit article\": \"edit article\",\n        editHint: \"Change the content of %s\",\n        \"edit talk\": \"edit talk\",\n        \"new\": \"new\",\n        \"new topic\": \"new topic\",\n        newSectionHint: \"Start a new section on %s\",\n        \"null edit\": \"null edit\",\n        nullEditHint: \"Submit an edit to %s, making no changes \",\n        hist: \"hist\",\n        history: \"history\",\n        historyHint: \"List the changes made to %s\",\n        last: \"prev\",\n        lastEdit: \"lastEdit\",\n        \"mark patrolled\": \"mark patrolled\",\n        markpatrolledHint: \"Mark this edit as patrolled\",\n        \"Could not marked this edit as patrolled\": \"Could not marked this edit as patrolled\",\n        \"show last edit\": \"most recent edit\",\n        \"Show the last edit\": \"Show the effects of the most recent change\",\n        lastContrib: \"lastContrib\",\n        \"last set of edits\": \"latest edits\",\n        lastContribHint: \"Show the net effect of changes made by the last editor\",\n        cur: \"cur\",\n        diffCur: \"diffCur\",\n        \"Show changes since revision %s\": \"Show changes since revision %s\",\n        \"%s old\": \"%s old\",\n        oldEdit: \"oldEdit\",\n        purge: \"purge\",\n        purgeHint: \"Demand a fresh copy of %s\",\n        raw: \"source\",\n        rawHint: \"Download the source of %s\",\n        render: \"simple\",\n        renderHint: \"Show a plain HTML version of %s\",\n        \"Show the edit made to get revision\": \"Show the edit made to get revision\",\n        sinceMe: \"sinceMe\",\n        \"changes since mine\": \"diff my edit\",\n        sinceMeHint: \"Show changes since my last edit\",\n        \"Couldn't find an edit by %s\\nin the last %s edits to\\n%s\": \"Couldn't find an edit by %s\\nin the last %s edits to\\n%s\",\n        eds: \"eds\",\n        editors: \"editors\",\n        editorListHint: \"List the users who have edited %s\",\n        related: \"related\",\n        relatedChanges: \"relatedChanges\",\n        \"related changes\": \"related changes\",\n        RecentchangeslinkedHint: \"Show changes in articles related to %s\",\n        editOld: \"editOld\",\n        rv: \"rv\",\n        revert: \"revert\",\n        revertHint: \"Revert to %s\",\n        defaultpopupReviewedSummary: \"Accepted by reviewing the [[Special:diff/%s/%s|difference]] between this version and previously accepted version using [[:en:Wikipedia:Tools/Navigation_popups|popups]]\",\n        defaultpopupRedlinkSummary: \"Removing link to empty page [[%s]] using [[:en:Wikipedia:Tools/Navigation_popups|popups]]\",\n        defaultpopupFixDabsSummary: \"Disambiguate [[%s]] to [[%s]] using [[:en:Wikipedia:Tools/Navigation_popups|popups]]\",\n        defaultpopupFixRedirsSummary: \"Redirect bypass from [[%s]] to [[%s]] using [[:en:Wikipedia:Tools/Navigation_popups|popups]]\",\n        defaultpopupExtendedRevertSummary: \"Revert to revision dated %s by %s, oldid %s using [[:en:Wikipedia:Tools/Navigation_popups|popups]]\",\n        defaultpopupRevertToPreviousSummary: \"Revert to the revision prior to revision %s using [[:en:Wikipedia:Tools/Navigation_popups|popups]]\",\n        defaultpopupRevertSummary: \"Revert to revision %s using [[:en:Wikipedia:Tools/Navigation_popups|popups]]\",\n        defaultpopupQueriedRevertToPreviousSummary: \"Revert to the revision prior to revision $1 dated $2 by $3 using [[:en:Wikipedia:Tools/Navigation_popups|popups]]\",\n        defaultpopupQueriedRevertSummary: \"Revert to revision $1 dated $2 by $3 using [[:en:Wikipedia:Tools/Navigation_popups|popups]]\",\n        defaultpopupRmDabLinkSummary: \"Remove link to dab page [[%s]] using [[:en:Wikipedia:Tools/Navigation_popups|popups]]\",\n        Redirects: \"Redirects\",\n        \" to \": \" to \",\n        \"Bypass redirect\": \"Bypass redirect\",\n        \"Fix this redirect\": \"Fix this redirect\",\n        disambig: \"disambig\",\n        disambigHint: \"Disambiguate this link to [[%s]]\",\n        \"Click to disambiguate this link to:\": \"Click to disambiguate this link to:\",\n        \"remove this link\": \"remove this link\",\n        \"remove all links to this page from this article\": \"remove all links to this page from this article\",\n        \"remove all links to this disambig page from this article\": \"remove all links to this disambig page from this article\",\n        mainlink: \"mainlink\",\n        wikiLink: \"wikiLink\",\n        wikiLinks: \"wikiLinks\",\n        \"links here\": \"links here\",\n        whatLinksHere: \"whatLinksHere\",\n        \"what links here\": \"what links here\",\n        WhatlinkshereHint: \"List the pages that are hyperlinked to %s\",\n        unwatchShort: \"un\",\n        watchThingy: \"watch\",\n        watchHint: \"Add %s to my watchlist\",\n        unwatchHint: \"Remove %s from my watchlist\",\n        \"Only found one editor: %s made %s edits\": \"Only found one editor: %s made %s edits\",\n        \"%s seems to be the last editor to the page %s\": \"%s seems to be the last editor to the page %s\",\n        rss: \"rss\",\n        \"Diff truncated for performance reasons\": \"Diff truncated for performance reasons\",\n        \"Old revision\": \"Old revision\",\n        \"New revision\": \"New revision\",\n        \"Something went wrong :-(\": \"Something went wrong :-(\",\n        \"Empty revision, maybe non-existent\": \"Empty revision, maybe non-existent\",\n        \"Unknown date\": \"Unknown date\",\n        \"Empty category\": \"Empty category\",\n        \"Category members (%s shown)\": \"Category members (%s shown)\",\n        \"No image links found\": \"No image links found\",\n        \"File links\": \"File links\",\n        \"No image found\": \"No image found\",\n        \"Image from Commons\": \"Image from Commons\",\n        \"Description page\": \"Description page\",\n        \"Alt text:\": \"Alt text:\",\n        revdel: \"Hidden revision\",\n        user: \"user\",\n        \"user&nbsp;page\": \"user&nbsp;page\",\n        \"user talk\": \"user talk\",\n        \"edit user talk\": \"edit user talk\",\n        \"leave comment\": \"leave comment\",\n        email: \"email\",\n        \"email user\": \"email user\",\n        EmailuserHint: \"Send an email to %s\",\n        space: \"space\",\n        PrefixIndexHint: \"Show pages in the userspace of %s\",\n        count: \"count\",\n        \"edit counter\": \"edit counter\",\n        editCounterLinkHint: \"Count the contributions made by %s\",\n        contribs: \"contribs\",\n        contributions: \"contributions\",\n        deletedContribs: \"deleted contributions\",\n        DeletedcontributionsHint: \"List deleted edits made by %s\",\n        ContributionsHint: \"List the contributions made by %s\",\n        log: \"log\",\n        \"user log\": \"user log\",\n        userLogHint: \"Show %s's user log\",\n        arin: \"ARIN lookup\",\n        \"Look up %s in ARIN whois database\": \"Look up %s in the ARIN whois database\",\n        unblockShort: \"un\",\n        block: \"block\",\n        \"block user\": \"block user\",\n        IpblocklistHint: \"Unblock %s\",\n        BlockipHint: \"Prevent %s from editing\",\n        \"block log\": \"block log\",\n        blockLogHint: \"Show the block log for %s\",\n        protectLogHint: \"Show the protection log for %s\",\n        pageLogHint: \"Show the page log for %s\",\n        deleteLogHint: \"Show the deletion log for %s\",\n        \"Invalid %s %s\": \"The option %s is invalid: %s\",\n        \"No backlinks found\": \"No backlinks found\",\n        \" and more\": \" and more\",\n        undo: \"undo\",\n        undoHint: \"undo this edit\",\n        \"Download preview data\": \"Download preview data\",\n        \"Invalid or IP user\": \"Invalid or IP user\",\n        \"Not a registered username\": \"Not a registered username\",\n        BLOCKED: \"BLOCKED\",\n        \" edits since: \": \" edits since: \",\n        \"last edit on \": \"last edit on \",\n        \"Enter a non-empty edit summary or press cancel to abort\": \"Enter a non-empty edit summary or press cancel to abort\",\n        \"Failed to get revision information, please edit manually.\\n\\n\": \"Failed to get revision information, please edit manually.\\n\\n\",\n        \"The %s button has been automatically clicked. Please wait for the next page to load.\": \"The %s button has been automatically clicked. Please wait for the next page to load.\",\n        \"Could not find button %s. Please check the settings in your javascript file.\": \"Could not find button %s. Please check the settings in your javascript file.\",\n        \"Open full-size image\": \"Open full-size image\",\n        zxy: \"zxy\",\n        autoedit_version: \"np20140416\"\n    };\n\n    function popupString(str) {\n        if (!window.popupNoTranslation) window.popupNoTranslation = [];\n        if (typeof popupStrings != \"undefined\" && popupStrings && popupStrings[str]) {\n            return popupStrings[str];\n        }\n        if (pg.string[str]) {\n            if (!window.popupNoTranslation.includes(str)) {\n                window.popupNoTranslation.push(str);\n                console.groupCollapsed(\"Gadget Popups\", \"can't find the translation of\", str, \", use the default text [\" + pg.string[str] + \"].\");\n                console.info(new Error().stack);\n                console.groupEnd();\n            }\n            return pg.string[str];\n        }\n        if (!window.popupNoTranslation.includes(str)) {\n            window.popupNoTranslation.push(str);\n            console.groupCollapsed(\"Gadget Popups\", \"can't find the translation of\", str, \", and no default text found.\");\n            console.info(new Error().stack);\n            console.groupEnd();\n        }\n        return str;\n    }\n\n    function tprintf(str, subs) {\n        if (typeof subs != typeof []) {\n            subs = [subs];\n        }\n        return simplePrintf(popupString(str), subs);\n    }\n    if (document.readyState == \"complete\") autoEdit();\n    else $(window).on(\"load\", autoEdit);\n    (function() {\n        var once = true;\n\n        function dynamicContentHandler($content) {\n            if ($content.attr(\"id\") == \"mw-content-text\") {\n                if (once) {\n                    once = false;\n                    return;\n                }\n            }\n\n            function registerHooksForVisibleNavpops() {\n                for (var i = 0; pg.current.links && i < pg.current.links.length; ++i) {\n                    var navpop = pg.current.links[i].navpopup;\n                    if (!navpop || !navpop.isVisible()) {\n                        continue;\n                    }\n                    Navpopup.tracker.addHook(posCheckerHook(navpop));\n                }\n            }\n\n            function doIt() {\n                registerHooksForVisibleNavpops();\n                $content.each(function() {\n                    this.ranSetupTooltipsAlready = false;\n                    setupTooltips(this);\n                });\n            }\n            setupPopups(doIt);\n        }\n        mw.hook(\"wikipage.content\").add(dynamicContentHandler);\n        mw.hook(\"ext.echo.overlay.beforeShowingOverlay\").add(function($overlay) {\n            dynamicContentHandler($overlay.find(\".mw-echo-state\"));\n        });\n    })();\n});"}}}