{"parse":{"title":"\u6a21\u5757:LinksShow","pageid":303266,"wikitext":{"*":"local module = {}\n\nlocal getArgs = require('Module:Arguments').getArgs\nlocal getCode = require('Module:getPageCode')\n\nlocal randomSeed = 0\nfunction random(count, min, max)\n\trandomSeed = randomSeed + 1\n\tmath.randomseed(tostring(os.time()):reverse():sub(1, 7)..randomSeed)\n\t\n\tif count == 1 then\n\t\treturn math.random(min, max)\t\n\tend\n\t\n\tlocal order = {}\n\tfunction test(num)\n\t\tfor i=1, #order do\n\t\t\tif num == order[i] then\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\n\t\n\trepeat\n\t    local ran = math.random(min, max)\n\t\tif test(ran) == false then  \n\t\t\torder[#order + 1] = ran\n\t\tend\n\tuntil(#order == count)\n\t\n\treturn order\nend\n\nfunction _main(args, frame)\n\tlocal pageName = args[1]\n\tlocal dislodge = mw.text.split(args['dis'] or '', '\uff0c') \n\tlocal data = ''\n\t\n\tif string.find(pageName, '%[%[.-%]%]') then\n\t\tdata = pageName\t\n\telse\n\t\tlocal code = getCode(pageName)\n\t\tif code == nil then return 0 end\n\t\tlocal ptn = '^\\{\\{(links|links\\/br|dl|dis)\\|'\n\t\tlocal cheapCode = string.gsub(code, '%b{}', function(s)\n\t\t  local isMatched = frame:expandTemplate{ title = 'regex', args = { 'test', s, ptn } }\n\t      if isMatched ~= '1' then \n\t    \treturn (string.gsub(s, '^{', '\u0178\u0178'):gsub('}$', '\u2021\u2021'))\n\t      end\n\t\tend)\n\t\t\n\t\tfunction saving(code)\n\t\t\tlocal maxCutLen = tonumber((args['savingLevel'] or 0) + 1) * 1000\n\t\t\tif maxCutLen > 1000 then\n\t\t\t\tlocal cutBorder = code:len() - maxCutLen\n\t\t\t\tif cutBorder < 1 then return code end\n\t\t\t\t\n\t\t\t\tlocal cutStart = random(1, 1, cutBorder)\n\t\t\t\tlocal cutEnd = cutStart + maxCutLen\n\t\t\t\treturn code:sub(cutStart, cutEnd)\n\t\t\telse return code end\n\t\tend\n\t\t\n\t\tdata = frame:preprocess(saving(cheapCode))\n\tend\n\t\n\tif args['dis'] and string.find(args['dis'], '^%s*$') == nil then\n\t\tfor i, v in ipairs(dislodge) do\n\t\t\tlocal ptn = '%[%[:'..mw.ustring.gsub(mw.text.trim(v), '([%%%(%)%.%+%-%*%?%[%]%^%$])', '%%%1')..'.-%]%]'\n\t\t\tdata = mw.ustring.gsub(data, ptn, '')\n\t\tend\t\t\n\tend\n\n\t\n\tlocal num = tonumber(args['num']) or 19 \n\tlocal links = {}\n\tlocal iter = string.gmatch(data, '%[%[(.-)%]%]')\n\tfor v in iter do\n\t\tv = string.gsub(v, '<.->', '')\n\t\tlocal link = v\n\t\tlocal text = v\n\t\tif string.find(v, '|') then\n\t\t\tlink = string.gsub(v, '([^|]*)%|?([^|]*)', '%1')\n\t\t\ttext = string.gsub(v, '[^|]*%|?([^|]*)', '%1')\t    \t\t\n\t\tend\n\t\tif mw.ustring.find(text, '^[\u67e5\u8bba\u7f16]$') == nil then\n\t\t\tlocal r = random(1, 0, 255)\n\t\t\tlocal g = random(1, 0, 255)\n\t\t\tlocal b = random(1, 0, 255)\n\t\t\tlocal element = '[['..link..'|<span style=\"display:inline-block; color:rgb('..r..','..g..','..b..');\">'..text..'</span>]]'\n\t\t\tlinks[#links + 1] = element\n\t\tend\n\tend\n\t\n\tif #links < 19 then return 1 end\n\t\n\tlocal set = {}\n\tlocal ran = random(num, 1, #links)\n\tfor i=1, num do\n\t\tset[#set + 1] = links[ran[i]]\t\n\tend\n\t\n\tlocal str = ''\n\tfor i=1, #set do\n\t\tstr = str..set[i]..'$'\n\tend\n\t\n\treturn str\nend\n\nfunction module.main(frame)\n\tlocal args = getArgs(frame)\n\treturn _main(args, frame)\nend\n\nreturn module"}}}