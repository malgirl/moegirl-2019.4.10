{"parse":{"title":"\u6a21\u5757:Sandbox/\u7dad\u57fa\u6417\u86cb\u9b3c/talkpage","pageid":200349,"wikitext":{"*":"--[[\n    \u7121\u8166\u5730\u5f9e[:zhwiki:Module:\u6c99\u76d2/\u9006\u8972\u7684\u5929\u90aa\u9b3c/talkpage]\u7c98\u4e86\u904e\u4f86\u3002\u90fd\u662f\u6211\u5beb\u7684\uff0c\u5225\u8b1b\u7a76\u4e86\u2026\u2026\n]]--\n\nlocal f = {}\n\nf.DATEPATTERN = '(%d-)\u5e74(%d-)\u6708(%d-)\u65e5 %([\u4e00\u4e8c\u4e09\u56db\u4e94\u516d\u65e5]-%) (%d-):(%d-) %(CST%)'\nf.USERPREFIX = {\n    'user:', '\u7528\u6236:', '\u7528\u6237:', '\u4f7f\u7528\u8005:',\n    'user talk:', 'user_talk:', '\u7528\u6236\u8a0e\u8ad6:', '\u7528\u6237\u8ba8\u8bba:', '\u4f7f\u7528\u8005\u8a0e\u8ad6:',\n    'special:\u7528\u6237\u8d21\u732e/', 'special:contributions/', 'special:\u7528\u6236\u8ca2\u737b/', 'special:\u4f7f\u7528\u8005\u8ca2\u737b/',\n    '\u7279\u6b8a:\u7528\u6237\u8d21\u732e/', '\u7279\u6b8a:\u7528\u6236\u8ca2\u737b/', '\u7279\u6b8a:\u4f7f\u7528\u8005\u8ca2\u737b/', '\u7279\u6b8a:contributions/'\n}\nf.MINDATE = '1970\u5e741\u67081\u65e5 (\u516d) 13:00 (CST)'\nf.MAXDATE = '9999\u5e7412\u670831\u65e5 (\u516d) 23:59 (CST)'\n\n--- \u53cd\u5e8f\u5c0b\u627e\u5b57\u7b26\u4e32\nlocal function rfind(s, pattern, init)\n    local x, y\n    local i = init or #s\n    local len = #s\n    x, y = string.find(string.reverse(s), string.reverse(pattern), len-i+1, true)\n    if x then\n        return len-y+1, len-x+1\n    end\nend\n\n--- \u751f\u6210\u7528\u6236\u540d\u93c8\u63a5\u3002\u9ed8\u8a8d\u662f\u6307\u5411\u7528\u6236\u9801\uff08IP\u7528\u6236\u70ba\u8ca2\u737b\u9801\uff09\u7684\u93c8\u63a5\u3002\n-- @param name \u7528\u6236\u540d\n-- @param style \u81ea\u5b9a\u7fa9\u6a23\u5f0f\uff0c\u5176\u4e2d$USER\u6703\u88ab\u63db\u6210\u7528\u6236\u540d\u3002\n-- @param ipstyle IP\u7528\u6236\u7684\u81ea\u5b9a\u7fa9\u6a23\u5f0f\u3002\u82e5\u672a\u6307\u5b9a\u5247\u8207style\u76f8\u540c\u3002\n-- @return \u7dad\u57fa\u683c\u5f0f\u7684\u7528\u6236\u540d\u93c8\u63a5\nlocal function getuserlink(name, style, ipstyle)\n    if string.find(name, '^%d-%.%d-%.%d-%.%d-$') then\n        return string.gsub(ipstyle or style or '[[Special:\u7528\u6237\u8d21\u732e/$USER|$USER]]', '$USER', name)\n    else\n        return string.gsub(style or '[[User:$USER|$USER]]', '$USER', name)\n    end\nend\n\n--- TODO \u53bb\u9664\u6389\u5f71\u97ff\u5206\u6790\u7684\u6587\u5b57\uff0c\u4f8b\u5982\u300c===\u300d\u3001\u300c<pre>\u300d\u7b49\n-- @param orintext \u539f\u59cb\u8a0e\u8ad6\u4e32\u3002\n-- @return \u7d93\u904e\u9810\u8655\u7406\u4e4b\u5f8c\u7684\u8a0e\u8ad6\u4e32\u3002\u53bb\u6389\u4e00\u4e9b\u6417\u4e82\u7684\u5167\u5bb9\u3002\nlocal function preprocess(orintext, titlelevel)\n    local text = orintext\n    text = string.gsub(text, titlelevel .. '=', '---')\n    text = string.gsub(text, '<pre>.-</pre>', '')\n    text = string.gsub(text, '<nowiki>.-</nowiki>', '')\n    text = string.gsub(text, '{{\u79fb\u52d5\u81f3|.-}}', '')\n    text = string.gsub(text, '{{talkback|.-}}', '')\n    text = string.gsub(text, '{{deltalk|.-}}', '')\n    text = string.gsub(text, '{{\u79fb\u52a8\u81ea|.-}}', '')\n    return text\nend\n\n--- \u5f9e\u9577\u9577\u7684\u8a0e\u8ad6\u4e32\u4e2d\u627e\u5230\u7279\u5b9a\u4e3b\u984c\u3002\u5982\u679c\u672a\u6307\u5b9a\u4e3b\u984c\u5247\u5c07\u6240\u6709\u4e3b\u984c\u5206\u5272\u958b\u4e26\u5b58\u5165table\u4e2d\u3002\n-- @param orintext \u539f\u59cb\u8a0e\u8ad6\u4e32\u3002\n-- @param topic \u5f85\u63d0\u53d6\u7684\u4e3b\u984c\u3002\u672a\u6307\u5b9a\u7684\u8a71\u5247\u6539\u70ba\u5206\u5272\u6240\u6709\u4e3b\u984c\u3002\n-- @param ispattern \u8868\u793atopic\u662f\u5426\u70balua\u7684\u5339\u914d\u5b57\u7b26\u4e32\u3002\n-- @return \u8fd4\u56de\u4e00\u500b\u9375\u70ba\u8a0e\u8ad6\u6a19\u984c\u503c\u70ba\u8a0e\u8ad6\u5167\u5bb9\u7684table\u3002\u5982\u679c\u6c92\u6709\u5247\u8fd4\u56denil\u3002\nlocal function extracttopic(args)\n    local orintext = args.text\n    local topic = args.topic\n    local ispattern = args.ispattern\n    local titlelevel = args.titlelevel=='3' and '===' or '=='\n\n    -- \u9810\u8655\u7406\n    local text = titlelevel .. '\\n\\n' .. preprocess(orintext, titlelevel) .. '\\n' .. titlelevel\n\n    local result = {}\n    local found = nil\n    local topic2 = topic and mw.text.trim(topic)\n\n    for title, content in string.gmatch(text, '[ ]*(.-)[ ]*'..titlelevel..'[ ]*\\n(.-)\\n'..titlelevel) do\n        local ok = false\n        if topic2 and (not ispattern) and title == topic2 then\n            ok = true\n        elseif topic2 and ispattern and (string.match(title, topic2)) then\n            ok = true\n        elseif not topic2 then\n            ok = true\n        end\n\n        if ok then\n            found = true\n\n            local temptitle = title\n            local i = 1\n            while result[temptitle] do\n                i = i + 1\n                temptitle = title .. ' (' .. i .. ')'\n            end\n            result[temptitle] = content\n        end\n    end\n\n    return found and result\nend\n\n--- \u5c07\u8a0e\u8ad6\u4e32\u4e0a\u7684\u65e5\u671f\u8f49\u70ba\u4e00\u500b\u6578\u5b57\u3002\n-- @param date \u8a0e\u8ad6\u4e32\u683c\u5f0f\u7684\u65e5\u671f\u3002\n-- @return \u5c07\u6578\u5b57\u76f4\u63a5\u62fc\u8d77\u4f86\u3002\u4e0d\u662f\u6642\u9593\u6233\u3002\nlocal function date2num(date)\n    local y,m,d,h,min = string.gmatch(date, f.DATEPATTERN)()\n    if y and m and d and h and min then\n        return y*100000000+m*1000000+d*10000+h*100+min\n    else\n        return 0\n    end\nend\n\n--- \u6bd4\u8f03\u5169\u500b\u65e5\u671f\u7684\u5927\u5c0f\u3002\n-- @param date1\n-- @param date2\n-- @return \u82e5date1<date2\u5247\u8fd4\u56detrue\u3002\nlocal function comparedate(date1, date2)\n    return date2num(date1) < date2num(date2)\nend\n\n--- \u7d71\u8a08\u8a0e\u8ad6\u4e32\u4e2d\u5404\u500b\u7c3d\u540d\u7684\u6b21\u6578\u548c\u6700\u5f8c\u767c\u8a00\u6642\u9593\u3002\n-- @param orintext \u539f\u59cb\u8a0e\u8ad6\u4e32\n-- @return @todo TODO \u9700\u8981\u91cd\u5beb\nfunction f._count(orintext)\n    -- \u9810\u8655\u7406\n    local text = '\\n' .. orintext\n    local lowertext = string.lower(text)\n\n    -- \u5c0b\u627e\u65e5\u671f\n    local result = {}\n    local x, y\n    y = 1\n    repeat\n        x, y = text.find(text, f.DATEPATTERN, y+1)\n        if not x then\n            break\n        end\n\n        local date = string.sub(text, x, y)\n\n        -- \u622a\u53d6\u7576\u524d\u884c\u4ee5\u4fbf\u65bc\u5c0b\u627e\u7528\u6236\u540d\n        local t1, t2 = rfind(text, '\\n', x)\n        local curtalk = string.sub(lowertext, t1, x-1)\n\n        -- \u5c0b\u627e\u7528\u6236\u540d\n        local name = nil\n        for i, v in ipairs(f.USERPREFIX) do\n            local t3, t4 = rfind(curtalk, '[[' .. v)\n            if t4 then\n                local t5 = (string.find(curtalk, '[/#|%]]', t4))\n                if t5 then\n                    -- \u78ba\u5b9a\u7528\u6236\u540d\n                    name = string.sub(text, t1+t4, t1+t5-2)\n\n                    -- \u9996\u5b57\u6bcd\u5927\u5beb\n                    local firstletter = string.byte(name, 1, 1)\n                    if firstletter >= 97 and firstletter <=122 then\n                        name = string.upper(string.sub(name, 1, 1)) .. string.sub(name, 2, -1)\n                    end\n                    break\n                end\n            end\n        end\n        name = name or 'Example'\n\n        if not result[name] then\n            result[name] = {count = 1, firstdate = date, lastdate = date}\n        else\n            result[name].count = result[name].count + 1\n            if comparedate(result[name].lastdate, date) then\n                result[name].lastdate = date\n            end\n            if comparedate(date, result[name].firstdate) then\n                result[name].firstdate = date\n            end\n        end\n    until false\n    return result\nend\n\nlocal function maketable(counttable, args)\n    local tabletype = args.tabletype and mw.text.trim(args.tabletype) or 'user'\n    local top = '{| class=\"wikitable sortable\"\\n|-'\n    local header\n\n    if tabletype == 'all' then\n        top = '{| class=\"wikitable\"\\n|-'\n    end\n\n    local result = { top }\n\n    if tabletype == 'topic' then\n        table.insert(result, '! \u4e3b\u984c !! \u767c\u8a00\u6b21\u6578 !! \u53c3\u8207\u8005\u4eba\u6578 !! \u767c\u8d77\u4eba !! \u6700\u5f8c\u767c\u8a00\u8005 !! \u6700\u5f8c\u767c\u8a00\u6642\u9593')\n        for k, v in pairs(counttable.topics) do\n            if v.count > 0 then\n                table.insert(result, string.format('|-\\n| %s || %s || %s || %s || %s || %s',\n                k, v.count, v.usercount, getuserlink(v.firstname, args.userlink, args.ipuserlink),\n                getuserlink(v.lastname, args.userlink, args.ipuserlink), v.lastdate))\n            end\n        end\n    elseif tabletype == 'topicsimple' then\n        table.insert(result, '! \u4e3b\u984c !! \u767c\u8a00\u6b21\u6578 !! \u6700\u5f8c\u767c\u8a00\u8005 !! \u6700\u5f8c\u767c\u8a00\u6642\u9593')\n        for k, v in pairs(counttable.topics) do\n            if v.count > 0 then\n                table.insert(result, string.format('|-\\n| %s || %s || %s || %s',\n                k, v.count, getuserlink(v.lastname, args.userlink, args.ipuserlink), v.lastdate))\n            end\n        end\n    elseif tabletype == 'all' then\n        table.insert(result, '! \u4e3b\u984c !! \u7528\u6236 !! \u767c\u8a00\u6b21\u6578 !! \u6700\u5f8c\u767c\u8a00\u6642\u9593')\n        for k, v in pairs(counttable.topics) do\n            if v.count > 0 then\n                local first = k .. ' || '\n                if v.usercount > 1 then\n                    first = 'rowspan=' .. v.usercount .. ' | ' .. first\n                end\n                for k2, v2 in pairs(v.users) do\n                    table.insert(result, string.format('|-\\n| %s%s || %s || %s',\n                        first, getuserlink(k2, args.userlink, args.ipuserlink), v2.count, v2.lastdate))\n                    first = ''\n                end\n            end\n        end\n    else\n        table.insert(result, '! \u7528\u6236 !! \u767c\u8a00\u6b21\u6578 !! \u6700\u5f8c\u767c\u8a00\u6642\u9593')\n        for k, v in pairs(counttable.users) do\n            table.insert(result, string.format('|-\\n| %s || %s || %s', getuserlink(k, args.userlink, args.ipuserlink), v.count, v.lastdate))\n        end\n    end\n\n    table.insert(result, '|}')\n    return table.concat(result, '\\n')\nend\n\n--- \u5c0d\u7c3d\u540d\u6578\u64da\u9032\u884c\u532f\u7e3d\n-- @param stat \u901a\u904ecount\u51fd\u6578\u5f97\u5230\u7684\u7d71\u8a08\u6578\u64da\n-- @return \u4e00\u500btable\uff0c\u767c\u8a00\u6578\u3001\u767c\u8a00\u4eba\u6578\u3001\u6700\u5f8c\u767c\u8a00\u8005\u3001\u6700\u5f8c\u767c\u8a00\u6642\u9593\nlocal function getstat(data)\n    local count = 0\n    local usercount = 0\n    local lastdate = f.MINDATE\n    local lastname = nil\n    local firstdate = f.MAXDATE\n    local firstname = nil\n\n    for username, userinfo in pairs(data) do\n        count = count + userinfo.count\n        usercount = usercount + 1\n        if comparedate(lastdate, userinfo.lastdate) then\n            lastdate = userinfo.lastdate\n            lastname = username\n        end\n        if comparedate(userinfo.firstdate, firstdate) then\n            firstdate = userinfo.firstdate\n            firstname = username\n        end\n    end\n\n    return {\n        count = count,\n        usercount = usercount,\n        firstdate = firstdate,\n        firstname = firstname,\n        lastdate = lastdate,\n        lastname = lastname\n    }\nend\n\n--- \u7d71\u8a08\u8a0e\u8ad6\u4e32\u4e2d\u5404\u500b\u7c3d\u540d\u7684\u6b21\u6578\u548c\u6700\u5f8c\u767c\u8a00\u6642\u9593\u3002\n-- @param args\n-- @return\nlocal function getcount(args)\n    local talk = string.gsub(args.text, '\\r', '\\n')\n    local userdata = {}\n    local result = { users = userdata, topics = {} }\n    local topics = extracttopic(args) or {}\n\n    for title, content in pairs(topics) do\n        local topicdata = f._count(content)\n\n        for username, userinfo in pairs(topicdata) do\n            local dat = userdata[username] or { count = 0, lastdate = f.MINDATE }\n            dat.count = dat.count + userinfo.count\n            dat.lastdate = comparedate(dat.lastdate, userinfo.lastdate) and userinfo.lastdate or dat.lastdate\n            userdata[username] = dat\n        end\n\n        result.topics[title] = getstat(topicdata)\n        result.topics[title].users = topicdata\n    end\n\n    return result\nend\n\n--- \u7372\u53d6\u6700\u5f8c\u7c3d\u540d\u3002\n-- @param args\n-- @return \u4e00\u500btable\uff0c\u5305\u542b\u7528\u6236\u540d\u548c\u65e5\u671f\u3002\nlocal function getlastsign(args)\n    local r = getcount(args)\n    local lastname = nil\n    local lastdate = f.MINDATE\n\n    for k, v in pairs(r.users) do\n        if comparedate(lastdate, v.lastdate) then\n            lastname = k\n            lastdate = v.lastdate\n        end\n    end\n\n    return {name=lastname, date=lastdate}\nend\n\n--- \u5c07\u7dad\u57fa\u767e\u79d1\u6a21\u677f\u4e0a\u7684\u53c3\u6578\u8f49\u70balua\u7684table\u3002\n-- @param frame \u7dad\u57fa\u767e\u79d1\u6a21\u677f\u4e0a\u7684\u53c3\u6578\u3002\n-- @return \u4e00\u500btable\uff0c\u5305\u62ec\u5404\u500b\u53c3\u6578\u3002\nlocal function getargs(frame)\n    return {\n        text = mw.title.new(frame.args[1]):getContent(),\n        topic = frame.args.topic,\n        ispattern = frame.args.ispattern,\n        userlink = frame.args.userlink,\n        ipuserlink = frame.args.ipuserlink,\n        tabletype = frame.args.type,\n        titlelevel = frame.args.titlelevel\n    }\nend\n\n--- \u7d71\u8a08\u8a0e\u8ad6\u9801\u767c\u8a00\u60c5\u6cc1\u3002\u8a73\u60c5\u898b\u6587\u6a94\u9801\u3002\n-- @param frame \u7dad\u57fa\u767e\u79d1\u9801\u9762\u540d\u3002\n-- @return \u4e00\u5f35\u8868\u683c\u3002\nfunction f.analyse(frame)\n    local args = getargs(frame)\n    return maketable(getcount(args), args)\nend\n\n--- \u7372\u53d6\u6700\u5f8c\u4e00\u500b\u767c\u8a00\u7684\u7528\u6236\u3002\n-- @param frame \u7dad\u57fa\u767e\u79d1\u9801\u9762\u540d\u3002\n-- @return \u4e00\u500b\u7528\u6236\u540d\uff0c\u4e0d\u4f7f\u7528\u93c8\u63a5\u3002\nfunction f.lastname(frame)\n    return getlastsign(getargs(frame)).name\nend\n\n--- \u7372\u53d6\u6700\u5f8c\u4e00\u500b\u767c\u8a00\u7684\u65e5\u671f\u3002\n-- @param frame \u7dad\u57fa\u767e\u79d1\u9801\u9762\u540d\u3002\n-- @return \u4e00\u500b\u65e5\u671f\u3002\nfunction f.lastdate(frame)\n    return getlastsign(getargs(frame)).date\nend\n\n--- \u7372\u53d6\u6700\u5f8c\u4e00\u500b\u7c3d\u540d\u3002\n-- @param frame \u7dad\u57fa\u767e\u79d1\u9801\u9762\u540d\u3002\n-- @return \u4e00\u500b\u7c3d\u540d\u93c8\u63a5\u9644\u4e0a\u4e00\u500b\u65e5\u671f\u3002\nfunction f.lastsign(frame)\n    local args = getargs(frame)\n    local lastsign = getlastsign(args)\n    if lastsign.name then\n        return string.format('%s %s', getuserlink(lastsign.name, args.userlink, args.ipuserlink), lastsign.date)\n    end\nend\n\n--- \u7d71\u8a08\u7c3d\u540d\u6578\u91cf\u3002\n-- @param frame \u7dad\u57fa\u767e\u79d1\u9801\u9762\u540d\u3002\n-- @return \u4e00\u500b\u6578\u5b57\u3002\nfunction f.count(frame)\n    local data = getcount(getargs(frame))\n    local username = frame.args.user and mw.text.trim(frame.args.user)\n\n    if not username then\n        local num = 0\n        for k, v in pairs(data.topics) do\n            num = num + v.count\n        end\n        return num\n    elseif data.users[username] then\n        return data.users[username].count\n    else\n        return 0\n    end\nend\n\n--- \u7d71\u8a08\u7c3d\u540d\u8005\u6578\u91cf\u3002\n-- @param frame \u7dad\u57fa\u767e\u79d1\u9801\u9762\u540d\u3002\n-- @return \u4e00\u500b\u6578\u5b57\u3002\nfunction f.countuser(frame)\n    local data = getcount(getargs(frame)).users\n\n    local count = 0\n    for _ in pairs(data) do\n        count = count + 1\n    end\n\n    return count\nend\n\n-- \u4ee5\u4e0b\u7528\u65bc\u672c\u5730\u6e2c\u8a66\n--[[\nf.countsigns = getcount\nf.lastsign = getlastsign\nf.maketable = maketable\n]]\n\nreturn f"}}}