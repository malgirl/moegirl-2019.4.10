{"parse":{"title":"\u6a21\u5757:MicroJSON","pageid":301520,"wikitext":{"*":"local export = {}\n\nlocal function encode_value(value, schema)\n\tif type(value) == \"string\" then\n\t\treturn export.encode_str(value)\n\telseif type(value) == \"table\" then\n\t\tlocal first = next(value)\n\t\tif first == nil then\n\t\t\treturn (schema and (schema[0] or schema[1])) and \"[]\" or \"{}\"\n\t\telseif first == 1 then\n\t\t\treturn export.encode_array(value, schema)\n\t\telse\n\t\t\treturn export.encode_object(value, schema)\n\t\tend\n\telseif type(value) == \"boolean\" then\n\t\treturn value and \"true\" or \"false\"\n\tend\nend\n\nfunction export.encode_str(str)\n\treturn '\"' .. tostring(str)\n\t\t:gsub('[\"\\\\]', '\\\\%0')\n\t\t:gsub('\\b', '\\\\b')\n\t\t:gsub('\\f', '\\\\f')\n\t\t:gsub('\\n', '\\\\n')\n\t\t:gsub('\\r', '\\\\r')\n\t\t:gsub('\\t', '\\\\t')\n\t\t.. '\"'\nend\n\nfunction export.encode_array(array, schema)\n\tlocal output = {}\n\tfor i, value in ipairs(array) do\n\t\toutput[#output + 1] = encode_value(value, (type(schema) == \"table\") and (schema[i] or schema[0]))\n\tend\n\treturn \"[\" .. table.concat(output, \",\") .. \"]\"\t\t\nend\n\nfunction export.encode_object(object, schema)\n\tlocal output = {}\n\tfor key, value in pairs(object) do\n\t\toutput[#output + 1] = export.encode_str(key) .. \":\" .. encode_value(value, (type(schema) == \"table\") and (schema[key] or schema[true]))\n\tend\n\treturn \"{\" .. table.concat(output, \",\") .. \"}\"\nend\n\nreturn export"}}}